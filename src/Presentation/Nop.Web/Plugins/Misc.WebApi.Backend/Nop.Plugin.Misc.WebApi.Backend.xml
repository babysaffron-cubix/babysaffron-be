<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nop.Plugin.Misc.WebApi.Backend</name>
    </assembly>
    <members>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.GetAll(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets all affiliates
            </summary>
            <param name="friendlyUrlName">Friendly URL name; null to load all records</param>
            <param name="firstName">First name; null to load all records</param>
            <param name="lastName">Last name; null to load all records</param>
            <param name="loadOnlyWithOrders">Value indicating whether to load affiliates only with orders placed (by affiliated customers)</param>
            <param name="ordersCreatedFromUtc">Orders created date from (UTC); null to load all records. It's used only with "loadOnlyWithOrders" parameter st to "true".</param>
            <param name="ordersCreatedToUtc">Orders created date to (UTC); null to load all records. It's used only with "loadOnlyWithOrders" parameter st to "true".</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.GetById(System.Int32)">
            <summary>
            Gets an affiliate
            </summary>
            <param name="id">Affiliate identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.GetByFriendlyUrlName(System.String)">
            <summary>
            Gets an affiliate
            </summary>
            <param name="friendlyUrlName">Affiliate friendly url name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto)">
            <summary>
            Create affiliate
            </summary>
            <param name="model">Affiliate Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto)">
            <summary>
            Update affiliate by Id
            </summary>
            <param name="model">Affiliate Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.Delete(System.Int32)">
            <summary>
            Delete affiliate
            </summary>
            <param name="id">Affiliate identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.GetAffiliateFullName(System.Int32)">
            <summary>
            Get full name
            </summary>
            <param name="affiliateId">Affiliate Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.GenerateUrl(System.Int32)">
            <summary>
            Generate affiliate URL
            </summary>
            <param name="affiliateId">Affiliate Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Affiliates.AffiliatesController.ValidateFriendlyUrlName(System.Int32,System.String)">
            <summary>
            Validate friendly URL name
            </summary>
            <param name="affiliateId">Affiliate Id</param>
            <param name="friendlyUrlName">Friendly URL name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.AuthenticateController.GetToken(Nop.Plugin.Misc.WebApi.Backend.Models.AuthenticateAdminRequest)">
            <summary>
            Authenticate admin
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.Delete(System.Int32)">
            <summary>
            Deletes a blog post
            </summary>
            <param name="id">Blog post Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.GetById(System.Int32)">
            <summary>
            Gets a blog post
            </summary>
            <param name="id">Blog post identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.GetAll(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="storeId">The store identifier; pass 0 to load all records</param>
            <param name="languageId">Language identifier; 0 if you want to get all records</param>
            <param name="dateFrom">Filter by created date; null if you want to get all records</param>
            <param name="dateTo">Filter by created date; null if you want to get all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="title">Filter by blog post title</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.GetAllByTag(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets all blog posts
            </summary>
            <param name="storeId">The store identifier; pass 0 to load all records</param>
            <param name="languageId">Language identifier. 0 if you want to get all blog posts</param>
            <param name="tag">Tag</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto)">
            <summary>
            Inserts a blog post
            </summary>
            <param name="model">Blog post Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto)">
            <summary>
            Updates the blog post
            </summary>
            <param name="model">Blog post Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.ParseTags(System.Int32)">
            <summary>
            Parse tags
            </summary>
            <param name="id">Blog post id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostController.BlogPostIsAvailable(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Get a value indicating whether a blog post is available now (availability dates)
            </summary>
            <param name="id">Blog post id</param>
            <param name="dateTime">Datetime to check; pass null to use current date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Blogs.BlogPostTagController.GetAll(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets all blog post tags
            </summary>
            <param name="storeId">The store identifier; pass 0 to load all records</param>
            <param name="languageId">Language identifier. 0 if you want to get all blog posts</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.GetAllByCustomerId(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets all subscriptions
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.FindSubscription(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets all subscriptions
            </summary>
            <param name="customerId">Customer id</param>
            <param name="productId">Product identifier</param>
            <param name="storeId">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.SendNotificationsToSubscribers(System.Int32)">
            <summary>
            Send notification to subscribers
            </summary>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.GetAllByProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets all subscriptions
            </summary>
            <param name="productId">Product identifier</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.Delete(System.Int32)">
            <summary>
            Delete a back in stock subscription
            </summary>
            <param name="id">Subscription identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.GetById(System.Int32)">
            <summary>
            Gets a subscription
            </summary>
            <param name="id">Subscription identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.BackInStockSubscriptionController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.BackInStockSubscriptionDto)">
            <summary>
            Inserts subscription
            </summary>
            <param name="model">Subscription model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetAllCategoriesByParentCategoryId(System.Int32,System.Boolean)">
            <summary>
            Gets all categories filtered by parent category identifier
            </summary>
            <param name="parentCategoryId">Parent category identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetAllCategoriesDisplayedOnHomepage(System.Boolean)">
            <summary>
            Gets all categories displayed on the home page
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetChildCategoryIds(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets child category identifiers
            </summary>
            <param name="parentCategoryId">Parent category identifier</param>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetCategoriesByAppliedDiscount(System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Get categories for which a discount is applied
            </summary>
            <param name="discountId">Discount identifier; pass null to load all records</param>
            <param name="showHidden">A value indicating whether to load deleted categories</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.DeleteCategories(System.String)">
            <summary>
            Delete a list of categories
            </summary>
            <param name="ids">Array of category identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetNotExistingCategories(System.String)">
            <summary>
            Returns a list of names of not existing categories
            </summary>
            <param name="idsNames">Array of names and/or IDs of the categories to check (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetCategoriesByIds(System.String)">
            <summary>
            Gets categories by identifier
            </summary>
            <param name="ids">Array of category identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetFormattedBreadCrumb(System.Int32,System.String,System.Int32)">
            <summary>
            Get formatted category breadcrumb 
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="separator">Separator</param>
            <param name="languageId">Language identifier for localization</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetCategoryBreadCrumb(System.Int32,System.Boolean)">
            <summary>
            Get category breadcrumb 
            </summary>
            <param name="id">Category id</param>
            <param name="showHidden">A value indicating whether to load hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.Delete(System.Int32)">
            <summary>
            Delete category
            </summary>
            <param name="id">Category</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetById(System.Int32)">
            <summary>
            Gets a category
            </summary>
            <param name="id">Category identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetAll(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Gets all categories
            </summary>
            <param name="categoryName">Category name</param>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="overridePublished">
            null - process "Published" property according to "showHidden" parameter
            true - load only "Published" products
            false - load only "Unpublished" products
            </param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto)">
            <summary>
            Inserts category
            </summary>
            <param name="model">Category</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto)">
            <summary>
            Updates the category
            </summary>
            <param name="model">Category</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.InsertDiscountCategoryMapping(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountCategoryMappingDto)">
            <summary>
            Inserts a discount-category mapping record
            </summary>
            <param name="model">Discount-category mapping</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.DeleteDiscountCategoryMapping(System.Int32)">
            <summary>
            Deletes a discount-category mapping record
            </summary>
            <param name="id">Discount-category mapping</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryController.GetDiscountAppliedToCategory(System.Int32,System.Int32)">
            <summary>
            Get a discount-category mapping record
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryTemplateController.Delete(System.Int32)">
            <summary>
            Delete category template
            </summary>
            <param name="id">Category template identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryTemplateController.GetById(System.Int32)">
            <summary>
            Gets a category template
            </summary>
            <param name="id">Category template identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryTemplateController.GetAll">
            <summary>
            Gets all category templates
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryTemplateController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryTemplateDto)">
            <summary>
            Inserts category template
            </summary>
            <param name="model">Category template</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CategoryTemplateController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryTemplateDto)">
            <summary>
            Updates the category template
            </summary>
            <param name="model">Category template</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CompareProductsController.ClearCompareProducts">
            <summary>
            Clears a "compare products" list
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CompareProductsController.GetComparedProducts">
            <summary>
            Gets a "compare products" list
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CompareProductsController.RemoveProductFromCompareList(System.Int32)">
            <summary>
            Removes a product from a "compare products" list
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CompareProductsController.AddProductToCompareList(System.Int32)">
            <summary>
            Adds a product to a "compare products" list
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CopyProductController.CopyProduct(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a copy of product with all depended data
            </summary>
            <param name="productId">The product id to copy</param>
            <param name="newName">The name of product duplicate</param>
            <param name="isPublished">A value indicating whether the product duplicate should be published</param>
            <param name="copyMultimedia">A value indicating whether the product images and videos should be copied</param>
            <param name="copyAssociatedProducts">A value indicating whether the copy associated products</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CrossSellProductController.GetCrossSellProductsByProductId1(System.Int32,System.Boolean)">
            <summary>
            Gets cross-sell products by product identifier
            </summary>
            <param name="productId1">The first product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.CrossSellProductController.GetCrossSellProductsByShoppingCart(System.String,System.Int32)">
            <summary>
            Gets a cross-sells
            </summary>
            <param name="cart">Array of Shopping cart item identifiers (separator - ;)</param>
            <param name="numberOfProducts">Number of products to return</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.DiscountCategoryMappingController.GetDiscountAppliedToCategory(System.Int32,System.Int32)">
            <summary>
            Get a discount-category mapping record
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.DiscountCategoryMappingController.ClearDiscountCategoryMapping(System.Int32)">
            <summary>
            Clean up category references for a specified discount
            </summary>
            <param name="discountId">Discount Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.DiscountCategoryMappingController.GetAppliedCategoryIds(System.Int32,System.Int32)">
            <summary>
            Get category identifiers to which a discount is applied
            </summary>
            <param name="discountId">Discount Id</param>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.DiscountManufacturerMappingController.GetDiscountAppliedToManufacturer(System.Int32,System.Int32)">
            <summary>
            Get a discount-manufacturer mapping record
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.DiscountManufacturerMappingController.ClearDiscountManufacturerMapping(System.Int32)">
            <summary>
            Clean up manufacturer references for a specified discount
            </summary>
            <param name="discountId">Discount Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.DiscountManufacturerMappingController.GetAppliedManufacturerIds(System.Int32,System.Int32)">
            <summary>
            Get manufacturer identifiers to which a discount is applied
            </summary>
            <param name="discountId">Discount Id</param>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetManufacturersByCategoryId(System.Int32)">
            <summary>
            Gets the manufacturers by category identifier
            </summary>
            <param name="categoryId">Category identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetManufacturersByIds(System.String)">
            <summary>
            Gets manufacturers by identifier
            </summary>
            <param name="ids">Array of manufacturer identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetManufacturersWithAppliedDiscount(System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Get manufacturers for which a discount is applied
            </summary>
            <param name="discountId">Discount identifier; pass null to load all records</param>
            <param name="showHidden">A value indicating whether to load deleted manufacturers</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetNotExistingManufacturers(System.String)">
            <summary>
            Returns a list of names of not existing manufacturers
            </summary>
            <param name="idsNames">The names and/or IDs of the manufacturers to check</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.DeleteManufacturers(System.String)">
            <summary>
            Delete manufacturers
            </summary>
            <param name="ids">Array of manufacturer identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetAll(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Gets all manufacturers
            </summary>
            <param name="manufacturerName">Manufacturer name</param>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="overridePublished">
            null - process "Published" property according to "showHidden" parameter
            true - load only "Published" products
            false - load only "Unpublished" products
            </param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.ClearDiscountManufacturerMapping(System.Int32)">
            <summary>
            Clean up manufacturer references for a specified discount
            </summary>
            <param name="discountId">Discount Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.DeleteDiscountManufacturerMapping(System.Int32)">
            <summary>
            Deletes a discount-manufacturer mapping record
            </summary>
            <param name="mappingId">Discount-manufacturer mapping Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetAppliedManufacturerIds(System.Int32,System.Int32)">
            <summary>
            Get manufacturer identifiers to which a discount is applied
            </summary>
            <param name="discountId">Discount Id</param>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.GetDiscountAppliedToManufacturer(System.Int32,System.Int32)">
            <summary>
            Get a discount-manufacturer mapping record
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ManufacturerController.InsertDiscountManufacturerMapping(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountManufacturerMappingDto)">
            <summary>
            Inserts a discount-manufacturer mapping record
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceCalculationController.GetFinalPrice(System.Int32,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Decimal,System.Boolean,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets the final price
            </summary>
            <param name="productId">Product id</param>
            <param name="customerId">The customer id</param>
            /// <param name="storeId">The store id</param>
            <param name="overriddenProductPrice">Overridden product price. If specified, then it'll be used instead of a product price. For example, used with product attribute combinations</param>
            <param name="additionalCharge">Additional charge</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for final price computation</param>
            <param name="quantity">Shopping cart item quantity</param>
            <param name="rentalStartDate">Rental period start date (for rental products)</param>
            <param name="rentalEndDate">Rental period end date (for rental products)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceCalculationController.GetProductCost(System.Int32,System.String)">
            <summary>
            Gets the product cost (one item)
            </summary>
            <param name="productId">Product Id</param>
            <param name="attributesXml">Shopping cart item attributes in XML</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceCalculationController.GetProductAttributeValuePriceAdjustment(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Decimal},System.Int32)">
            <summary>
            Get a price adjustment of a product attribute value
            </summary>
            <param name="productId">Product id</param>
            <param name="valueId">Product attribute value id</param>
            <param name="customerId">Customer id</param>
            /// <param name="storeId">Store id</param>
            <param name="productPrice">Product price (null for using the base product price)</param>
            <param name="quantity">Shopping cart item quantity</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceCalculationController.RoundPrice(System.Decimal,System.Nullable{System.Int32})">
            <summary>
            Round a product or order total for the currency
            </summary>
            <param name="value">Value to round</param>
            <param name="currencyId">Currency Id; pass null to use the primary store currency</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceCalculationController.Round(System.Decimal,Nop.Core.Domain.Directory.RoundingType)">
            <summary>
            Round
            </summary>
            <param name="value">Value to round</param>
            <param name="roundingType">The rounding type</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatPrice(System.Int32,System.Decimal,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Formats the price
            </summary>
            <param name="price">Price</param>
            <param name="showCurrency">A value indicating whether to show a currency</param>
            <param name="targetCurrency">Target currency code</param>
            <param name="languageId">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <param name="showTax">A value indicating whether to show tax suffix</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatOrderPrice(System.Int32,System.Int32,System.Decimal,System.Decimal,System.String,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Formats the order price
            </summary>
            <param name="price">Price</param>
            <param name="currencyRate">Currency rate</param>
            <param name="customerCurrencyCode">Customer currency code</param>
            <param name="displayCustomerCurrency">A value indicating whether to display price on customer currency</param>
            <param name="primaryStoreCurrencyId">Primary store currency id</param>
            <param name="languageId">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
            <param name="showTax">A value indicating whether to show tax suffix</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatRentalProductPeriod(System.Int32,System.String)">
            <summary>
            Formats the price of rental product (with rental period)
            </summary>
            <param name="productId">Product Id</param>
            <param name="price">Price</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatShippingPrice(System.Int32,System.Decimal,System.Boolean,System.String,System.Boolean)">
            <summary>
            Formats the shipping price
            </summary>
            <param name="price">Price</param>
            <param name="showCurrency">A value indicating whether to show a currency</param>
            <param name="currencyCode">Currency code</param>
            <param name="languageId">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatPaymentMethodAdditionalFee(System.Int32,System.Decimal,System.Boolean,System.String,System.Boolean)">
            <summary>
            Formats the payment method additional fee
            </summary>
            <param name="price">Price</param>
            <param name="showCurrency">A value indicating whether to show a currency</param>
            <param name="currencyCode">Currency code</param>
            <param name="languageId">Language</param>
            <param name="priceIncludesTax">A value indicating whether price includes tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatTaxRate(System.Decimal)">
            <summary>
            Formats a tax rate
            </summary>
            <param name="taxRate">Tax rate</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.PriceFormatterController.FormatBasePrice(System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Format base price (PAngV)
            </summary>
            <param name="productId">Product id</param>
            <param name="productPrice">Product price (in primary currency). Pass null if you want to use a default produce price</param>
            <param name="totalWeight">Total weight of product (with attribute weight adjustment). Pass null if you want to use a default produce weight</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeCombinationController.GetBySku(System.String)">
            <summary>
            Gets a product attribute combination by SKU
            </summary>
            <param name="sku">SKU</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeCombinationPicturesController.GetAll(System.Int32)">
            <summary>
            Get product attribute combination pictures
            </summary>
            <param name="combinationId">Combination id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeController.DeleteProductAttributes(System.String)">
            <summary>
            Delete a list of product attributes
            </summary>
            <param name="ids">Array of product attribute identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeController.GetProductAttributeByIds(System.String)">
            <summary>
            Gets product attributes 
            </summary>
            <param name="ids">Array of product attribute identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeController.GetNotExistingAttributes(System.String)">
            <summary>
            Returns a list of IDs of not existing attributes
            </summary>
            <param name="idsNames">Array of IDs of the attributes to check</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets all product attributes
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeFormatterController.FormatAttributes(System.Int32,System.String)">
            <summary>
            Formats attributes
            </summary>
            <param name="productId">Product Id</param>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeFormatterController.FormatAttributes(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Formats attributes
            </summary>
            <param name="productId">Product Id</param>
            /// <param name="customerId">Customer Id</param>
            <param name="storeId">Store Id</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="separator">Separator</param>
            <param name="htmlEncode">A value indicating whether to encode (HTML) values</param>
            <param name="renderPrices">A value indicating whether to render prices</param>
            <param name="renderProductAttributes">A value indicating whether to render product attributes</param>
            <param name="renderGiftCardAttributes">A value indicating whether to render gift card attributes</param>
            <param name="allowHyperlinks">A value indicating whether to HTML hyperlink tags could be rendered (if required)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.ParseProductAttributeMappings(System.String)">
            <summary>
            Gets selected product attribute mappings
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.ParseProductAttributeValues(System.String,System.Int32)">
            <summary>
            Get product attribute values
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="mappingId">Product attribute mapping identifier; pass 0 to load all values</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.ParseValues(System.String,System.Int32)">
            <summary>
            Gets selected product attribute values
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="mappingId">Product attribute mapping identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.AddProductAttribute(System.String,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds an attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="productAttributeMappingId">Product attribute mapping</param>
            <param name="value">Value</param>
            <param name="quantity">Quantity (used with AttributeValueType.AssociatedToProduct to specify the quantity entered by the customer)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.RemoveProductAttribute(System.String,System.Int32)">
            <summary>
            Remove an attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="mappingId">Product attribute mapping id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.AreProductAttributesEqual(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.AreProductAttributesEqualRequest,System.Boolean,System.Boolean)">
            <summary>
            Are attributes equal
            </summary>
            <param name="ignoreNonCombinableAttributes">A value indicating whether we should ignore non-combinable attributes</param>
            <param name="ignoreQuantity">A value indicating whether we should ignore the quantity of attribute value entered by the customer</param>
            <param name="request">The attributes of the compared products</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.IsConditionMet(System.Int32,System.String)">
            <summary>
            Check whether condition of some attribute is met (if specified). Return "null" if not condition is specified
            </summary>
            <param name="mappingId">Product attribute mapping Id</param>
            <param name="selectedAttributesXml">Selected attributes (XML format)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.FindProductAttributeCombination(System.Int32,System.String,System.Boolean)">
            <summary>
            Finds a product attribute combination by attributes stored in XML 
            </summary>
            <param name="productId">Product</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="ignoreNonCombinableAttributes">A value indicating whether we should ignore non-combinable attributes</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.GenerateAllCombinations(System.Int32,System.Boolean,System.String)">
            <summary>
            Generate all combinations
            </summary>
            <param name="productId">Product</param>
            <param name="ignoreNonCombinableAttributes">A value indicating whether we should ignore non-combinable attributes</param>
            <param name="ids">List of allowed attribute identifiers (separator - ;). If null or empty then all attributes would be used.</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.AddGiftCardAttribute(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add gift card attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="recipientName">Recipient name</param>
            <param name="recipientEmail">Recipient email</param>
            <param name="senderName">Sender name</param>
            <param name="senderEmail">Sender email</param>
            <param name="giftCardMessage">Message</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeParserController.GetGiftCardAttribute(System.String)">
            <summary>
            Get gift card attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductAttributeValuePictureController.GetAll(System.Int32)">
            <summary>
            Get product attribute value pictures
            </summary>
            <param name="valueId">Value id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductCategoryController.GetProductCategoriesByCategoryId(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets product category mapping collection
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductCategoryController.GetProductCategoriesByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product category mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductCategoryController.GetProductCategoryIds(System.String)">
            <summary>
            Get category IDs for products
            </summary>
            <param name="ids">Array of Products Id (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.DeleteProducts(System.String)">
            <summary>
            Delete products
            </summary>
            <param name="ids">Array of product identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetAllProductsDisplayedOnHomepage">
            <summary>
            Gets all products displayed on the home page
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetCategoryFeaturedProducts(System.Int32,System.Int32)">
            <summary>
            Gets featured products by a category identifier
            </summary>
            <param name="categoryId">Category identifier</param>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetManufacturerFeaturedProducts(System.Int32,System.Int32)">
            <summary>
            Gets featured products by a manufacturer identifier
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetProductsMarkedAsNew(System.Int32)">
            <summary>
            Gets products which marked as new
            </summary>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetProductsByIds(System.String)">
            <summary>
            Gets products by identifier
            </summary>
            <param name="ids">Array of product identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetNumberOfProductsInCategory(System.String,System.Int32)">
            <summary>
            Get number of product (published and visible) in certain category
            </summary>
            <param name="categoryIds">Array of category identifiers (separator - ;)</param>
            <param name="storeId">Store identifier; 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetProductsByProductAttributeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets products by product attribute
            </summary>
            <param name="productAttributeId">Product attribute identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetAssociatedProducts(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets associated products
            </summary>
            <param name="parentGroupedProductId">Parent product identifier (used with grouped products)</param>
            <param name="storeId">Store identifier; 0 to load all records</param>
            <param name="vendorId">Vendor identifier; 0 to load all records</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.UpdateProductReviewTotals(System.Int32)">
            <summary>
            Update product review totals
            </summary>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetLowStockProducts(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get low stock products
            </summary>
            <param name="vendorId">Vendor identifier; pass null to load all records</param>
            <param name="loadPublishedOnly">Whether to load published products only; pass null to load all products, pass true to load only published products, pass false to load only unpublished products</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="getOnlyTotalCount">A value in indicating whether you want to load only total number of records. Set to "true" if you don't want to load data from database</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetLowStockProductCombinations(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get low stock product combinations
            </summary>
            <param name="vendorId">Vendor identifier; pass null to load all records</param>
            <param name="loadPublishedOnly">Whether to load combinations of published products only; pass null to load all products, pass true to load only published products, pass false to load only unpublished products</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="getOnlyTotalCount">A value in indicating whether you want to load only total number of records. Set to "true" if you don't want to load data from database</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetProductBySku(System.String)">
            <summary>
            Gets a product by SKU
            </summary>
            <param name="sku">SKU</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetProductsBySku(System.String,System.Int32)">
            <summary>
            Gets a products by SKU array
            </summary>
            <param name="skuArray">SKU array (separator - ;)</param>
            <param name="vendorId">Vendor ID; 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.UpdateHasTierPricesProperty(System.Int32)">
            <summary>
            Update HasTierPrices property (used for performance optimization)
            </summary>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.UpdateHasDiscountsApplied(System.Int32)">
            <summary>
            Update HasDiscountsApplied property (used for performance optimization)
            </summary>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetNumberOfProductsByVendorId(System.Int32)">
            <summary>
            Gets number of products by vendor identifier
            </summary>
            <param name="vendorId">Vendor identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.ParseRequiredProductIds(System.Int32)">
            <summary>
            Parse "required product Ids" property
            </summary>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.ProductIsAvailable(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Get a value indicating whether a product is available now (availability dates)
            </summary>
            <param name="productId">Product Id</param>
            <param name="dateTime">Datetime to check; pass null to use current date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.ParseAllowedQuantities(System.Int32)">
            <summary>
            Get a list of allowed quantities (parse 'AllowedQuantities' property)
            </summary>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetTotalStockQuantity(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Get total quantity
            </summary>
            <param name="productId">Product id</param>
            <param name="useReservedQuantity">
            A value indicating whether we should consider "Reserved Quantity" property 
            when "multiple warehouses" are used
            </param>
            <param name="warehouseId">
            Warehouse identifier. Used to limit result to certain warehouse.
            Used only with "multiple warehouses" enabled.
            </param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetRentalPeriods(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Get number of rental periods (price ratio)
            </summary>
            <param name="productId">Product id</param>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.FormatStockMessage(System.Int32,System.String)">
            <summary>
            Formats the stock availability/quantity message
            </summary>
            <param name="productId">Product Id</param>
            <param name="attributesXml">Selected product attributes in XML format (if specified)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.FormatSku(System.Int32,System.String)">
            <summary>
            Formats SKU
            </summary>
            <param name="productId">Product Id</param>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.FormatMpn(System.Int32,System.String)">
            <summary>
            Formats manufacturer part number
            </summary>
            <param name="productId">Product Id</param>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.FormatGtin(System.Int32,System.String)">
            <summary>
            Formats GTIN
            </summary>
            <param name="productId">Product Id</param>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.FormatRentalDate(System.Int32,System.DateTime)">
            <summary>
            Formats start/end date for rental product
            </summary>
            <param name="productId">Product Id</param>
            <param name="date">date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.UpdateProductStoreMappings(System.Int32,System.String)">
            <summary>
            Update product store mappings
            </summary>
            <param name="productId">Product Id</param>
            <param name="storesIds">A list of store ids for mapping (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.HasAnyDownloadableProduct(System.String)">
            <summary>
            Gets the value whether the sequence contains downloadable products
            </summary>
            <param name="productIds">Product identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.HasAnyGiftCardProduct(System.String)">
            <summary>
            Gets the value whether the sequence contains gift card products
            </summary>
            <param name="productIds">Product identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.HasAnyRecurringProduct(System.String)">
            <summary>
            Gets the value whether the sequence contains recurring products
            </summary>
            <param name="productIds">Product identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetNotExistingProducts(System.String)">
            <summary>
            Returns a list of sku of not existing products
            </summary>
            <param name="productSku">The sku of the products to check</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetAll(System.Int32,System.Int32,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Int32,System.Int32,System.Int32,System.Nullable{Nop.Core.Domain.Catalog.ProductType},System.Boolean,System.Boolean,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String,Nop.Core.Domain.Catalog.ProductSortingEnum,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Search products
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="categoryIds">Category identifiers</param>
            <param name="manufacturerIds">Manufacturer identifiers</param>
            <param name="storeId">Store identifier; 0 to load all records</param>
            <param name="vendorId">Vendor identifier; 0 to load all records</param>
            <param name="warehouseId">Warehouse identifier; 0 to load all records</param>
            <param name="productType">Product type; 0 to load all records</param>
            <param name="visibleIndividuallyOnly">A values indicating whether to load only products marked as "visible individually"; "false" to load all records; "true" to load "visible individually" only</param>
            <param name="excludeFeaturedProducts">A value indicating whether loaded products are marked as featured (relates only to categories and manufacturers); "false" (by default) to load all records; "true" to exclude featured products from results</param>
            <param name="priceMin">Minimum price; null to load all records</param>
            <param name="priceMax">Maximum price; null to load all records</param>
            <param name="productTagId">Product tag identifier; 0 to load all records</param>
            <param name="keywords">Keywords</param>
            <param name="searchDescriptions">A value indicating whether to search by a specified "keyword" in product descriptions</param>
            <param name="searchManufacturerPartNumber">A value indicating whether to search by a specified "keyword" in manufacturer part number</param>
            <param name="searchSku">A value indicating whether to search by a specified "keyword" in product SKU</param>
            <param name="searchProductTags">A value indicating whether to search by a specified "keyword" in product tags</param>
            <param name="languageId">Language identifier (search for text searching)</param>
            <param name="filteredSpecOptionIds">Specification options list to filter products; null to load all records (separator - ;)</param>
            <param name="orderByType">Order by</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="overridePublished">
            null - process "Published" property according to "showHidden" parameter
            true - load only "Published" products
            false - load only "Unpublished" products
            </param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetProductsWithAppliedDiscount(System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Get products for which a discount is applied
            </summary>
            <param name="discountId">Discount identifier; pass null to load all records</param>
            <param name="showHidden">A value indicating whether to load deleted products</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.AdjustInventory(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Adjust inventory
            </summary>
            <param name="productId">Product identifier</param>
            <param name="quantityToChange">Quantity to increase or decrease</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="message">Message for the stock quantity history</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.BookReservedInventory(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Book the reserved quantity
            </summary>
            <param name="productId">Product identifier</param>
            <param name="warehouseId">Warehouse identifier</param>
            <param name="quantity">Quantity, must be negative</param>
            <param name="message">Message for the stock quantity history</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.ReverseBookedInventory(System.Int32,System.Int32,System.String)">
            <summary>
            Reverse booked inventory (if acceptable)
            </summary>
            <param name="productId">product identifier</param>
            <param name="shipmentItemId">Shipment item identifier</param>
            <param name="message">Message for the stock quantity history</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.AddStockQuantityHistoryEntry(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            Add stock quantity change entry
            </summary>
            <param name="productId">Product identifier</param>
            <param name="quantityAdjustment">Quantity adjustment</param>
            <param name="stockQuantity">Current stock quantity</param>
            <param name="warehouseId">Warehouse identifier</param>
            <param name="message">Message</param>
            <param name="combinationId">Product attribute combination identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductController.GetStockQuantityHistory(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the history of the product stock quantity changes
            </summary>
            <param name="productId">Product identifier</param>
            <param name="warehouseId">Warehouse identifier; pass 0 to load all entries</param>
            <param name="combinationId">Product attribute combination identifier; pass 0 to load all entries</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductDiscountsController.ClearDiscountProductMapping(System.Int32)">
            <summary>
            Clean up product references for a specified discount
            </summary>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductDiscountsController.GetAllDiscountsAppliedToProduct(System.Int32)">
            <summary>
            Get a discount-product mapping records by product identifier
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductDiscountsController.GetDiscountAppliedToProduct(System.Int32,System.Int32)">
            <summary>
            Get a discount-product mapping record
            </summary>
            <param name="productId">Product identifier</param>
            <param name="discountId">Discount identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductManufacturerController.GetProductManufacturersByProductId(System.Int32,System.Boolean)">
            <summary>
            Gets a product manufacturer mapping collection
            </summary>
            <param name="productId">Product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductManufacturerController.GetProductManufacturerIds(System.String)">
            <summary>
            Get manufacturer IDs for products
            </summary>
            <param name="ids">Array of Products Id (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductManufacturerController.GetProductManufacturersByManufacturerId(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets product manufacturer collection
            </summary>
            <param name="manufacturerId">Manufacturer identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductPicturesController.GetProductPicturesByProductId(System.Int32)">
            <summary>
            Gets a product pictures by product identifier
            </summary>
            <param name="productId">The product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductPicturesController.GetProductsImagesIds(System.String)">
            <summary>
            Get the IDs of all product images 
            </summary>
            <param name="productsIds">Array of product identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewController.GetProductReviewsByIds(System.String)">
            <summary>
            Get product reviews by identifiers
            </summary>
            <param name="ids">Array of Product review identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewController.DeleteProductReviews(System.String)">
            <summary>
            Deletes product reviews
            </summary>
            <param name="ids">Array of Product review identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewController.SetProductReviewHelpfulness(System.Int32,System.Boolean)">
            <summary>
            Sets or create a product review helpfulness record
            </summary>
            <param name="productReviewId">Product review identifier</param>
            <param name="helpfulness">Value indicating whether a review a helpful</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewController.UpdateProductReviewHelpfulnessTotals(System.Int32)">
            <summary>
            Updates a totals helpfulness count for product review
            </summary>
            <param name="productReviewId">Product review identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewController.CanAddReview(System.Int32,System.Int32)">
            <summary>
            Check possibility added review for current customer
            </summary>
            <param name="productId">Current product</param>
            <param name="storeId">The store identifier; pass 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewController.GetAll(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets all product reviews
            </summary>
            <param name="customerId">Customer identifier (who wrote a review); 0 to load all records</param>
            <param name="approved">A value indicating whether to content is approved; null to load all records</param> 
            <param name="fromUtc">Item creation from; null to load all records</param>
            <param name="toUtc">Item item creation to; null to load all records</param>
            <param name="message">Search title or review text; null to load all records</param>
            <param name="storeId">The store identifier; pass 0 to load all records</param>
            <param name="productId">The product identifier; pass 0 to load all records</param>
            <param name="vendorId">The vendor identifier (limit to products of this vendor); pass 0 to load all records</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewReviewTypeMappingController.GetProductReviewReviewTypeMappingsByProductReviewId(System.Int32)">
            <summary>
            Get product review and review type mappings by product review identifier
            </summary>
            <param name="productReviewId">The product review identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductReviewReviewTypeMappingController.InsertProductReviewReviewTypeMappings(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewReviewTypeMappingDto)">
            <summary>
            Inserts a product review and review type mapping
            </summary>
            <param name="model">Product review and review type mapping</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductSpecificationAttributeController.GetProductSpecificationAttributeCount(System.Int32,System.Int32)">
            <summary>
            Gets a count of product specification attribute mapping records
            </summary>
            <param name="productId">Product identifier; 0 to load all records</param>
            <param name="specificationAttributeOptionId">The specification attribute option identifier; 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductSpecificationAttributeController.GetProductsBySpecificationAttributeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get mapped products for specification attribute
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductSpecificationAttributeController.GetAll(System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Gets a product specification attribute mapping collection
            </summary>
            <param name="productId">Product identifier; 0 to load all records</param>
            <param name="specificationAttributeOptionId">Specification attribute option identifier; 0 to load all records</param>
            <param name="allowFiltering">0 to load attributes with AllowFiltering set to false, 1 to load attributes with AllowFiltering set to true, null to load all attributes</param>
            <param name="showOnProductPage">0 to load attributes with ShowOnProductPage set to false, 1 to load attributes with ShowOnProductPage set to true, null to load all attributes</param>
            <param name="specificationAttributeGroupId">Specification attribute group identifier; 0 to load all records; null to load attributes without group</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.DeleteProductTags(System.String)">
            <summary>
            Delete product tags
            </summary>
            <param name="ids">Array of product tag identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.GetCategoriesByIds(System.String)">
            <summary>
            Gets product tags by identifier
            </summary>
            <param name="ids">Array of product tags identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.GetAllProductTagsByProductId(System.Int32)">
            <summary>
            Gets all product tags by product identifier
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.GetProductCountByProductTagId(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get products quantity linked to a passed tag identifier
            </summary>
            <param name="productTagId">Product tag identifier</param>
            <param name="storeId">Store identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.GetProductCount(System.Int32,System.Boolean)">
            <summary>
            Get product count for every linked tag
            </summary>
            <param name="storeId">Store identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.UpdateProductTags(System.Int32,System.String)">
            <summary>
            Update product tags
            </summary>
            <param name="productId">Product id for update</param>
            <param name="productTags">Array of product tags (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.InsertProductTag(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTagDto)">
            <summary>
            Insert product tag
            </summary>
            <param name="productTag">Product tag for insert</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.GetAll(System.String)">
            <summary>
            Gets all product tags
            </summary>
            <param name="tagName">Tag name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductTagController.InsertProductProductTagMapping(Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductProductTagMappingDto)">
            <summary>
            Inserts a product-product tag mapping
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductVideosController.GetProductVideosByProductId(System.Int32)">
            <summary>
            Gets a product videos by product identifier
            </summary>
            <param name="productId">The product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.ProductWarehouseController.GetAllProductWarehouseInventoryRecords(System.Int32)">
            <summary>
            Get a product warehouse-inventory records by product identifier
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.RecentlyViewedProductsController.GetRecentlyViewedProducts(System.Int32)">
            <summary>
            Gets a "recently viewed products" list
            </summary>
            <param name="number">Number of products to load</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.RecentlyViewedProductsController.AddProductToRecentlyViewedList(System.Int32)">
            <summary>
            Adds a product to a recently viewed products list
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.RelatedProductsController.GetRelatedProductsByProductId1(System.Int32,System.Boolean)">
            <summary>
            Gets related products by product identifier
            </summary>
            <param name="productId1">The first product identifier</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeController.GetSpecificationAttributeByIds(System.String)">
            <summary>
            Gets specification attributes
            </summary>
            <param name="ids">The specification attribute identifiers</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeController.GetAllWithOptions">
            <summary>
            Gets specification attributes
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeController.GetAllByGroupId(System.Nullable{System.Int32})">
            <summary>
            Gets specification attributes by group identifier
            </summary>
            <param name="groupId">The specification attribute group identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeController.DeleteSpecificationAttributes(System.String)">
            <summary>
            Deletes specifications attributes
            </summary>
            <param name="ids">Specification attributes id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets specification attributes
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeGroupController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets specification attribute groups
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeGroupController.GetProductSpecificationAttributeGroups(System.Int32)">
            <summary>
            Gets product specification attribute groups
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeOptionController.GetSpecificationAttributeOptionsByIds(System.String)">
            <summary>
            Get specification attribute options by identifiers
            </summary>
            <param name="ids">Identifiers</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeOptionController.GetNotExistingSpecificationAttributeOptions(System.String)">
            <summary>
            Returns a list of IDs of not existing specification attribute options
            </summary>
            <param name="ids">The IDs of the attribute options to check</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeOptionController.GetSpecificationAttributeOptionsBySpecificationAttribute(System.Int32)">
            <summary>
            Gets a specification attribute option by specification attribute id
            </summary>
            <param name="specificationAttributeId">The specification attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeOptionController.GetFiltrableSpecificationAttributeOptionsByCategoryId(System.Int32)">
            <summary>
            Gets the filtrable specification attribute options by category id
            </summary>
            <param name="categoryId">The category id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.SpecificationAttributeOptionController.GetFiltrableSpecificationAttributeOptionsByManufacturerId(System.Int32)">
            <summary>
            Gets the filtrable specification attribute options by manufacturer id
            </summary>
            <param name="manufacturerId">The manufacturer id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.TierPricesController.GetTierPrices(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a product tier prices for customer
            </summary>
            <param name="productId">Product</param>
            <param name="customerId">Customer</param>
            <param name="storeId">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.TierPricesController.GetTierPricesByProduct(System.Int32)">
            <summary>
            Gets a tier prices by product identifier
            </summary>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Catalog.TierPricesController.GetPreferredTierPrice(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a preferred tier price
            </summary>
            <param name="productId">Product</param>
            <param name="customerId">Customer</param>
            <param name="storeId">Store identifier</param>
            <param name="quantity">Quantity</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeController.GetAll">
            <summary>
            Gets all address attributes
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeFormatterController.FormatAttributes(System.String,System.String,System.Boolean)">
            <summary>
            Formats attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="separator">Separator</param>
            <param name="htmlEncode">A value indicating whether to encode (HTML) values</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeParserController.ParseAddressAttributes(System.String)">
            <summary>
            Gets selected address attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeParserController.ParseAddressAttributeValues(System.String)">
            <summary>
            Get address attribute values
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeParserController.ParseValues(System.String,System.Int32)">
            <summary>
            Gets selected address attribute value
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="addressAttributeId">Address attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeParserController.AddAddressAttribute(System.String,System.Int32,System.String)">
            <summary>
            Adds an attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="addressAttributeId">Address attribute</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeParserController.GetAttributeWarnings(System.String)">
            <summary>
            Validates address attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressAttributeValueController.GetAll(System.Int32)">
            <summary>
            Gets address attribute values by address attribute identifier
            </summary>
            <param name="addressAttributeId">The address attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressController.GetAddressTotalByCountryId(System.Int32)">
            <summary>
            Gets total number of addresses by country identifier
            </summary>
            <param name="countryId">Country identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressController.GetAddressTotalByStateProvinceId(System.Int32)">
            <summary>
            Gets total number of addresses by state/province identifier
            </summary>
            <param name="stateProvinceId">State/province identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.AddressController.IsAddressValid(Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto)">
            <summary>
            Gets a value indicating whether address is valid (can be saved)
            </summary>
            <param name="address">Address to validate</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.GenericAttributeController.DeleteAttributes(System.String)">
            <summary>
            Deletes an attributes
            </summary>
            <param name="ids">Array of attributes identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.GenericAttributeController.GetAttributesForEntity(System.Int32,System.String)">
            <summary>
            Get attributes
            </summary>
            <param name="entityId">Entity identifier</param>
            <param name="keyGroup">Key group</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.GenericAttributeController.SaveAttribute(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Save attribute value
            </summary>
            <param name="storeId">Store identifier; pass 0 if this attribute will be available for all stores</param>
            <param name="entityId">Entity Id</param>
            <param name="entityTypeName">Entity type name</param>
            <param name="key">Key</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.GenericAttributeController.GetAttribute(System.Int32,System.String,System.String,System.Int32,System.Object)">
            <summary>
            Get an attribute of an entity
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.MaintenanceController.GetAllBackupFiles">
            <summary>
            Gets all backup files
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.MaintenanceController.CreateNewBackupFilePath">
            <summary>
            Creates a path to a new database backup file
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.MaintenanceController.GetBackupPath(System.String)">
            <summary>
            Returns the path to the backup file
            </summary>
            <param name="backupFileName">The name of the backup file</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.SearchTermController.GetSearchTermByKeyword(System.String,System.Int32)">
            <summary>
            Gets a search term record by keyword
            </summary>
            <param name="keyword">Search term keyword</param>
            <param name="storeId">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Common.SearchTermController.GetStats(System.Int32,System.Int32)">
            <summary>
            Gets a search term statistics
            </summary>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.CommonInfoController.GetSwaggerDocVersion">
            <summary>
            Gets swagger doc version API
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeController.GetAll">
            <summary>
            Gets all customer attributes
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeFormatterController.FormatAttributes(System.String,System.String,System.Boolean)">
            <summary>
            Formats attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="separator">Separator</param>
            <param name="htmlEncode">A value indicating whether to encode (HTML) values</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeParserController.ParseCustomerAttributes(System.String)">
            <summary>
            Gets selected customer attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeParserController.ParseCustomerAttributeValues(System.String)">
            <summary>
            Get customer attribute values
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeParserController.ParseValues(System.String,System.Int32)">
            <summary>
            Gets selected customer attribute value
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="attributeId">Customer attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeParserController.AddCustomerAttribute(System.String,System.Int32,System.String)">
            <summary>
            Adds an attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="customerAttributeId">Customer attribute</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeParserController.GetAttributeWarnings(System.String)">
            <summary>
            Validates customer attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerAttributeValueController.GetAll(System.Int32)">
            <summary>
            Gets customer attribute values by customer attribute identifier
            </summary>
            <param name="attributeId">The customer attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetOnlineCustomers(System.String,System.DateTime,System.Int32,System.Int32)">
            <summary>
            Gets online customers
            </summary>
            <param name="lastActivityFromUtc">Customer last activity date (from)</param>
            <param name="ids">A list of customer role identifiers (separator - ;) to filter by (at least one match); pass null or empty list in order to load all customers; </param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomersWithShoppingCarts(System.Nullable{Nop.Core.Domain.Orders.ShoppingCartType},System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            Gets customers with shopping carts
            </summary>
            <param name="shoppingCartType">Shopping cart type; pass null to load all records</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="productId">Product identifier; pass null to load all records</param>
            <param name="createdFromUtc">Created date from (UTC); pass null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); pass null to load all records</param>
            <param name="countryId">Billing country identifier; pass null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomersByIds(System.String)">
            <summary>
            Get customers by identifiers
            </summary>
            <param name="ids">Array of customer identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomersByGuids(System.String)">
            <summary>
            Get customers by guids
            </summary>
            <param name="customerGuids">Customer guids</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetNotExistingCustomers(System.String)">
            <summary>
            Returns a list of guids of not existing customers
            </summary>
            <param name="customerGuids">The guids of the customers to check</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerByGuid(System.Guid)">
            <summary>
            Gets a customer by GUID
            </summary>
            <param name="guid">Customer GUID</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerByEmail(System.String)">
            <summary>
            Get customer by email
            </summary>
            <param name="email">Email</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerBySystemName(System.String)">
            <summary>
            Get customer by system role
            </summary>
            <param name="systemName">System name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerByUsername(System.String)">
            <summary>
            Get customer by username
            </summary>
            <param name="username">Username</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.ResetCheckoutData(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Reset data required for checkout
            </summary>
            <param name="customerId">Customer</param>
            <param name="storeId">Store identifier</param>
            <param name="clearCouponCodes">A value indicating whether to clear coupon code</param>
            <param name="clearCheckoutAttributes">A value indicating whether to clear selected checkout attributes</param>
            <param name="clearRewardPoints">A value indicating whether to clear "Use reward points" flag</param>
            <param name="clearShippingMethod">A value indicating whether to clear selected shipping method</param>
            <param name="clearPaymentMethod">A value indicating whether to clear selected payment method</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.DeleteGuestCustomers(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Delete guest customer records
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerDefaultTaxDisplayType(System.Int32)">
            <summary>
            Gets a default tax display type (if configured)
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerFullName(System.Int32)">
            <summary>
            Get full name
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.FormatUsername(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Formats the customer name
            </summary>
            <param name="customerId">Source</param>
            <param name="stripTooLong">Strip too long customer name</param>
            <param name="maxLength">Maximum customer name length</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.ParseAppliedDiscountCouponCodes(System.Int32)">
            <summary>
            Gets coupon codes
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.ApplyDiscountCouponCode(System.Int32,System.String)">
            <summary>
            Adds a coupon code
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="couponCode">Coupon code</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.RemoveDiscountCouponCode(System.Int32,System.String)">
            <summary>
            Removes a coupon code
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="couponCode">Coupon code to remove</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.ParseAppliedGiftCardCouponCodes(System.Int32)">
            <summary>
            Gets coupon codes
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.ApplyGiftCardCouponCode(System.Int32,System.String)">
            <summary>
            Adds a coupon code
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="couponCode">Coupon code to remove</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.RemoveGiftCardCouponCode(System.Int32,System.String)">
            <summary>
            Removes a coupon code
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="couponCode">Coupon code to remove</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetAll(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets all customers
            </summary>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="lastActivityFromUtc">Last activity date from (UTC); null to load all records</param>
            <param name="lastActivityToUtc">Last activity date to (UTC); null to load all records</param>
            <param name="affiliateId">Affiliate identifier</param>
            <param name="vendorId">Vendor identifier</param>
            <param name="customerRoleIds">A list of customer role identifiers (separator - ;) to filter by (at least one match); pass null or empty list in order to load all customers; </param>
            <param name="email">Email; null to load all customers</param>
            <param name="username">Username; null to load all customers</param>
            <param name="firstName">First name; null to load all customers</param>
            <param name="lastName">Last name; null to load all customers</param>
            <param name="dayOfBirth">Day of birth; 0 to load all customers</param>
            <param name="monthOfBirth">Month of birth; 0 to load all customers</param>
            <param name="company">Company; null to load all customers</param>
            <param name="phone">Phone; null to load all customers</param>
            <param name="zipPostalCode">Phone; null to load all customers</param>
            <param name="ipAddress">IP address; null to load all customers</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="getOnlyTotalCount">A value in indicating whether you want to load only total number of records. Set to "true" if you don't want to load data from database</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetAddressesByCustomerId(System.Int32)">
            <summary>
            Gets a list of addresses mapped to customer
            </summary>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerAddress(System.Int32,System.Int32)">
            <summary>
            Gets a address mapped to customer
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerBillingAddress(System.Int32)">
            <summary>
            Gets a customer billing address
            </summary>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.GetCustomerShippingAddress(System.Int32)">
            <summary>
            Gets a customer shipping address
            </summary>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.RemoveCustomerAddress(System.Int32,System.Int32)">
            <summary>
            Remove a customer-address mapping record
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerController.InsertCustomerAddress(System.Int32,System.Int32)">
            <summary>
            Inserts a customer-address mapping record
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerPasswordController.GetCurrentPassword(System.Int32)">
            <summary>
            Get current customer password
            </summary>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerPasswordController.IsPasswordRecoveryTokenValid(System.Int32,System.String)">
            <summary>
            Check whether password recovery token is valid
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="token">Token to validate</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerPasswordController.IsPasswordRecoveryLinkExpired(System.Int32)">
            <summary>
            Check whether password recovery link is expired
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerPasswordController.IsPasswordExpired(System.Int32)">
            <summary>
            Check whether customer password is expired 
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerPasswordController.GetAll(System.Nullable{System.Int32},System.Nullable{Nop.Core.Domain.Customers.PasswordFormat},System.Nullable{System.Int32})">
            <summary>
            Gets customer passwords
            </summary>
            <param name="customerId">Customer identifier; pass null to load all records</param>
            <param name="passwordFormat">Password format; pass null to load all records</param>
            <param name="passwordsToReturn">Number of returning passwords; pass null to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRegistrationController.ValidateCustomer(System.String,System.String)">
            <summary>
            Validate customer
            </summary>
            <param name="usernameOrEmail">Username or email</param>
            <param name="password">Password</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRegistrationController.RegisterCustomer(System.Int32,System.Int32,System.String,System.String,System.String,Nop.Core.Domain.Customers.PasswordFormat,System.Boolean)">
            <summary>
             Register customer
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="storeId">Store identifier</param>
            <param name="email">Email</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="passwordFormat">Password format</param>
            <param name="isApproved">Is approved</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRegistrationController.ChangePassword(System.String,System.Boolean,Nop.Core.Domain.Customers.PasswordFormat,System.String,System.String,System.String)">
            <summary>
            Change password
            </summary>
            <param name="email">Email</param>
            <param name="validateRequest">A value indicating whether we should validate request</param>
            <param name="passwordFormat">Password format</param>
            <param name="newPassword">New password</param>
            <param name="oldPassword">Old password</param>
            <param name="hashedPasswordFormat">Hashed password format (e.g. SHA1, SHA512)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRegistrationController.SetEmail(System.Int32,System.String,System.Boolean)">
            <summary>
            Sets a user email
            </summary>
            <param name="customerId">Customer</param>
            <param name="newEmail">New email</param>
            <param name="requireValidation">Require validation of new email address</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRegistrationController.SetUsername(System.Int32,System.String)">
            <summary>
            Sets a customer username
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="newUsername">New Username</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerReportController.GetRegisteredCustomersReport(System.Int32)">
            <summary>
            Gets a report of customers registered in the last days
            </summary>
            <param name="days">Customers registered in the last days</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerReportController.GetBestCustomersReport(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Nop.Core.Domain.Orders.OrderStatus},System.Nullable{Nop.Core.Domain.Payments.PaymentStatus},System.Nullable{Nop.Core.Domain.Shipping.ShippingStatus},Nop.Services.Orders.OrderByEnum,System.Int32,System.Int32)">
            <summary>
            Get best customers
            </summary>
            <param name="createdFromUtc">Order created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Order created date to (UTC); null to load all records</param>
            <param name="orderStatus">Order status; null to load all records</param>
            <param name="paymentStatus">Order payment status; null to load all records</param>
            <param name="shippingStatus">Order shipment status; null to load all records</param>
            <param name="orderBy">1 - order by order total, 2 - order by number of orders</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.AddCustomerRoleMapping(Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerCustomerRoleMappingDto)">
            <summary>
            Add a customer-customer role mapping
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.RemoveCustomerRoleMapping(System.Int32,System.Int32)">
            <summary>
            Remove a customer-customer role mapping
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="roleId">Customer role Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.GetCustomerRoleIds(System.Int32,System.Boolean)">
            <summary>
            Get customer role identifiers
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="showHidden">A value indicating whether to load hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.GetCustomerRoles(System.Int32,System.Boolean)">
            <summary>
            Gets list of customer roles
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="showHidden">A value indicating whether to load hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.IsInCustomerRole(System.Int32,System.String,System.Boolean)">
            <summary>
            Gets a value indicating whether customer is in a certain customer role
            </summary>
            <param name="customerId">Customer</param>
            <param name="customerRoleSystemName">Customer role system name</param>
            <param name="onlyActiveCustomerRoles">A value indicating whether we should look only in active customer roles</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.IsAdmin(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether customer is administrator
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="onlyActive">A value indicating whether we should look only in active customer roles</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.IsForumModerator(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether customer is a forum moderator
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="onlyActive">A value indicating whether we should look only in active customer roles</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.IsRegistered(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether customer is registered
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="onlyActive">A value indicating whether we should look only in active customer roles</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.IsGuest(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether customer is guest
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="onlyActive">A value indicating whether we should look only in active customer roles</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.IsVendor(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether customer is vendor
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="onlyActive">A value indicating whether we should look only in active customer roles</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.GetCustomerRoleBySystemName(System.String)">
            <summary>
            Gets a customer role
            </summary>
            <param name="systemName">Customer role system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Customers.CustomerRoleController.GetAll(System.Boolean)">
            <summary>
            Gets all customer roles
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetAllCountries(System.Int32,System.Boolean)">
            <summary>
            Gets all countries
            </summary>
            <param name="languageId">Language identifier. It's used to sort countries by localized names (if specified); pass 0 to skip it</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetAllCountriesForBilling(System.Int32,System.Boolean)">
            <summary>
            Gets all countries that allow billing
            </summary>
            <param name="languageId">Language identifier. It's used to sort countries by localized names (if specified); pass 0 to skip it</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetAllCountriesForShipping(System.Int32,System.Boolean)">
            <summary>
            Gets all countries that allow shipping
            </summary>
            <param name="languageId">Language identifier. It's used to sort countries by localized names (if specified); pass 0 to skip it</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetCountryByAddress(System.Int32)">
            <summary>
            Gets a country by address 
            </summary>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetCountriesByIds(System.String)">
            <summary>
            Get countries by identifiers
            </summary>
            <param name="ids">Array of country identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetCountryByTwoLetterIsoCode(System.String)">
            <summary>
            Gets a country by two letter ISO code
            </summary>
            <param name="twoLetterIsoCode">Country two letter ISO code</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CountryController.GetCountryByThreeLetterIsoCode(System.String)">
            <summary>
            Gets a country by three letter ISO code
            </summary>
            <param name="threeLetterIsoCode">Country three letter ISO code</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.GetCurrencyByCode(System.String)">
            <summary>
            Gets a currency by code
            </summary>
            <param name="currencyCode">Currency code</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.GetAll(System.Int32,System.Boolean)">
            <summary>
            Gets all currencies
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="storeId">Load records allowed only in a specified store; pass 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.GetCurrencyLiveRates(System.String)">
            <summary>
            Gets live rates regarding the passed currency
            </summary>
            <param name="currencyCode">Currency code; pass null to use primary exchange rate currency</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.ConvertCurrency(System.Decimal,System.Decimal)">
            <summary>
            Converts currency
            </summary>
            <param name="amount">Amount</param>
            <param name="exchangeRate">Currency exchange rate</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.ConvertToPrimaryStoreCurrency(System.Decimal,System.Int32)">
            <summary>
            Converts to primary store currency 
            </summary>
            <param name="amount">Amount</param>
            <param name="currencyId">Source currency Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.ConvertFromPrimaryStoreCurrency(System.Decimal,System.Int32)">
            <summary>
            Converts from primary store currency
            </summary>
            <param name="amount">Amount</param>
            <param name="currencyId">Target currency Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.ConvertCurrency(System.Decimal,System.Int32,System.Int32)">
            <summary>
            Converts currency
            </summary>
            <param name="amount">Amount</param>
            <param name="sourceCurrencyId">Source currency code</param>
            <param name="targetCurrencyId">Target currency code</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.ConvertToPrimaryExchangeRateCurrency(System.Decimal,System.Int32)">
            <summary>
            Converts to primary exchange rate currency 
            </summary>
            <param name="amount">Amount</param>
            <param name="currencyId">Source currency Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.CurrencyController.ConvertFromPrimaryExchangeRateCurrency(System.Decimal,System.Int32)">
            <summary>
            Converts from primary exchange rate currency
            </summary>
            <param name="amount">Amount</param>
            <param name="currencyId">Target currency code</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.GeoLookupController.LookupCountryIsoCode(System.String)">
            <summary>
            Get country ISO code
            </summary>
            <param name="ipAddress">IP address</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.GeoLookupController.LookupCountryName(System.String)">
            <summary>
            Get country name
            </summary>
            <param name="ipAddress">IP address</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureDimensionController.ConvertDimension(System.Decimal,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Converts dimension
            </summary>
            <param name="value">Value to convert</param>
            <param name="sourceMeasureDimensionId">Source dimension</param>
            <param name="targetMeasureDimensionId">Target dimension</param>
            <param name="round">A value indicating whether a result should be rounded</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureDimensionController.ConvertFromPrimaryMeasureDimension(System.Decimal,System.Int32)">
            <summary>
            Converts from primary dimension
            </summary>
            <param name="value">Value to convert</param>
            <param name="measureDimensionId">Target dimension Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureDimensionController.ConvertToPrimaryMeasureDimension(System.Decimal,System.Int32)">
            <summary>
            Converts to primary measure dimension
            </summary>
            <param name="value">Value to convert</param>
            <param name="measureDimensionId">Source dimension Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureDimensionController.GetBySystemKeyword(System.String)">
            <summary>
            Gets a measure dimension by system keyword
            </summary>
            <param name="systemKeyword">The system keyword</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureDimensionController.GetAll">
            <summary>
            Gets all measure dimensions
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureWeightController.GetBySystemKeyword(System.String)">
            <summary>
            Gets a measure weight by system keyword
            </summary>
            <param name="systemKeyword">The system keyword</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureWeightController.ConvertWeight(System.Decimal,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Converts weight
            </summary>
            <param name="value">Value to convert</param>
            <param name="sourceMeasureWeightId">Source weight</param>
            <param name="targetMeasureWeightId">Target weight</param>
            <param name="round">A value indicating whether a result should be rounded</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureWeightController.ConvertFromPrimaryMeasureWeight(System.Decimal,System.Int32)">
            <summary>
            Converts from primary weight
            </summary>
            <param name="value">Value to convert</param>
            <param name="measureWeightId">Target weight Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.MeasureWeightController.ConvertToPrimaryMeasureWeight(System.Decimal,System.Int32)">
            <summary>
            Converts to primary measure weight
            </summary>
            <param name="value">Value to convert</param>
            <param name="measureWeightId">Source weight Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.StateProvinceController.GetStateProvinceByAbbreviation(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a state/province by abbreviation
            </summary>
            <param name="abbreviation">The state/province abbreviation</param>
            <param name="countryId">Country identifier; pass null to load the state regardless of a country</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.StateProvinceController.GetStateProvinceByAddress(System.Int32)">
            <summary>
            Gets a state/province by address 
            </summary>
            <param name="addressId">Address identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.StateProvinceController.GetStateProvincesByCountryId(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a state/province collection by country identifier
            </summary>
            <param name="countryId">Country identifier</param>
            <param name="languageId">Language identifier. It's used to sort states by localized names (if specified); pass 0 to skip it</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Directory.StateProvinceController.GetAll(System.Boolean)">
            <summary>
            Gets all states/provinces
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Discounts.DiscountController.GetAll(System.Nullable{Nop.Core.Domain.Discounts.DiscountType},System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            Gets all discounts
            </summary>
            <param name="discountType">Discount type; pass null to load all records</param>
            <param name="couponCode">Coupon code to find (exact match); pass null or empty to load all records</param>
            <param name="discountName">Discount name; pass null or empty to load all records</param>
            <param name="showHidden">A value indicating whether to show expired and not started discounts</param>
            <param name="startDateUtc">Discount start date; pass null to load all records</param>
            <param name="endDateUtc">Discount end date; pass null to load all records</param>
            <param name="isActive">A value indicating whether to get active discounts; "null" to load all discounts; "false" to load only inactive discounts; "true" to load only active discounts</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Discounts.DiscountController.ValidateDiscount(System.Int32,System.Int32,System.String)">
            <summary>
            Validate discount
            </summary>
            <param name="discountId">Discount</param>
            <param name="customerId">Customer</param>
            <param name="couponCodesToValidate">Coupon codes to validate(separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Discounts.DiscountRequirementController.GetDiscountRequirementsByParent(System.Int32)">
            <summary>
            Gets child discount requirements
            </summary>
            <param name="discountRequirementId">Parent discount requirement Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Discounts.DiscountRequirementController.GetAll(System.Int32,System.Boolean)">
            <summary>
            Get all discount requirements
            </summary>
            <param name="discountId">Discount identifier</param>
            <param name="topLevelOnly">Whether to load top-level requirements only (without parent identifier)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Discounts.DiscountUsageHistoryController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets all discount usage history records
            </summary>
            <param name="discountId">Discount identifier; null to load all records</param>
            <param name="customerId">Customer identifier; null to load all records</param>
            <param name="orderId">Order identifier; null to load all records</param>
            <param name="includeCancelledOrders">Include cancelled orders</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.GetAll(System.Int32)">
            <summary>
            Gets forums by group identifier
            </summary>
            <param name="forumGroupId">The forum group identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToCreateTopic(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to create new topics
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="forumId">Forum Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToEditTopic(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to edit topic
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="topicId">Topic Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToMoveTopic(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to move topic
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="topicId">Topic Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToDeleteTopic(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to delete topic
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="topicId">Topic Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToCreatePost(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to create new post
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="topicId">Topic Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToEditPost(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to edit post
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="postId">Topic post Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToDeletePost(System.Int32,System.Int32)">
            <summary>
            Check whether customer is allowed to delete post
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="postId">Topic post Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToSetTopicPriority(System.Int32)">
            <summary>
            Check whether customer is allowed to set topic priority
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumController.IsCustomerAllowedToSubscribe(System.Int32)">
            <summary>
            Check whether customer is allowed to watch topics
            </summary>
            <param name="customerId">Customer Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumGroupController.GetAll">
            <summary>
            Gets all forum groups
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumPostController.GetAll(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets all forum posts
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="keywords">Keywords</param>
            <param name="ascSort">Sort order</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumPostVoteController.GetPostVote(System.Int32,System.Int32)">
            <summary>
            Get a post vote 
            </summary>
            <param name="postId">Post identifier</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumPostVoteController.GetNumberOfPostVotes(System.Int32,System.DateTime)">
            <summary>
            Get post vote made since the parameter date
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="сreatedFromUtc">Date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumSubscriptionController.GetAll(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets forum subscriptions
            </summary>
            <param name="customerId">The customer identifier</param>
            <param name="forumId">The forum identifier</param>
            <param name="topicId">The topic identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumTopicController.MoveTopic(System.Int32,System.Int32)">
            <summary>
            Moves the forum topic
            </summary>
            <param name="forumTopicId">The forum topic identifier</param>
            <param name="newForumId">New forum identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumTopicController.GetAll(System.Int32,System.Int32,System.String,Nop.Core.Domain.Forums.ForumSearchType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets all forum topics
            </summary>
            <param name="forumId">The forum identifier</param>
            <param name="customerId">The customer identifier</param>
            <param name="keywords">Keywords</param>
            <param name="searchType">Search type</param>
            <param name="limitDays">Limit by the last number days; 0 to load all topics</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.ForumTopicController.GetActiveTopics(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets active forum topics
            </summary>
            <param name="forumId">The forum identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Forums.PrivateMessageController.GetAll(System.Int32,System.Int32,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Int32,System.Int32)">
            <summary>
            Gets private messages
            </summary>
            <param name="storeId">The store identifier; pass 0 to load all messages</param>
            <param name="fromCustomerId">The customer identifier who sent the message</param>
            <param name="toCustomerId">The customer identifier who should receive the message</param>
            <param name="isRead">A value indicating whether loaded messages are read. false - to load not read messages only, 1 to load read messages only, null to load all messages</param>
            <param name="isDeletedByAuthor">A value indicating whether loaded messages are deleted by author. false - messages are not deleted by author, null to load all messages</param>
            <param name="isDeletedByRecipient">A value indicating whether loaded messages are deleted by recipient. false - messages are not deleted by recipient, null to load all messages</param>
            <param name="keywords">Keywords</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprConsentController.GetById(System.Int32)">
            <summary>
            Gets a GDPR consent by identifier
            </summary>
            <param name="id">The GDPR consent identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprConsentController.GetAll">
            <summary>
            Gets all GDPR consents
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprConsentController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto)">
            <summary>
            Create a GDPR consent
            </summary>
            <param name="model">GDPR consent Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprConsentController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto)">
            <summary>
            Update a GDPR consent
            </summary>
            <param name="model">GDPR consent Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprConsentController.Delete(System.Int32)">
            <summary>
            Delete a GDPR consent
            </summary>
            <param name="id">GDPR consent identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprConsentController.IsConsentAccepted(System.Int32,System.Int32)">
            <summary>
            Gets the latest selected value (a consent is accepted or not by a customer)
            </summary>
            <param name="consentId">Consent identifier</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprController.PermanentDeleteCustomer(System.Int32)">
            <summary>
            Permanent delete of customer
            </summary>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Gdpr.GdprLogController.GetAll(System.Int32,System.Int32,System.String,System.Nullable{Nop.Core.Domain.Gdpr.GdprRequestType},System.Int32,System.Int32)">
            <summary>
            Get all GDPR log records
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="consentId">Consent identifier</param>
            <param name="customerInfo">Customer info (Exact match)</param>
            <param name="requestType">GDPR request type</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.ExportResourcesToXml(System.Int32)">
            <summary>
            Export language resources to XML
            </summary>
            <param name="id">Language identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.GetLocalizedPermissionName(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Get localized permission name
            </summary>
            <param name="permissionRecordId">Permission record identifier</param>
            <param name="languageId">Language identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.SaveLocalizedPermissionName(System.Int32)">
            <summary>
            Save localized name of a permission
            </summary>
            <param name="permissionRecordId">Permission record identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.DeleteLocalizedPermissionName(System.Int32)">
            <summary>
            Delete a localized name of a permission
            </summary>
            <param name="permissionRecordId">Permission record identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.Delete(System.Int32)">
            <summary>
            Delete a language
            </summary>
            <param name="id">Language identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.GetAll(System.Boolean,System.Int32)">
            <summary>
            Gets all languages
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="storeId">Load records allowed only in a specified store; pass 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.GetById(System.Int32)">
            <summary>
            Gets a language
            </summary>
            <param name="id">Language identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto)">
            <summary>
            Create a language
            </summary>
            <param name="model">Language Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto)">
            <summary>
            Update a language
            </summary>
            <param name="model">Language Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LanguageController.GetTwoLetterIsoLanguageName(System.Int32)">
            <summary>
            Get 2 letter ISO language code
            </summary>
            <param name="id">Language identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.Delete(System.Int32)">
            <summary>
            Delete a locale string resource
            </summary>
            <param name="id">Locale string resource identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.GetById(System.Int32)">
            <summary>
            Gets a locale string resource by identifier
            </summary>
            <param name="id">The locale string resource identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.GetByName(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets a locale string resource by name
            </summary>
            <param name="resourceName">A string representing a resource name</param>
            <param name="languageId">Language identifier</param>
            <param name="logIfNotFound">A value indicating whether to log error if locale string resource is not found</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocaleStringResourceDto)">
            <summary>
            Create a locale string resource
            </summary>
            <param name="model">Locale string resource Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocaleStringResourceDto)">
            <summary>
            Update the locale string resource
            </summary>
            <param name="model">Locale string resource Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.GetAllResourceValues(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Gets all locale string resources by language identifier
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="loadPublicLocales">A value indicating whether to load data for the public store only (if "false", then for admin area only. If null, then load all locales. We use it for performance optimization of the site startup</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.GetResource(System.String,System.Int32,System.Boolean,System.String,System.Boolean)">
            <summary>
            Gets a resource string based on the specified ResourceKey property.
            </summary>
            <param name="resourceKey">A string representing a ResourceKey.</param>
            <param name="languageId">Language identifier</param>
            <param name="logIfNotFound">A value indicating whether to log error if locale string resource is not found</param>
            <param name="defaultValue">Default value</param>
            <param name="returnEmptyIfNotFound">A value indicating whether an empty string will be returned if a resource is not found and default value is set to empty string</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.AddOrUpdateLocaleResource(System.String,System.String,System.String)">
            <summary>
            Add a locale resource (if new) or update an existing one
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="resourceValue">Resource value</param>
            <param name="languageCulture">Language culture code. If null or empty, then a resource will be added for all languages</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.DeleteLocaleResource(System.String)">
            <summary>
            Delete a locale resource by name (for all languages)
            </summary>
            <param name="resourceName">Resource name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.DeleteLocaleResources(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete locale resources
            </summary>
            <param name="resourceNames">Resource names (Separator - ;)</param>
            <param name="languageId">Language identifier; pass null to delete the passed resources from all languages</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocaleStringResourceController.DeleteLocaleResourcesByPrefix(System.String,System.Nullable{System.Int32})">
            <summary>
            Delete locale resources by the passed name prefix
            </summary>
            <param name="resourceNamePrefix">Resource name prefix</param>
            <param name="languageId">Language identifier; pass null to delete resources by prefix from all languages</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizationController.GetLocalizedEnum(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get localized value of enum
            </summary>
            <param name="enumeTypeName">Enume type name</param>
            <param name="enumValue">Enum value</param>
            <param name="languageId">Language identifier; pass null to use the current working language</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizationController.GetLocalizedFriendlyName(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Get localized friendly name of a plugin
            </summary>
            <param name="pluginSystemName">Plugin</param>
            <param name="pluginFriendlyName">Plugin</param>
            <param name="languageId">Language identifier</param>
            <param name="returnDefaultValue">A value indicating whether to return default value (if localized is not found)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizationController.GetLocalized(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get localized property of an entity
            </summary>
            <param name="entityId">Entity identifier</param>
            <param name="localeKeyGroup">Locale key group</param>
            <param name="localeKey">Locale key</param>
            <param name="languageId">Language identifier; pass null to use the current working language; pass 0 to get standard language value</param>
            <param name="ensureTwoPublishedLanguages">A value indicating whether to ensure that we have at least two published languages; otherwise, load only default value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.GetLocalizedPropertiesAsync(System.Int32,System.String)">
            <summary>
            Gets localized properties
            </summary>
            <param name="entityId">Entity identifier</param>
            <param name="localeKeyGroup">Locale key group</param>
            <returns>
            A task that represents the asynchronous operation
            The task result contains the localized properties
            </returns>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.DeleteLocalizedPropertyAsync(Nop.Core.Domain.Localization.LocalizedProperty)">
            <summary>
            Deletes a localized property
            </summary>
            <param name="localizedProperty">Localized property</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.InsertLocalizedPropertyAsync(Nop.Core.Domain.Localization.LocalizedProperty)">
            <summary>
            Inserts a localized property
            </summary>
            <param name="localizedProperty">Localized property</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.UpdateLocalizedPropertyAsync(Nop.Core.Domain.Localization.LocalizedProperty)">
            <summary>
            Updates the localized property
            </summary>
            <param name="localizedProperty">Localized property</param>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.GetLocalizedValue(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Find localized value
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="entityId">Entity identifier</param>
            <param name="localeKeyGroup">Locale key group</param>
            <param name="localeKey">Locale key</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.SaveLocalizedValue(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Save localized value
            </summary>
            <param name="languageId">Language identifier</param>
            <param name="entityId">Entity identifier</param>
            <param name="localeKeyGroup">Locale key group</param>
            <param name="localeKey">Locale key</param>
            <param name="localeValue">Locale value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Localization.LocalizedEntityController.GetEntityLocalizedPropertiesAsync(System.Int32,System.String,System.String)">
            <summary>
            Find localized properties
            </summary>
            <param name="entityId">Entity identifier</param>
            <param name="localeKeyGroup">Locale key group</param>
            <param name="localeKey">Locale key</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogController.GetAll(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            Gets all activity log items
            </summary>
            <param name="createdOnFrom">Log item creation from; pass null to load all records</param>
            <param name="createdOnTo">Log item creation to; pass null to load all records</param>
            <param name="customerId">Customer identifier; pass null to load all records</param>
            <param name="activityLogTypeId">Activity log type identifier; pass null to load all records</param>
            <param name="ipAddress">IP address; pass null or empty to load all records</param>
            <param name="entityName">Entity name; pass null to load all records</param>
            <param name="entityId">Entity identifier; pass null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogController.GetById(System.Int32)">
            <summary>
            Gets an activity log item by identifier
            </summary>
            <param name="id">The activity log identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogController.ClearAllActivities">
            <summary>
            Clears activity log
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogController.InsertActivity(System.Int32,System.String,System.String)">
            <summary>
            Inserts an activity log item
            </summary>
            <param name="customerId">Customer</param>
            <param name="systemKeyword">System keyword</param>
            <param name="comment">Comment</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogTypeController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogTypeDto)">
            <summary>
            Update an activity log type item
            </summary>
            <param name="model">Activity log type item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogTypeController.GetAll">
            <summary>
            Gets all activity log type items
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Logging.ActivityLogTypeController.GetById(System.Int32)">
            <summary>
            Gets an activity log type item by identifier
            </summary>
            <param name="id">The activity log type identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.DownloadController.GetById(System.Int32)">
            <summary>
            Gets a download by identifier
            </summary>
            <param name="id">The download identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.DownloadController.GetByGuid(System.Guid)">
            <summary>
            Gets a download by GUID
            </summary>
            <param name="guid">The download GUID</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.DownloadController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto)">
            <summary>
            Create a download
            </summary>
            <param name="model">Download Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.DownloadController.Delete(System.Int32)">
            <summary>
            Delete a download
            </summary>
            <param name="id">Download identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureBinaryController.GetByPictureId(System.Int32)">
            <summary>
            Gets a product picture binary by picture identifier
            </summary>
            <param name="id">The picture identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureBinaryController.ValidatePicture(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String)">
            <summary>
            Validates input picture dimensions
            </summary>
            <param name="fileBinary">The picture binary file</param>
            <param name="mimeType">The picture MIME type</param>
            <param name="fileName">Name of file</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetById(System.Int32)">
            <summary>
            Gets a picture by identifier
            </summary>
            <param name="id">The picture identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.Delete(System.Int32)">
            <summary>
            Delete a picture
            </summary>
            <param name="id">Picture identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetPictures(System.String,System.Int32,System.Int32)">
            <summary>
            Gets a collection of pictures
            </summary>
            <param name="virtualPath">Virtual path</param>
            <param name="pageIndex">Current page</param>
            <param name="pageSize">Items on each page</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetByProductId(System.Int32,System.Int32)">
            <summary>
            Gets a picture by identifier
            </summary>
            <param name="id">The product identifier</param>
            <param name="recordsToReturn">Number of records to return. 0 if you want to get all items</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.InsertPicture(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Inserts a picture
            </summary>
            <param name="fileBinary">The picture binary file</param>
            <param name="mimeType">The picture MIME type</param>
            <param name="seoFilename">The SEO filename</param>
            <param name="altAttribute">"alt" attribute for "img" HTML element</param>
            <param name="titleAttribute">"title" attribute for "img" HTML element</param>
            <param name="isNew">A value indicating whether the picture is new</param>
            <param name="validateBinary">A value indicating whether to validated provided picture binary</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.UpdatePicture(System.Int32,System.Byte[],System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Update a picture
            </summary>
            <param name="pictureId">The picture identifier</param>
            <param name="pictureBinary">The picture binary</param>
            <param name="mimeType">The picture MIME type</param>
            <param name="seoFilename">The SEO filename</param>
            <param name="altAttribute">"alt" attribute for "img" HTML element</param>
            <param name="titleAttribute">"title" attribute for "img" HTML element</param>
            <param name="isNew">A value indicating whether the picture is new</param>
            <param name="validateBinary">A value indicating whether to validated provided picture binary</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto)">
            <summary>
            Update a picture
            </summary>
            <param name="model">Picture Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.SetSeoFilename(System.Int32,System.String)">
            <summary>
            Updates a SEO filename of a picture
            </summary>
            <param name="pictureId">The picture identifier</param>
            <param name="seoFilename">The SEO filename</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetProductPicture(System.String,System.Int32)">
            <summary>
            Get product picture (for shopping cart and order details pages)
            </summary>
            <param name="productId">Product</param>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.LoadPictureBinary(System.Int32)">
            <summary>
            Gets the loaded picture binary depending on picture storage settings
            </summary>
            <param name="pictureId">The picture identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetPictureSeName(System.String)">
            <summary>
            Get picture SEO friendly name
            </summary>
            <param name="name">Name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetDefaultPictureUrl(System.Int32,Nop.Core.Domain.Media.PictureType,System.String)">
            <summary>
            Gets the default picture URL
            </summary>
            <param name="targetSize">The target picture size (longest side)</param>
            <param name="defaultPictureType">Default picture type</param>
            <param name="storeLocation">Store location URL; null to use determine the current store location automatically</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetPictureUrl(System.Int32,System.Int32,System.Boolean,System.String,Nop.Core.Domain.Media.PictureType)">
            <summary>
            Get a picture URL
            </summary>
            <param name="pictureId">Reference instance of Picture</param>
            <param name="targetSize">The target picture size (longest side)</param>
            <param name="showDefaultPicture">A value indicating whether the default picture is shown</param>
            <param name="storeLocation">Store location URL; null to use determine the current store location automatically</param>
            <param name="defaultPictureType">Default picture type</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Media.PictureController.GetThumbLocalPath(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get a picture local path
            </summary>
            <param name="pictureId">Picture identifier</param>
            <param name="targetSize">The target picture size (longest side)</param>
            <param name="showDefaultPicture">A value indicating whether the default picture is shown</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto)">
            <summary>
            Create a campaign
            </summary>
            <param name="model">Campaign Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto)">
            <summary>
            Update a campaign
            </summary>
            <param name="model">Campaign Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.Delete(System.Int32)">
            <summary>
            Delete a campaign
            </summary>
            <param name="id">Campaign identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.GetById(System.Int32)">
            <summary>
            Gets a campaign by identifier
            </summary>
            <param name="id">The campaign identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.GetAll(System.Int32)">
            <summary>
            Gets all campaigns
            </summary>
            <param name="storeId">Store identifier; 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.SendCampaignToEmails(System.Int32,System.Int32,System.String)">
            <summary>
            Sends a campaign to specified emails
            </summary>
            <param name="id">The campaign identifier</param>
            <param name="emailAccountId">Email account identifier</param>
            <param name="subscriptionIds">Subscription identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.CampaignController.SendCampaignToEmail(System.Int32,System.Int32,System.String)">
            <summary>
            Sends a campaign to specified email
            </summary>
            <param name="id">The campaign identifier</param>
            <param name="emailAccountId">Email account identifier</param>
            <param name="email">Email</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.EmailAccountController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto)">
            <summary>
            Create a email account
            </summary>
            <param name="model">Email account Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.EmailAccountController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto)">
            <summary>
            Update a email account
            </summary>
            <param name="model">Email account Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.EmailAccountController.Delete(System.Int32)">
            <summary>
            Delete a email account
            </summary>
            <param name="id">Email account identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.EmailAccountController.GetById(System.Int32)">
            <summary>
            Gets a email account by identifier
            </summary>
            <param name="id">The email account identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.EmailAccountController.GetAll">
            <summary>
            Gets all email accounts
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.Delete(System.Int32)">
            <summary>
            Delete a message template
            </summary>
            <param name="id">Message template identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto)">
            <summary>
            Create a message template
            </summary>
            <param name="model">Message template Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto)">
            <summary>
            Update a message template
            </summary>
            <param name="model">Message template Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.GetById(System.Int32)">
            <summary>
            Gets a message template by identifier
            </summary>
            <param name="id">The message template identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.GetByName(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets a message templates by name
            </summary>
            <param name="name">The message template name</param>
            <param name="storeId">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.GetAll(System.Int32,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gets all message templates
            </summary>
            <param name="storeId">Store identifier</param>
            <param name="keywords">Keywords to search body or subject</param>
            <param name="isActive">A value indicating whether to get active records; "null" to load all records; "false" to load only inactive records; "true" to load only active records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.MessageTemplateController.Copy(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto)">
            <summary>
            Create a copy of message template with all depended data
            </summary>
            <param name="model">Message template Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto)">
            <summary>
            Create a newsletter subscription
            </summary>
            <param name="model">NewsLetter subscription Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto)">
            <summary>
            Update a newsletter subscription
            </summary>
            <param name="model">NewsLetter subscription Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.Delete(System.Int32)">
            <summary>
            Delete a newsLetter subscription
            </summary>
            <param name="id">NewsLetter subscription identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.GetById(System.Int32)">
            <summary>
            Gets a newsletter subscription by newsletter subscription identifier
            </summary>
            <param name="id">The newsletter subscription identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.GetByGuid(System.Guid)">
            <summary>
            Gets a newsletter subscription by newsletter subscription GUID
            </summary>
            <param name="guid">The newsletter subscription GUID</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.GetByEmailAndStoreId(System.String,System.Int32)">
            <summary>
            Gets a newsletter subscription by newsletter subscription identifier
            </summary>
            <param name="email">The newsletter subscription email</param>
            <param name="storeId">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.NewsLetterSubscriptionController.GetAll(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.Boolean},System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the newsletter subscription list
            </summary>
            <param name="email">Email to search or string. Empty to load all records.</param>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="storeId">Store identifier. 0 to load all records.</param>
            <param name="customerRoleId">Customer role identifier. Used to filter subscribers by customer role. 0 to load all records.</param>
            <param name="isActive">Value indicating whether subscriber record should be active or not; null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.GetById(System.Int32)">
            <summary>
            Gets a queued email by identifier
            </summary>
            <param name="id">Queued email identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.GetByIds(System.String)">
            <summary>
            Get queued email by identifiers
            </summary>
            <param name="ids">Array of queued email identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto)">
            <summary>
            Create a queued email
            </summary>
            <param name="model">Queued email Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto)">
            <summary>
            Update a queued email
            </summary>
            <param name="model">Queued email Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.Delete(System.Int32)">
            <summary>
            Delete a queued email
            </summary>
            <param name="id">Queued email identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.DeleteByIds(System.String)">
            <summary>
            Delete queued emails by identifiers
            </summary>
            <param name="ids">Array of queued email identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.DeleteAll">
            <summary>
            Delete all queued emails
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.DeleteAlreadySentEmails(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Delete all queued emails
            </summary>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Messages.QueuedEmailController.SearchEmails(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Gets all queued emails
            </summary>
            <param name="fromEmail">From Email</param>
            <param name="toEmail">To Email</param>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="loadNotSentItemsOnly">A value indicating whether to load only not sent emails</param>
            <param name="loadOnlyItemsToBeSent">A value indicating whether to load only emails for ready to be sent</param>
            <param name="maxSendTries">Maximum send tries</param>
            <param name="loadNewest">A value indicating whether we should sort queued email descending; otherwise, ascending.</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.GetAll(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Gets all news comment
            </summary>
            <param name="customerId">Customer identifier; 0 to load all records</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="newsItemId">News item ID; 0 or null to load all records</param>
            <param name="approved">A value indicating whether to content is approved; null to load all records</param> 
            <param name="fromUtc">Item creation from; null to load all records</param>
            <param name="toUtc">Item creation to; null to load all records</param>
            <param name="commentText">Search comment text; null to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.GetById(System.Int32)">
            <summary>
            Gets a news comment
            </summary>
            <param name="id">News comment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.GetByIds(System.String)">
            <summary>
            Get news comments by identifiers
            </summary>
            <param name="ids">Array of news comment identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto)">
            <summary>
            Create a news comment
            </summary>
            <param name="model">News comment Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto)">
            <summary>
            Update a news comment
            </summary>
            <param name="model">News comment Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.Delete(System.Int32)">
            <summary>
            Delete a news comment
            </summary>
            <param name="id">News comment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.DeleteByIds(System.String)">
            <summary>
            Deletes a news comments by identifiers
            </summary>
            <param name="ids">Array of news comment identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsCommentController.GetNewsCommentsCount(System.Int32,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Get the count of news comments
            </summary>
            <param name="newsItemId">News item identifier</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="isApproved">A value indicating whether to count only approved or not approved comments; pass null to get number of all comments</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsItemController.GetAll(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Gets all news items
            </summary>
            <param name="languageId">Language identifier; 0 if you want to get all records</param>
            <param name="storeId">Store identifier; 0 if you want to get all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
            <param name="title">Filter by news item title</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsItemController.GetById(System.Int32)">
            <summary>
            Gets a news
            </summary>
            <param name="id">News identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsItemController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto)">
            <summary>
            Create a news
            </summary>
            <param name="model">News item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsItemController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto)">
            <summary>
            Update a news
            </summary>
            <param name="model">News item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsItemController.Delete(System.Int32)">
            <summary>
            Delete a news
            </summary>
            <param name="id">News item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.News.NewsItemController.IsNewsAvailable(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Get a value indicating whether a news item is available now (availability dates)
            </summary>
            <param name="newsItemId">News item identifier</param>
            <param name="dateTime">Datetime to check; pass null to use current date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeController.DeleteByIds(System.String)">
            <summary>
            Deletes checkout attributes
            </summary>
            <param name="ids">Array of checkout attributes identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeController.GetAll(System.Int32,System.Boolean)">
            <summary>
            Gets all checkout attributes
            </summary>
            <param name="storeId">Store identifier</param>
            <param name="excludeShippableAttributes">A value indicating whether we should exclude shippable attributes</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeController.GetById(System.Int32)">
            <summary>
            Gets a checkout attribute
            </summary>
            <param name="id">Checkout attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeController.GetByIds(System.String)">
            <summary>
            Gets checkout attributes
            </summary>
            <param name="ids">Array of checkout attribute identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto)">
            <summary>
            Create a checkout attribute
            </summary>
            <param name="model">Checkout attribute Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto)">
            <summary>
            Update a checkout attribute
            </summary>
            <param name="model">Checkout attribute Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeFormatterController.FormatAttributes(System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Formats attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="customerId">Customer Id</param>
            <param name="separator">Separator</param>
            <param name="htmlEncode">A value indicating whether to encode (HTML) values</param>
            <param name="renderPrices">A value indicating whether to render prices</param>
            <param name="allowHyperlinks">A value indicating whether to HTML hyperlink tags could be rendered (if required)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeParserController.ParseCheckoutAttributes(System.String)">
            <summary>
            Gets selected checkout attributes
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeParserController.ParseCheckoutAttributeValues(System.String)">
            <summary>
            Get checkout attribute values
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeParserController.ParseValues(System.String,System.Int32)">
            <summary>
            Gets selected checkout attribute value
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="attributeId">Checkout attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeParserController.AddCheckoutAttribute(System.String,System.Int32,System.String)">
            <summary>
            Adds an attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="checkoutAttributeId">Checkout attribute</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeParserController.IsConditionMet(System.Int32,System.String)">
            <summary>
            Check whether condition of some attribute is met (if specified). Return "null" if not condition is specified
            </summary>
            <param name="attributeId">Checkout attribute Id</param>
            <param name="attributesXml">Selected attributes (XML format)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeParserController.RemoveCheckoutAttribute(System.String,System.Int32)">
            <summary>
            Remove an attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="attributeId">Checkout attribute Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeValueController.Delete(System.Int32)">
            <summary>
            Deletes a checkout attribute value
            </summary>
            <param name="id">Checkout attribute value identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeValueController.GetByCheckoutAttributeId(System.Int32)">
            <summary>
            Gets checkout attribute values by checkout attribute identifier
            </summary>
            <param name="id">Checkout attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeValueController.GetById(System.Int32)">
            <summary>
            Gets a checkout attribute value
            </summary>
            <param name="id">Checkout attribute value identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeValueController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto)">
            <summary>
            Create a checkout attribute value
            </summary>
            <param name="model">Checkout attribute value Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.CheckoutAttributeValueController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto)">
            <summary>
            Update a checkout attribute value
            </summary>
            <param name="model">Checkout attribute value Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.Delete(System.Int32)">
            <summary>
            Delete a gift card
            </summary>
            <param name="id">Gift card identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.GetById(System.Int32)">
            <summary>
            Gets a gift card
            </summary>
            <param name="id">Gift card identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.GetAll(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets all gift cards
            </summary>
            <param name="purchasedWithOrderId">Associated order ID; null to load all records</param>
            <param name="usedWithOrderId">The order ID in which the gift card was used; null to load all records</param>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="isGiftCardActivated">Value indicating whether gift card is activated; null to load all records</param>
            <param name="giftCardCouponCode">Gift card coupon code; null to load all records</param>
            <param name="recipientName">Recipient name; null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto)">
            <summary>
            Create an gift card
            </summary>
            <param name="model">Gift card Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto)">
            <summary>
            Update an gift card
            </summary>
            <param name="model">Gift card Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.GetByPurchasedWithOrderItemId(System.Int32)">
            <summary>
            Gets gift cards by 'PurchasedWithOrderItemId'
            </summary>
            <param name="id">Purchased with order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.GetAppliedByCustomer(System.Int32)">
            <summary>
            Get active gift cards that are applied by a customer
            </summary>
            <param name="id">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.IsGiftCardValid(System.Int32)">
            <summary>
            Is gift card valid
            </summary>
            <param name="id">Gift card identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardController.GetGiftCardRemainingAmount(System.Int32)">
            <summary>
            Gets a gift card remaining amount
            </summary>
            <param name="id">Gift card identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardUsageHistoryController.GetGiftCardUsageHistoryByGiftCard(System.Int32)">
            <summary>
            Gets a gift card usage history entries by Gift card
            </summary>
            <param name="id">Gift card identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardUsageHistoryController.GetGiftCardUsageHistoryByOrder(System.Int32)">
            <summary>
            Gets a gift card usage history entries by order
            </summary>
            <param name="id">Order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.GiftCardUsageHistoryController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardUsageHistoryDto)">
            <summary>
            Create a gift card usage history entry
            </summary>
            <param name="model">Gift card usage history Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.GetById(System.Int32)">
            <summary>
            Gets a order
            </summary>
            <param name="id">Order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.GetByCustomOrderNumber(System.String)">
            <summary>
            Gets a order by custom order number
            </summary>
            <param name="customOrderNumber">The custom order number</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.GetByOrderItem(System.Int32)">
            <summary>
            Gets a order by order item identifier
            </summary>
            <param name="orderItemId">The order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.GetByIds(System.String)">
            <summary>
            Get orders by identifiers
            </summary>
            <param name="ids">Array of order identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.GetOrdersByGuids(System.String)">
            <summary>
            Get orders by guids
            </summary>
            <param name="orderGuids">Order guids</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.GetByGuid(System.Guid)">
            <summary>
            Gets an order by GUID
            </summary>
            <param name="guid">The order GUID</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.Delete(System.Int32)">
            <summary>
            Delete a order
            </summary>
            <param name="id">Order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto)">
            <summary>
            Create an order
            </summary>
            <param name="model">Order Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto)">
            <summary>
            Update an order
            </summary>
            <param name="model">Order Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.Search(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Search orders
            </summary>
            <param name="storeId">Store identifier; 0 to load all orders</param>
            <param name="vendorId">Vendor identifier; null to load all orders</param>
            <param name="customerId">Customer identifier; 0 to load all orders</param>
            <param name="productId">Product identifier which was purchased in an order; 0 to load all orders</param>
            <param name="affiliateId">Affiliate identifier; 0 to load all orders</param>
            <param name="billingCountryId">Billing country identifier; 0 to load all orders</param>
            <param name="warehouseId">Warehouse identifier, only orders with products from a specified warehouse will be loaded; 0 to load all orders</param>
            <param name="paymentMethodSystemName">Payment method system name; null to load all records</param>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="osIds">Order status identifiers; null to load all orders</param>
            <param name="psIds">Payment status identifiers; null to load all orders</param>
            <param name="ssIds">Shipping status identifiers; null to load all orders</param>
            <param name="billingPhone">Billing phone. Leave empty to load all records.</param>
            <param name="billingEmail">Billing email. Leave empty to load all records.</param>
            <param name="billingLastName">Billing last name. Leave empty to load all records.</param>
            <param name="orderNotes">Search in order notes. Leave empty to load all records.</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="getOnlyTotalCount">A value in indicating whether you want to load only total number of records. Set to "true" if you don't want to load data from database</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.ParseTaxRates(System.Int32,System.String)">
            <summary>
            Parse tax rates
            </summary>
            <param name="orderId">Order identifier</param>
            <param name="taxRates">Tax rates</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.HasItemsToAddToShipment(System.Int32)">
            <summary>
            Gets a value indicating whether an order has items to be added to a shipment
            </summary>
            <param name="orderId">The order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.HasItemsToShip(System.Int32)">
            <summary>
            Gets a value indicating whether an order has items to ship
            </summary>
            <param name="orderId">The order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderController.HasItemsToDeliver(System.Int32)">
            <summary>
            Gets a value indicating whether an order has items to deliver
            </summary>
            <param name="orderId">The order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetById(System.Int32)">
            <summary>
            Gets a order item
            </summary>
            <param name="id">Order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetProductByOrderItemId(System.Int32)">
            <summary>
            Gets a product of specify order item
            </summary>
            <param name="id">Order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetOrderItems(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Gets a list items of order
            </summary>
            <param name="orderId">Order identifier</param>
            <param name="isNotReturnable">Value indicating whether this product is returnable; pass null to ignore</param>
            <param name="isShipEnabled">Value indicating whether the entity is ship enabled; pass null to ignore</param>
            <param name="vendorId">Vendor identifier; pass 0 to ignore</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetByGuid(System.Guid)">
            <summary>
            Gets an order item by GUID
            </summary>
            <param name="guid">The order GUID</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetOrderItemsByCustomer(System.Int32)">
            <summary>
            Gets all downloadable order items
            </summary>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.Delete(System.Int32)">
            <summary>
            Delete a order item
            </summary>
            <param name="id">Order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetTotalNumberOfItemsInAllShipments(System.Int32)">
            <summary>
            Gets a total number of items in all shipments
            </summary>
            <param name="orderItemId">The order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.GetTotalNumberOfItemsCanBeAddedToShipment(System.Int32)">
            <summary>
            Gets a total number of already items which can be added to new shipments
            </summary>
            <param name="orderItemId">The order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.IsDownloadAllowed(System.Int32)">
            <summary>
            Gets a value indicating whether download is allowed
            </summary>
            <param name="orderItemId">The order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.IsLicenseDownloadAllowed(System.Int32)">
            <summary>
            Gets a value indicating whether license download is allowed
            </summary>
            <param name="orderItemId">The order item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto)">
            <summary>
            Create an order item
            </summary>
            <param name="model">Order item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderItemController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto)">
            <summary>
            Update an order item
            </summary>
            <param name="model">Order item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderNoteController.GetById(System.Int32)">
            <summary>
            Gets a order note
            </summary>
            <param name="id">Order note identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderNoteController.GetOrderNotesByOrderId(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Gets a list notes of order
            </summary>
            <param name="orderId">Order identifier</param>
            <param name="displayToCustomer">Value indicating whether a customer can see a note; pass null to ignore</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderNoteController.Delete(System.Int32)">
            <summary>
            Delete a order note
            </summary>
            <param name="id">Order note identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderNoteController.FormatOrderNoteText(System.Int32)">
            <summary>
             Formats the order note text
            </summary>
            <param name="id">Order note identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderNoteController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto)">
            <summary>
            Create an order note
            </summary>
            <param name="model">Order note Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CheckOrderStatus(System.Int32)">
            <summary>
            Checks order status
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.DeleteOrder(System.Int32)">
            <summary>
            Deletes an order
            </summary>
            <param name="orderId">The order</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanCancelOrder(System.Int32)">
            <summary>
            Gets a value indicating whether cancel is allowed
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CancelOrder(System.Int32,System.Boolean)">
            <summary>
            Cancels order
            </summary>
            <param name="orderId">Order Id</param>
            <param name="notifyCustomer">True to notify customer</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanMarkOrderAsAuthorized(System.Int32)">
            <summary>
            Gets a value indicating whether order can be marked as authorized
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.MarkAsAuthorized(System.Int32)">
            <summary>
            Marks order as authorized
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanCapture(System.Int32)">
            <summary>
            Gets a value indicating whether capture from admin panel is allowed
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.Capture(System.Int32)">
            <summary>
            Capture an order (from admin panel)
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanMarkOrderAsPaid(System.Int32)">
            <summary>
            Gets a value indicating whether order can be marked as paid
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.MarkOrderAsPaid(System.Int32)">
            <summary>
            Marks order as paid
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanRefund(System.Int32)">
            <summary>
            Gets a value indicating whether refund from admin panel is allowed
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.Refund(System.Int32)">
            <summary>
            Refunds an order (from admin panel)
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanRefundOffline(System.Int32)">
            <summary>
            Gets a value indicating whether order can be marked as refunded
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.RefundOffline(System.Int32)">
            <summary>
            Refunds an order (offline)
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanPartiallyRefund(System.Int32,System.Decimal)">
            <summary>
            Gets a value indicating whether partial refund from admin panel is allowed
            </summary>
            <param name="orderId">Order Id</param>
            <param name="amountToRefund">Amount to refund</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.PartiallyRefund(System.Int32,System.Decimal)">
            <summary>
            Partially refunds an order (from admin panel)
            </summary>
            <param name="orderId">Order Id</param>
            <param name="amountToRefund">Amount to refund</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanPartiallyRefundOffline(System.Int32,System.Decimal)">
            <summary>
            Gets a value indicating whether order can be marked as partially refunded
            </summary>
            <param name="orderId">Order Id</param>
            <param name="amountToRefund">Amount to refund</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.PartiallyRefundOffline(System.Int32,System.Decimal)">
            <summary>
            Partially refunds an order (offline)
            </summary>
            <param name="orderId">Order Id</param>
            <param name="amountToRefund">Amount to refund</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanVoid(System.Int32)">
            <summary>
            Gets a value indicating whether void from admin panel is allowed
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.Void(System.Int32)">
            <summary>
            Voids order (from admin panel)
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.CanVoidOffline(System.Int32)">
            <summary>
            Gets a value indicating whether order can be marked as voided
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.VoidOffline(System.Int32)">
            <summary>
            Voids order (offline)
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.ReOrder(System.Int32)">
            <summary>
            Place order items in current user shopping cart.
            </summary>
            <param name="orderId">The order</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.IsReturnRequestAllowed(System.Int32)">
            <summary>
            Check whether return request is allowed
            </summary>
            <param name="orderId">Order Id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.PlaceOrder(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto)">
            <summary>
            Places an order
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.UpdateOrderTotals(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto)">
            <summary>
            Update order totals
            </summary>
            <param name="updateOrderParameters">Parameters for the updating order</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.Ship(System.Int32,System.Boolean)">
            <summary>
            Send a shipment
            </summary>
            <param name="shipmentId">Shipment</param>
            <param name="notifyCustomer">True to notify customer</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.Deliver(System.Int32,System.Boolean)">
            <summary>
            Marks a shipment as delivered
            </summary>
            <param name="shipmentId">Shipment</param>
            <param name="notifyCustomer">True to notify customer</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.IsPaymentWorkflowRequired(System.String,System.Nullable{System.Boolean})">
            <summary>
            Gets a value indicating whether payment workflow is required
            </summary>
            <param name="ids">Array of Shopping cart item identifiers (separator - ;)</param>
            <param name="useRewardPoints">A value indicating reward points should be used; null to detect current choice of the customer</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.ValidateMinOrderSubtotalAmount(System.String)">
            <summary>
            Validate minimum order sub-total amount
            </summary>
            <param name="ids">Array of Shopping cart item identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderProcessingController.ValidateMinOrderTotalAmount(System.String)">
            <summary>
            Validate minimum order total amount
            </summary>
            <param name="ids">Array of Shopping cart item identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.GetCountryReport(System.Int32,System.Nullable{Nop.Core.Domain.Orders.OrderStatus},System.Nullable{Nop.Core.Domain.Payments.PaymentStatus},System.Nullable{Nop.Core.Domain.Shipping.ShippingStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Get "order by country" report
            </summary>
            <param name="storeId">Store identifier; 0 to load all records</param>
            <param name="os">Order status</param>
            <param name="ps">Payment status</param>
            <param name="ss">Shipping status</param>
            <param name="startTimeUtc">Start date</param>
            <param name="endTimeUtc">End date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.GetOrderAverageReportLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
            <summary>
            Get order average report
            </summary>
            <param name="storeId">Store identifier; pass 0 to ignore this parameter</param>
            <param name="vendorId">Vendor identifier; pass 0 to ignore this parameter</param>
            <param name="productId">Product identifier which was purchased in an order; 0 to load all orders</param>
            <param name="warehouseId">Warehouse identifier; pass 0 to ignore this parameter</param>
            <param name="billingCountryId">Billing country identifier; 0 to load all orders</param>
            <param name="orderId">Order identifier; pass 0 to ignore this parameter</param>
            <param name="paymentMethodSystemName">Payment method system name; null to load all records</param>
            <param name="osIds">Order status identifiers</param>
            <param name="psIds">Payment status identifiers</param>
            <param name="ssIds">Shipping status identifiers</param>
            <param name="startTimeUtc">Start date</param>
            <param name="endTimeUtc">End date</param>
            <param name="billingPhone">Billing phone. Leave empty to load all records.</param>
            <param name="billingEmail">Billing email. Leave empty to load all records.</param>
            <param name="billingLastName">Billing last name. Leave empty to load all records.</param>
            <param name="orderNotes">Search in order notes. Leave empty to load all records.</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.SalesSummaryReport(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Int32,Nop.Services.Orders.GroupByOptions,System.Int32,System.Int32)">
            <summary>
            Get sales summary report
            </summary>
            <param name="storeId">Store identifier (orders placed in a specific store); 0 to load all records</param>
            <param name="vendorId">Vendor identifier; 0 to load all records</param>
            <param name="categoryId">Category identifier; 0 to load all records</param>
            <param name="productId">Product identifier; 0 to load all records</param>
            <param name="manufacturerId">Manufacturer identifier; 0 to load all records</param>
            <param name="createdFromUtc">Order created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Order created date to (UTC); null to load all records</param>
            <param name="osIds">Order status identifiers; null to load all records</param>
            <param name="psIds">Order payment status identifiers; null to load all records</param>
            <param name="billingCountryId">Billing country identifier; 0 to load all records</param>
            <param name="groupBy">0 - group by day, 1 - group by week, 2 - group by total month</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.BestSellersReport(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Nop.Core.Domain.Orders.OrderStatus},System.Nullable{Nop.Core.Domain.Payments.PaymentStatus},System.Nullable{Nop.Core.Domain.Shipping.ShippingStatus},System.Int32,Nop.Services.Orders.OrderByEnum,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get best sellers report
            </summary>
            <param name="storeId">Store identifier (orders placed in a specific store); 0 to load all records</param>
            <param name="vendorId">Vendor identifier; 0 to load all records</param>
            <param name="categoryId">Category identifier; 0 to load all records</param>
            <param name="manufacturerId">Manufacturer identifier; 0 to load all records</param>
            <param name="createdFromUtc">Order created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Order created date to (UTC); null to load all records</param>
            <param name="os">Order status; null to load all records</param>
            <param name="ps">Order payment status; null to load all records</param>
            <param name="ss">Shipping status; null to load all records</param>
            <param name="billingCountryId">Billing country identifier; 0 to load all records</param>
            <param name="orderBy">1 - order by quantity, 2 - order by total amount</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.BestSellersReportTotalAmount(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Nop.Core.Domain.Orders.OrderStatus},System.Nullable{Nop.Core.Domain.Payments.PaymentStatus},System.Nullable{Nop.Core.Domain.Shipping.ShippingStatus},System.Int32,System.Boolean)">
            <summary>
            Get best sellers total amount
            </summary>
            <param name="storeId">Store identifier (orders placed in a specific store); 0 to load all records</param>
            <param name="vendorId">Vendor identifier; 0 to load all records</param>
            <param name="categoryId">Category identifier; 0 to load all records</param>
            <param name="manufacturerId">Manufacturer identifier; 0 to load all records</param>
            <param name="createdFromUtc">Order created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Order created date to (UTC); null to load all records</param>
            <param name="os">Order status; null to load all records</param>
            <param name="ps">Order payment status; null to load all records</param>
            <param name="ss">Shipping status; null to load all records</param>
            <param name="billingCountryId">Billing country identifier; 0 to load all records</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.GetAlsoPurchasedProductsIds(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get best sellers total amount
            </summary>
            <param name="storeId">Store identifier</param>
            <param name="productId">Product identifier</param>
            <param name="recordsToReturn">Records to return</param>
            <param name="visibleIndividuallyOnly">A values indicating whether to load only products marked as "visible individually"; "false" to load all records; "true" to load "visible individually" only</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.ProductsNeverSold(System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a list of products that were never sold
            </summary>
            <param name="vendorId">Vendor identifier (filter products by a specific vendor); 0 to load all records</param>
            <param name="storeId">Store identifier (filter products by a specific store); 0 to load all records</param>
            <param name="categoryId">Category identifier; 0 to load all records</param>
            <param name="manufacturerId">Manufacturer identifier; 0 to load all records</param>
            <param name="createdFromUtc">Order created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Order created date to (UTC); null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderReportController.ProfitReport(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String)">
            <summary>
            Get profit report
            </summary>
            <param name="storeId">Store identifier; pass 0 to ignore this parameter</param>
            <param name="vendorId">Vendor identifier; pass 0 to ignore this parameter</param>
            <param name="productId">Product identifier which was purchased in an order; 0 to load all orders</param>
            <param name="warehouseId">Warehouse identifier; pass 0 to ignore this parameter</param>
            <param name="orderId">Order identifier; pass 0 to ignore this parameter</param>
            <param name="billingCountryId">Billing country identifier; 0 to load all orders</param>
            <param name="paymentMethodSystemName">Payment method system name; null to load all records</param>
            <param name="startTimeUtc">Start date</param>
            <param name="endTimeUtc">End date</param>
            <param name="osIds">Order status identifiers; null to load all records</param>
            <param name="psIds">Payment status identifiers; null to load all records</param>
            <param name="ssIds">Shipping status identifiers; null to load all records</param>
            <param name="billingPhone">Billing phone. Leave empty to load all records.</param>
            <param name="billingEmail">Billing email. Leave empty to load all records.</param>
            <param name="billingLastName">Billing last name. Leave empty to load all records.</param>
            <param name="orderNotes">Search in order notes. Leave empty to load all records.</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.GetShoppingCartSubTotal(System.String,System.Boolean)">
            <summary>
            Gets shopping cart subtotal
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.IsFreeShipping(System.String,System.Nullable{System.Decimal})">
            <summary>
            Gets a value indicating whether shipping is free
            </summary>
            <param name="ids">Cart ids (Separator - ;)</param>
            <param name="subTotal">Subtotal amount; pass null to calculate subtotal</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.AdjustShippingRate(System.String,System.Decimal,System.Boolean)">
            <summary>
            Adjust shipping rate (free shipping, additional charges, discounts)
            </summary>
            <param name="shippingRate">Shipping rate to adjust</param>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="applyToPickupInStore">Adjust shipping rate to pickup in store shipping option rate</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.GetShoppingCartShippingTotal(System.String,System.Boolean)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.GetTaxTotal(System.String,System.Boolean)">
            <summary>
            Gets tax
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="usePaymentMethodAdditionalFee">A value indicating whether we should use payment method additional fee when calculating tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.GetShoppingCartTotal(System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Gets tax
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="useRewardPoints">A value indicating reward points should be used; null to detect current choice of the customer</param>
            <param name="usePaymentMethodAdditionalFee">A value indicating whether we should use payment method additional fee when calculating order total</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.ConvertRewardPointsToAmount(System.Int32)">
            <summary>
            Converts existing reward points to amount
            </summary>
            <param name="rewardPoints">Reward points</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.CheckMinimumRewardPointsToUseRequirement(System.Int32)">
            <summary>
            Gets a value indicating whether a customer has minimum amount of reward points to use (if enabled)
            </summary>
            <param name="rewardPoints">Reward points to check</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.CalculateApplicableOrderTotalForRewardPoints(System.Decimal,System.Decimal)">
            <summary>
            Calculate how order total (maximum amount) for which reward points could be earned/reduced
            </summary>
            <param name="orderShippingInclTax">Order shipping (including tax)</param>
            <param name="orderTotal">Order total</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.CalculateRewardPoints(System.Int32,System.Decimal)">
            <summary>
            Calculate how much reward points will be earned/reduced based on certain amount spent
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="amount">Amount (in primary store currency)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.OrderTotalCalculationController.CalculatePaymentAdditionalFee(System.String,System.Decimal,System.Boolean)">
            <summary>
            Calculate payment method fee
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="fee">Fee value</param>
            <param name="usePercentage">Is fee amount specified as percentage or fixed value?</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentController.GetById(System.Int32)">
            <summary>
            Gets a recurring payment
            </summary>
            <param name="id">Recurring payment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentController.Delete(System.Int32)">
            <summary>
            Delete a recurring payment
            </summary>
            <param name="id">Recurring payment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto)">
            <summary>
            Create an recurring payment
            </summary>
            <param name="model">Recurring payment Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto)">
            <summary>
            Update the recurring payment
            </summary>
            <param name="model">Recurring payment Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentController.Search(System.Int32,System.Int32,System.Int32,System.Nullable{Nop.Core.Domain.Orders.OrderStatus},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Search recurring payments
            </summary>
            <param name="storeId">The store identifier; 0 to load all records</param>
            <param name="customerId">The customer identifier; 0 to load all records</param>
            <param name="initialOrderId">The initial order identifier; 0 to load all records</param>
            <param name="initialOrderStatus">Initial order status identifier; null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentHistoryController.GetByRecurringPaymentId(System.Int32)">
            <summary>
            Gets a recurring payment history by recurring payment
            </summary>
            <param name="id">Recurring payment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RecurringPaymentHistoryController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentHistoryDto)">
            <summary>
            Create an recurring payment history entry
            </summary>
            <param name="model">Recurring payment history Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestActionController.Delete(System.Int32)">
            <summary>
            Delete a return request action
            </summary>
            <param name="id">Return request action identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestActionController.GetAll">
            <summary>
            Gets all return request actions
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestActionController.GetById(System.Int32)">
            <summary>
            Gets a return request action
            </summary>
            <param name="id">Return request action identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestActionController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestActionDto)">
            <summary>
            Create a return request action
            </summary>
            <param name="model">Return request action Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestActionController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestActionDto)">
            <summary>
            Update a return request action
            </summary>
            <param name="model">Return request action Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestController.Delete(System.Int32)">
            <summary>
            Delete a return request
            </summary>
            <param name="id">Return request identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestController.GetById(System.Int32)">
            <summary>
            Gets a return request
            </summary>
            <param name="id">Return request identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestController.Search(System.Int32,System.Int32,System.Int32,System.String,System.Nullable{Nop.Core.Domain.Orders.ReturnRequestStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Search return requests
            </summary>
            <param name="storeId">Store identifier; 0 to load all entries</param>
            <param name="customerId">Customer identifier; 0 to load all entries</param>
            <param name="orderItemId">Order item identifier; 0 to load all entries</param>
            <param name="customNumber">Custom number; null or empty to load all entries</param>
            <param name="rs">Return request status; null to load all entries</param>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="getOnlyTotalCount">A value in indicating whether you want to load only total number of records. Set to "true" if you don't want to load data from database</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto)">
            <summary>
            Create a return request
            </summary>
            <param name="model">Return request Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto)">
            <summary>
            Update a return request
            </summary>
            <param name="model">Return request Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestReasonController.Delete(System.Int32)">
            <summary>
            Delete a return request reasons
            </summary>
            <param name="id">Return request reasons identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestReasonController.GetAll">
            <summary>
            Gets all return request reasons
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestReasonController.GetById(System.Int32)">
            <summary>
            Gets a return request reason
            </summary>
            <param name="id">Return request reason identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestReasonController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestReasonDto)">
            <summary>
            Create a return request reason
            </summary>
            <param name="model">Return request reason Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ReturnRequestReasonController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestReasonDto)">
            <summary>
            Update a return request reason
            </summary>
            <param name="model">Return request reason Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RewardPointsHistoryController.GetRewardPointsHistory(System.Int32,System.Nullable{System.Int32},System.Boolean,System.Nullable{System.Guid},System.Int32,System.Int32)">
            <summary>
            Load reward point history records
            </summary>
            <param name="customerId">Customer identifier; 0 to load all records</param>
            <param name="storeId">Store identifier; pass null to load all records</param>
            <param name="showNotActivated">A value indicating whether to show reward points that did not yet activated</param>
            <param name="orderGuid">Order Guid; pass null to load all record</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RewardPointsHistoryController.GetRewardPointsBalance(System.Int32,System.Int32)">
            <summary>
            Gets reward points balance
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="storeId">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RewardPointsHistoryController.AddRewardPointsHistoryEntry(System.Int32,System.Int32,System.Int32,System.String,System.Nullable{System.Int32},System.Decimal,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Add reward points history record
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="points">Number of points to add</param>
            <param name="storeId">Store identifier</param>
            <param name="message">Message</param>
            <param name="usedWithOrderId">The order identifier for which points were redeemed (spent) as a payment</param>
            <param name="usedAmount">Used amount</param>
            <param name="activatingDate">Date and time of activating reward points; pass null to immediately activating</param>
            <param name="endDate">Date and time when the reward points will no longer be valid; pass null to add date termless points</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RewardPointsHistoryController.GetById(System.Int32)">
            <summary>
            Gets a reward point history entry
            </summary>
            <param name="id">Reward point history entry identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RewardPointsHistoryController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto)">
            <summary>
            Update the reward point history entry
            </summary>
            <param name="model">Reward point history Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.RewardPointsHistoryController.Delete(System.Int32)">
            <summary>
            Delete the reward point history entry
            </summary>
            <param name="id">Reward point history identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetShoppingCart(System.Int32,System.Nullable{Nop.Core.Domain.Orders.ShoppingCartType},System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets shopping cart
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="shoppingCartType">Shopping cart type; pass null to load all records</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="productId">Product identifier; pass null to load all records</param>
            <param name="createdFromUtc">Created date from (UTC); pass null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); pass null to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.ClearShoppingCart(System.Int32,System.Int32)">
            <summary>
            Clear shopping cart
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.Delete(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Delete shopping cart item
            </summary>
            <param name="id">Shopping cart item identifier</param>
            <param name="resetCheckoutData">A value indicating whether to reset checkout data</param>
            <param name="ensureOnlyActiveCheckoutAttributes">A value indicating whether to ensure that only active checkout attributes are attached to the current customer</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.DeleteExpired(System.DateTime)">
            <summary>
            Deletes expired shopping cart items
            </summary>
            <param name="olderThanUtc">Older than date and time</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetShoppingCartItemAttributeWarnings(System.Int32,Nop.Core.Domain.Orders.ShoppingCartType,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Validates shopping cart item attributes
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="shoppingCartType">Shopping cart type</param>
            <param name="productId">Product identifier</param>
            <param name="quantity">Quantity</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="ignoreNonCombinableAttributes">A value indicating whether we should ignore non-combinable attributes</param>
            <param name="ignoreConditionMet">A value indicating whether we should ignore filtering by "is condition met" property</param>
            <param name="ignoreBundledProducts">A value indicating whether we should ignore bundled (associated) products</param>
            <param name="shoppingCartItemId">Shopping cart identifier; pass 0 if it's a new item</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetShoppingCartItemGiftCardWarnings(System.String,Nop.Core.Domain.Orders.ShoppingCartType,System.Int32)">
            <summary>
            Validates shopping cart item (gift card)
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="shoppingCartType">Shopping cart type</param>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetRentalProductWarnings(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Validates shopping cart item for rental products
            </summary>
            <param name="productId">Product identifier</param>
            <param name="rentalStartDate">Rental start date</param>
            <param name="rentalEndDate">Rental end date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetShoppingCartItemWarnings(System.String,System.Int32,Nop.Core.Domain.Orders.ShoppingCartType,System.Int32,System.Int32,System.Decimal,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Validates shopping cart item
            </summary>
            <param name="customerId">Customer</param>
            <param name="shoppingCartType">Shopping cart type</param>
            <param name="productId">Product</param>
            <param name="storeId">Store identifier</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="customerEnteredPrice">Customer entered price</param>
            <param name="rentalStartDate">Rental start date</param>
            <param name="rentalEndDate">Rental end date</param>
            <param name="quantity">Quantity</param>
            <param name="addRequiredProducts">Whether to add required products</param>
            <param name="shoppingCartItemId">Shopping cart identifier; pass 0 if it's a new item</param>
            <param name="getStandardWarnings">A value indicating whether we should validate a product for standard properties</param>
            <param name="getAttributesWarnings">A value indicating whether we should validate product attributes</param>
            <param name="getGiftCardWarnings">A value indicating whether we should validate gift card properties</param>
            <param name="getRequiredProductWarnings">A value indicating whether we should validate required products (products which require other products to be added to the cart)</param>
            <param name="getRentalWarnings">A value indicating whether we should validate rental properties</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.AddToCart(System.String,System.Int32,System.Int32,Nop.Core.Domain.Orders.ShoppingCartType,System.Int32,System.Decimal,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean)">
            <summary>
            Add a product to shopping cart
            </summary>
            <param name="customerId">Customer</param>
            <param name="productId">Product</param>
            <param name="shoppingCartType">Shopping cart type</param>
            <param name="storeId">Store identifier</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="customerEnteredPrice">The price enter by a customer</param>
            <param name="rentalStartDate">Rental start date</param>
            <param name="rentalEndDate">Rental end date</param>
            <param name="quantity">Quantity</param>
            <param name="addRequiredProducts">Whether to add required products</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.UpdateShoppingCartItem(System.String,System.Int32,System.Int32,System.Decimal,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Boolean)">
            <summary>
            Updates the shopping cart item
            </summary>
            <param name="customerId">Customer</param>
            <param name="shoppingCartItemId">Shopping cart item identifier</param>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="customerEnteredPrice">New customer entered price</param>
            <param name="rentalStartDate">Rental start date</param>
            <param name="rentalEndDate">Rental end date</param>
            <param name="quantity">New shopping cart item quantity</param>
            <param name="resetCheckoutData">A value indicating whether to reset checkout data</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.MigrateShoppingCart(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Migrate shopping cart
            </summary>
            <param name="fromCustomerId">From customer</param>
            <param name="toCustomerId">To customer</param>
            <param name="includeCouponCodes">A value indicating whether to coupon codes (discount and gift card) should be also re-applied</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetProductsRequiringProduct(System.String,System.Int32)">
            <summary>
            Gets shopping cart shipping total
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="productId">Product identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetShoppingCartWarnings(System.String,System.String,System.Boolean)">
            <summary>
            Validates whether this shopping cart is valid
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="checkoutAttributesXml">Checkout attributes in XML format</param>
            <param name="validateCheckoutAttributes">A value indicating whether to validate checkout attributes</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetSubTotal(System.Int32,System.Boolean)">
            <summary>
            Gets the shopping cart item sub total
            </summary>
            <param name="cartItemId">Cart item identifier</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for price computation</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetUnitPrice(System.Int32,System.Boolean)">
            <summary>
            Gets the shopping cart item sub total
            </summary>
            <param name="cartItemId">Cart item identifier</param>
            <param name="includeDiscounts">A value indicating whether include discounts or not for price computation</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.FindShoppingCartItemInTheCart(System.String,System.String,Nop.Core.Domain.Orders.ShoppingCartType,System.Int32,System.Decimal,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Finds a shopping cart item in the cart
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="cartItemIds">Shopping cart ids (separator - ;)</param>
            <param name="shoppingCartType">Shopping cart type (Shopping cart - 1, Wishlist - 2)</param>
            <param name="productId">Product</param>
            <param name="customerEnteredPrice">Price entered by a customer</param>
            <param name="rentalStartDate">Rental start date</param>
            <param name="rentalEndDate">Rental end date</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.ShoppingCartRequiresShipping(System.String)">
            <summary>
            Indicates whether the shopping cart requires shipping
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.ShoppingCartIsRecurring(System.String)">
            <summary>
            Gets a value indicating whether shopping cart is recurring
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Orders.ShoppingCartItemController.GetRecurringCycleInfo(System.String)">
            <summary>
            Get a recurring cycle information
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.CanRePostProcessPayment(System.Int32)">
            <summary>
            Gets a value indicating whether customers can complete a payment after order is placed but not completed (for redirection payment methods)
            </summary>
            <param name="orderId">Order identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.GetAdditionalHandlingFee(System.String,System.String)">
            <summary>
            Gets an additional handling fee of a payment method
            </summary>
            <param name="cartItemIds">Cart item identifiers (separator - ;)</param>
            <param name="paymentMethodSystemName">Payment method system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.SupportCapture(System.String)">
            <summary>
            Gets a value indicating whether capture is supported by payment method
            </summary>
            <param name="paymentMethodSystemName">Payment method system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.SupportPartiallyRefund(System.String)">
            <summary>
            Gets a value indicating whether partial refund is supported by payment method
            </summary>
            <param name="paymentMethodSystemName">Payment method system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.SupportRefund(System.String)">
            <summary>
            Gets a value indicating whether refund is supported by payment method
            </summary>
            <param name="paymentMethodSystemName">Payment method system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.SupportVoid(System.String)">
            <summary>
            Gets a value indicating whether void is supported by payment method
            </summary>
            <param name="paymentMethodSystemName">Payment method system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Payments.PaymentController.GetRecurringPaymentType(System.String)">
            <summary>
            Gets a recurring payment type of payment method
            </summary>
            <param name="paymentMethodSystemName">Payment method system name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Plugins.PluginController.GetPluginDescriptors(System.Nullable{System.Int32},System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Get plugin descriptors
            </summary>
            <param name="customerId">Filter by  customer; pass null to load all records</param>
            <param name="storeId">Filter by store; pass 0 to load all records</param>
            <param name="group">Filter by plugin group; pass null to load all records</param>
            <param name="friendlyName">Filter by plugin friendly name; pass null to load all records</param>
            <param name="author">Filter by plugin author; pass null to load all records</param>
            <param name="dependsOnSystemName">System name of the plugin to define dependencies</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollAnswerController.GetById(System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="id">Poll answer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollAnswerController.GetByPollId(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a poll answer
            </summary>
            <param name="id">Poll identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollAnswerController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto)">
            <summary>
            Create a poll answer
            </summary>
            <param name="model">Poll answer Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollAnswerController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto)">
            <summary>
            Update a poll answer
            </summary>
            <param name="model">Poll answer Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollAnswerController.Delete(System.Int32)">
            <summary>
            Delete a poll answer
            </summary>
            <param name="id">Poll answer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollController.GetAll(System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            Gets all polls
            </summary>
            <param name="storeId">The store identifier; pass 0 to load all records</param>
            <param name="languageId">Language identifier; pass 0 to load all records</param>
            <param name="showHidden">Whether to show hidden records (not published, not started and expired)</param>
            <param name="loadShownOnHomepageOnly">Retrieve only shown on home page polls</param>
            <param name="systemKeyword">The poll system keyword; pass null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollController.GetById(System.Int32)">
            <summary>
            Gets a poll
            </summary>
            <param name="id">Poll identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto)">
            <summary>
            Create a poll
            </summary>
            <param name="model">Poll Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto)">
            <summary>
            Update a poll
            </summary>
            <param name="model">Poll Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollController.Delete(System.Int32)">
            <summary>
            Delete a poll
            </summary>
            <param name="id">Poll identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollVotingRecordController.GetByPollAnswerId(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a poll voting records by parent answer
            </summary>
            <param name="id">Poll answer identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollVotingRecordController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollVotingRecordDto)">
            <summary>
            Create a poll voting record
            </summary>
            <param name="model">Poll voting record Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Polls.PollVotingRecordController.AlreadyVoted(System.Int32,System.Int32)">
            <summary>
            Gets a value indicating whether customer already voted for this poll
            </summary>
            <param name="pollId">Poll identifier</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.AclController.Delete(System.Int32)">
            <summary>
            Deletes an ACL record
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.AclController.GetAclRecords(System.Int32,System.String)">
            <summary>
            Gets ACL records
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.AclController.InsertAclRecord(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts an ACL record
            </summary>
            <param name="customerRoleId">Customer role Id</param>
            <param name="entityId">Entity Id</param>
            <param name="entityTypeName">Entity type name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.AclController.GetCustomerRoleIdsWithAccess(System.Int32,System.String)">
            <summary>
            Find customer role identifiers with granted access
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.AclController.Authorize(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Authorize ACL permission
            </summary>
            <param name="customerId">Customer Id</param>
            <param name="entityId">Entity Id</param>
            <param name="entityTypeName">Entity type name</param>
            <param name="subjectToAcl">Is entity subject to ACL</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordController.GetAll">
            <summary>
            Gets all permissions
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordController.GetById(System.Int32)">
            <summary>
            Gets a permission
            </summary>
            <param name="id">Permission identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordDto)">
            <summary>
            Create a permission
            </summary>
            <param name="model">Permission Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordDto)">
            <summary>
            Update a permission by Id
            </summary>
            <param name="model">Permission record Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordController.Delete(System.Int32)">
            <summary>
            Delete a permission
            </summary>
            <param name="id">Permission identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordController.GetActiveSlug(System.String,System.Int32)">
            <summary>
            Authorize permission
            </summary>
            <param name="systemName">Permission record system name</param>
            <param name="customerRoleId">Customer role identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordCustomerRoleMappingController.GetById(System.Int32)">
            <summary>
            Gets a permission record-customer role mapping
            </summary>
            <param name="id">Permission identifier</param>        
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordCustomerRoleMappingController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordCustomerRoleMappingDto)">
            <summary>
            Create a permission record-customer role mapping
            </summary>
            <param name="model">Permission record-customer role mapping Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Security.PermissionRecordCustomerRoleMappingController.Delete(System.Int32,System.Int32)">
            <summary>
            Delete a permission record-customer role mapping
            </summary>
            <param name="permissionId">Permission identifier</param>
            <param name="customerRoleId">Customer role identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.GetAll(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Int32,System.Int32)">
            <summary>
            Gets all URL records
            </summary>
            <param name="slug">Slug</param>
            <param name="languageId">Language ID; "null" to load records with any language; "0" to load records with standard language only; otherwise to load records with specify language ID only</param>
            <param name="isActive">A value indicating whether to get active records; "null" to load all records; "false" to load only inactive records; "true" to load only active records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.GetByIds(System.String)">
            <summary>
            Gets an URL records by identifiers
            </summary>
            <param name="ids">Array of URL record identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.GetBySlug(System.String)">
            <summary>
            Gets a URL record by slug
            </summary>
            <param name="slug">Slug</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto)">
            <summary>
            Create a URL record
            </summary>
            <param name="model">URL record Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.Delete(System.String)">
            <summary>
            Delete a URL records
            </summary>
            <param name="ids">Array of URL record identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto)">
            <summary>
            Updates the URL record
            </summary>
            <param name="model">URL record Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.GetActiveSlug(System.Int32,System.String,System.Int32)">
            <summary>
            Find slug
            </summary>
            <param name="entityId">Entity identifier</param>
            <param name="entityName">Entity name</param>
            <param name="languageId">Language identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.GetSeName(System.Int32,System.String,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Get search engine friendly name (slug)
            </summary>
            <param name="entityId">Entity identifier</param>
            <param name="entityName">Entity name</param>
            <param name="languageId">Language identifier; pass null to use the current language</param>
            <param name="returnDefaultValue">A value indicating whether to return default value (if language specified one is not found)</param>
            <param name="ensureTwoPublishedLanguages">A value indicating whether to ensure that we have at least two published languages; otherwise, load only default value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.GetSeName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get SE name
            </summary>
            <param name="name">Name</param>
            <param name="convertNonWesternChars">A value indicating whether non western chars should be converted</param>
            <param name="allowUnicodeCharsInUrls">A value indicating whether Unicode chars are allowed</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.ValidateSeName(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Validate search engine name
            </summary>
            <param name="entityId">Entity</param>
            <param name="entityName">Entity name</param>
            <param name="seName">Search engine name to validate</param>
            <param name="name">User-friendly name used to generate sename</param>
            <param name="ensureNotEmpty">Ensure that sename is not empty</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Seo.UrlRecordController.SaveSlug(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Save slug
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.DeliveryDateController.GetAll">
            <summary>
            Get all delivery dates
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.DeliveryDateController.GetById(System.Int32)">
            <summary>
            Get a delivery date
            </summary>
            <param name="id">The delivery date identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.DeliveryDateController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.DeliveryDateDto)">
            <summary>
            Create a delivery date
            </summary>
            <param name="model">Delivery date Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.DeliveryDateController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.DeliveryDateDto)">
            <summary>
            Update a delivery date
            </summary>
            <param name="model">Delivery date Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.DeliveryDateController.Delete(System.Int32)">
            <summary>
            Delete a delivery date
            </summary>
            <param name="id">Delivery date identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.ProductAvailabilityRangeController.GetAll">
            <summary>
            Get all product availability ranges
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.ProductAvailabilityRangeController.GetById(System.Int32)">
            <summary>
            Get all product availability ranges
            </summary>
            <param name="id">The product availability range identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.ProductAvailabilityRangeController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.ProductAvailabilityRangeDto)">
            <summary>
            Create a product availability range
            </summary>
            <param name="model">Product availability range Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.ProductAvailabilityRangeController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.ProductAvailabilityRangeDto)">
            <summary>
            Update a product availability range
            </summary>
            <param name="model">Product availability range Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.Date.ProductAvailabilityRangeController.Delete(System.Int32)">
            <summary>
            Delete a product availability range
            </summary>
            <param name="id">Product availability range identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.GetAll(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            Gets all shipments
            </summary>
            <param name="vendorId">Vendor identifier; 0 to load all records</param>
            <param name="warehouseId">Warehouse identifier, only shipments with products from a specified warehouse will be loaded; 0 to load all orders</param>
            <param name="shippingCountryId">Shipping country identifier; 0 to load all records</param>
            <param name="shippingStateId">Shipping state identifier; 0 to load all records</param>
            <param name="shippingCounty">Shipping county; null to load all records</param>
            <param name="shippingCity">Shipping city; null to load all records</param>
            <param name="trackingNumber">Search by tracking number</param>
            <param name="loadNotShipped">A value indicating whether we should load only not shipped shipments</param>
            <param name="loadNotReadyForPickup">A value indicating whether we should load only not ready for pickup shipments</param>
            <param name="loadNotDelivered">A value indicating whether we should load only not delivered shipments</param>
            <param name="orderId">Order identifier; 0 to load all records</param>
            <param name="createdFromUtc">Created date from (UTC); null to load all records</param>
            <param name="createdToUtc">Created date to (UTC); null to load all records</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.GetById(System.Int32)">
            <summary>
            Gets a shipment
            </summary>
            <param name="id">Shipment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.GetByIds(System.String)">
            <summary>
            Gets a shipment by identifiers
            </summary>
            <param name="ids">Array of shipment identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.GetByOrderId(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Gets a list of order shipments
            </summary>
            <param name="orderId">Order identifier</param>
            <param name="shipped">A value indicating whether to count only shipped or not shipped shipments; pass null to ignore</param>
            <param name="readyForPickup">A value indicating whether to load only ready for pickup shipments; pass null to ignore</param>
            <param name="vendorId">Vendor identifier; pass 0 to ignore</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto)">
            <summary>
            Create a shipment
            </summary>
            <param name="model">Shipment Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto)">
            <summary>
            Update a shipment
            </summary>
            <param name="model">Shipment Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentController.Delete(System.Int32)">
            <summary>
            Delete a shipment
            </summary>
            <param name="id">Shipment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentItemController.GetById(System.Int32)">
            <summary>
            Gets a shipment item
            </summary>
            <param name="id">Shipment item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentItemController.GetByShipmentId(System.Int32)">
            <summary>
            Gets a shipment items of shipment
            </summary>
            <param name="id">Shipment identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentItemController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto)">
            <summary>
            Create a shipment item
            </summary>
            <param name="model">Shipment item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentItemController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto)">
            <summary>
            Update a shipment item
            </summary>
            <param name="model">Shipment item Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentItemController.Delete(System.Int32)">
            <summary>
            Delete a shipment item
            </summary>
            <param name="id">Shipment item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShipmentItemController.GetQuantityInShipments(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Get quantity in shipments. For example, get planned quantity to be shipped
            </summary>
            <param name="productId">Product identifier</param>
            <param name="warehouseId">Warehouse identifier</param>
            <param name="ignoreShipped">Ignore already shipped shipments</param>
            <param name="ignoreDelivered">Ignore already delivered shipments</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodController.GetAll(System.Nullable{System.Int32})">
            <summary>
            Gets all shipping methods
            </summary>
            <param name="filterByCountryId">The country identifier to filter by</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodController.GetById(System.Int32)">
            <summary>
            Gets a shipping method
            </summary>
            <param name="id">The shipping method identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodDto)">
            <summary>
            Create a shipping method
            </summary>
            <param name="model">Shipping method Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodDto)">
            <summary>
            Update the shipping method
            </summary>
            <param name="model">Shipping method Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodController.Delete(System.Int32)">
            <summary>
            Delete a shipping method
            </summary>
            <param name="id">The shipping method identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodController.CountryRestrictionExists(System.Int32,System.Int32)">
            <summary>
            Does country restriction exist
            </summary>
            <param name="id">Shipping method identifier</param>
            <param name="countryId">Country identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodCountryMappingController.Get(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodCountryMappingDto)">
            <summary>
            Gets shipping country mappings
            </summary>
            <param name="model">Shipping country mapping Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodCountryMappingController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodCountryMappingDto)">
            <summary>
            Create a shipping country mapping
            </summary>
            <param name="model">Shipping country mapping Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingMethodCountryMappingController.Delete(System.Int32,System.Int32)">
            <summary>
            Delete the shipping country mapping
            </summary>
            <param name="shippingMethodId">The shipping method identifier</param>
            <param name="countryId">Country identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.GetShoppingCartItemWeight(System.Int32,System.Boolean)">
            <summary>
            Gets shopping cart item weight (of one item)
            </summary>
            <param name="cartItemId">Cart item identifier</param>
            <param name="ignoreFreeShippedItems">Whether to ignore the weight of the products marked as "Free shipping"</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.GetShoppingCartItemWeight(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets product item weight (of one item)
            </summary>
            <param name="productId">Product</param>
            <param name="attributesXml">Selected product attributes in XML</param>
            <param name="ignoreFreeShippedItems">Whether to ignore the weight of the products marked as "Free shipping"</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.GetShippingOptions(System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            Gets available shipping options
            </summary>
            <param name="shoppingCartIds">Shopping cart identifiers (separator - ;)</param>
            <param name="shippingAddressId">Shipping address</param>
            <param name="customerId">Load records allowed only to a specified customer; pass null to ignore ACL permissions</param>
            <param name="allowedShippingRateComputationMethodSystemName">Filter by shipping rate computation method identifier; null to load shipping options of all shipping rate computation methods</param>
            <param name="storeId">Load records allowed only in a specified store; pass 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.GetPickupPoints(System.Int32,System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            Gets available pickup points
            </summary>
            <param name="addressId">Address identifier</param>
            <param name="customerId">Load records allowed only to a specified customer; pass null to ignore ACL permissions</param>
            <param name="providerSystemName">Filter by provider identifier; null to load pickup points of all providers</param>
            <param name="storeId">Load records allowed only in a specified store; pass 0 to load all records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.IsShipEnabled(System.Int32)">
            <summary>
            Whether the shopping cart item is ship enabled
            </summary>
            <param name="cartItemId">Cart item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.IsFreeShipping(System.Int32)">
            <summary>
            Whether the shopping cart item is free shipping
            </summary>
            <param name="cartItemId">Cart item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.GetAdditionalShippingCharge(System.Int32)">
            <summary>
            Get the additional shipping charge
            </summary>
            <param name="cartItemId">Cart item identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.ShippingWorkflowController.GetWarehousesById(System.Int32)">
            <summary>
            Gets a warehouse by identifier
            </summary>
            <param name="id">Warehouse identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.WarehouseController.GetAll(System.String)">
            <summary>
            Gets all warehouses
            </summary>
            <param name="name">Warehouse name</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.WarehouseController.GetById(System.Int32)">
            <summary>
            Gets a warehouse
            </summary>
            <param name="id">The warehouse identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.WarehouseController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.WarehouseDto)">
            <summary>
            Create a warehouse
            </summary>
            <param name="model">Warehouse Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.WarehouseController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.WarehouseDto)">
            <summary>
            Update a warehouse
            </summary>
            <param name="model">Warehouse Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.WarehouseController.Delete(System.Int32)">
            <summary>
            Delete a warehouse
            </summary>
            <param name="id">Warehouse identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Shipping.WarehouseController.GetNearestWarehouse(System.Int32,System.String)">
            <summary>
            Get the nearest warehouse for the specified address
            </summary>
            <param name="addressId">Address</param>
            <param name="warehousesIds">List of warehouses, if null all warehouses are used. (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.GetAll">
            <summary>
            Gets all stores
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.GetById(System.Int32)">
            <summary>
            Gets a store
            </summary>
            <param name="id">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto)">
            <summary>
            Create a store
            </summary>
            <param name="model">Store Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto)">
            <summary>
            Update a store
            </summary>
            <param name="model">Store Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.Delete(System.Int32)">
            <summary>
            Delete a store
            </summary>
            <param name="id">Store identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.ContainsHostValue(System.Int32,System.String)">
            <summary>
            Indicates whether a store contains a specified host
            </summary>
            <param name="id">Store identifier</param>
            <param name="host">Host</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreController.GetNotExistingStores(System.String)">
            <summary>
            Returns a list of names of not existing stores
            </summary>
            <param name="ids">The names and/or IDs of the store to check (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreMappingController.GetStoresIdsWithAccess(System.Int32,System.String)">
            <summary>
            Find store identifiers with granted access (mapped to the entity)
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Stores.StoreMappingController.GetStoreMappings(System.Int32,System.String)">
            <summary>
            Gets store mapping records
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tasks.ScheduleTaskController.GetAll(System.Boolean)">
            <summary>
            Gets all schedule tasks
            </summary>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tasks.ScheduleTaskController.GetById(System.Int32)">
            <summary>
            Gets a task by identifier
            </summary>
            <param name="id">Task identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tasks.ScheduleTaskController.GetByType(System.String)">
            <summary>
            Gets a schedule task by its type
            </summary>
            <param name="type">Task type</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tasks.ScheduleTaskController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto)">
            <summary>
            Create a task
            </summary>
            <param name="model">Schedule task Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tasks.ScheduleTaskController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto)">
            <summary>
            Update a task
            </summary>
            <param name="model">Schedule task Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tasks.ScheduleTaskController.Delete(System.Int32)">
            <summary>
            Delete a task
            </summary>
            <param name="id">Task identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxCategoryController.GetAll">
            <summary>
            Gets all tax categories
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxCategoryController.GetById(System.Int32)">
            <summary>
            Gets a tax category
            </summary>
            <param name="id">Tax category identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxCategoryController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.TaxCategoryDto)">
            <summary>
            Create a tax category
            </summary>
            <param name="model">Tax category Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxCategoryController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.TaxCategoryDto)">
            <summary>
            Update a tax category
            </summary>
            <param name="model">Tax category Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxCategoryController.Delete(System.Int32)">
            <summary>
            Delete a tax category
            </summary>
            <param name="id">Tax category identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.GetProductPrice(System.Int32,System.Int32,System.Decimal,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Gets price
            </summary>
            /// <param name="productId">Product identifier</param>
            <param name="taxCategoryId">Tax category identifier</param>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customerId">Customer identifier</param>
            <param name="priceIncludesTax">A value indicating whether price already includes tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.GetShippingPrice(System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Gets shipping price
            </summary>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.GetPaymentMethodAdditionalFee(System.Decimal,System.Boolean,System.Int32)">
            <summary>
            Gets payment method additional handling fee
            </summary>
            <param name="price">Price</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.GetCheckoutAttributePrice(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gets checkout attribute value price
            </summary>
            <param name="checkoutAttributeId">Checkout attribute identifier</param>
            <param name="checkoutAttributeValueId">Checkout attribute value identifier</param>
            <param name="includingTax">A value indicating whether calculated price should include tax</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.GetVatNumberStatus(System.String)">
            <summary>
            Gets VAT Number status
            </summary>
            <param name="fullVatNumber">Two letter ISO code of a country and VAT number (e.g. GB 111 1111 111)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.GetTaxTotal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get tax total for the passed shopping cart
            </summary>
            <param name="customerId">Customer identifier</param>
            <param name="storeId">Store identifier</param>
            <param name="usePaymentMethodAdditionalFee">A value indicating whether we should use payment method additional fee when calculating tax</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Tax.TaxController.IsTaxExempt(System.Int32,System.Int32)">
            <summary>
            Gets a value indicating whether a product is tax exempt
            </summary>
            <param name="productId">Product identifier</param>
            <param name="customerId">Customer identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto)">
            <summary>
            Create topic
            </summary>
            <param name="model">Topic Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto)">
            <summary>
            Update topic by Id
            </summary>
            <param name="model">Topic Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicController.Delete(System.Int32)">
            <summary>
            Delete topic
            </summary>
            <param name="id">Topic identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicController.GetById(System.Int32)">
            <summary>
            Gets a topic
            </summary>
            <param name="id">The topic identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicController.GetBySystemName(System.String,System.Int32)">
            <summary>
            Gets a topic
            </summary>
            <param name="systemName">The topic system name</param>
            <param name="storeId">Store identifier; pass 0 to ignore filtering by store and load the first one</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicController.GetAll(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets all topics
            </summary>
            <param name="storeId">Store identifier; pass 0 to load all records</param>
            <param name="keywords">Keywords to search into body or title</param>
            <param name="ignoreAcl">A value indicating whether to ignore ACL rules</param>
            <param name="showHidden">A value indicating whether to show hidden topics</param>
            <param name="onlyIncludedInTopMenu">A value indicating whether to show only topics which include on the top menu</param>HttpGet("{storeId}")]
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicTemplateController.GetAll">
            <summary>
            Gets all topic templates
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicTemplateController.GetById(System.Int32)">
            <summary>
            Gets a topic template
            </summary>
            <param name="id">Topic template identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicTemplateController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.TopicTemplates.TopicTemplateDto)">
            <summary>
            Create topic template
            </summary>
            <param name="model">Topic template Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicTemplateController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.TopicTemplates.TopicTemplateDto)">
            <summary>
            Upadete topic by Id
            </summary>
            <param name="model">Topic Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Topics.TopicTemplateController.Delete(System.Int32)">
            <summary>
            Delete topic template
            </summary>
            <param name="id">Topic template identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeController.GetAll">
            <summary>
            Gets all vendor attributes
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeController.GetById(System.Int32)">
            <summary>
            Gets a vendor attributes by identifier
            </summary>
            <param name="id">The attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto)">
            <summary>
            Create a vendor attribute
            </summary>
            <param name="model">Vendor attribute Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto)">
            <summary>
            Updates the vendor attribute
            </summary>
            <param name="model">Vendor attribute Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeController.Delete(System.Int32)">
            <summary>
            Delete a vendor attribute
            </summary>
            <param name="id">Vendor attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeFormatterController.FormatAttributes(System.String,System.String,System.Boolean)">
            <summary>
            Format vendor attributes
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="separator">Separator</param>
            <param name="htmlEncode">A value indicating whether to encode (HTML) values</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeParserController.ParseVendorAttributes(System.String)">
            <summary>
            Gets vendor attributes from XML
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeParserController.ParseVendorAttributeValues(System.String)">
            <summary>
            Get vendor attribute values from XML
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeParserController.ParseValues(System.String,System.Int32)">
            <summary>
            Gets values of the selected vendor attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="attributeId">Vendor attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeParserController.AddVendorAttribute(System.String,System.Int32,System.String)">
            <summary>
            Adds a vendor attribute
            </summary>
            <param name="attributesXml">Attributes in XML format</param>
            <param name="vendorAttributeId">Vendor attribute Id</param>
            <param name="value">Value</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeParserController.GetAttributeWarnings(System.String)">
            <summary>
            Validates vendor attributes
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeValueController.GetById(System.Int32)">
            <summary>
            Gets a vendor attribute value by identifier
            </summary>
            <param name="id">Vendor attribute value identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeValueController.GetByVendorAttributeId(System.Int32)">
            <summary>
            Gets vendor attribute values by vendor attribute identifier
            </summary>
            <param name="id">The vendor attribute identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeValueController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto)">
            <summary>
            Create a vendor attribute value
            </summary>
            <param name="model">Vendor attribute value Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeValueController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto)">
            <summary>
            Updates the vendor attribute value
            </summary>
            <param name="model">Vendor attribute value Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorAttributeValueController.Delete(System.Int32)">
            <summary>
            Delete a vendor attribute value
            </summary>
            <param name="id">Vendor attribute value identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetAll(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets all vendors
            </summary>
            <param name="name">Vendor name</param>
            <param name="email">Vendor email</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="showHidden">A value indicating whether to show hidden records</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetById(System.Int32)">
            <summary>
            Gets a vendor by vendor identifier
            </summary>
            <param name="id">The vendor identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetByProductId(System.Int32)">
            <summary>
            Gets a vendor by product identifier
            </summary>
            <param name="id">The vendor identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetByProductIds(System.String)">
            <summary>
            Gets a vendor by product identifier
            </summary>
            <param name="ids">Array of vendor identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetByCustomerIds(System.String)">
            <summary>
            Gets a vendors by customers identifiers
            </summary>
            <param name="ids">Array of customer identifiers (separator - ;)</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.Delete(System.Int32)">
            <summary>
            Delete a vendor
            </summary>
            <param name="id">Vendor identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.Create(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto)">
            <summary>
            Create a vendor
            </summary>
            <param name="model">Vendor Dto</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.Update(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto)">
            <summary>
            Updates the vendor
            </summary>
            <param name="model">Vendor Dto model</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetVendorNoteById(System.Int32)">
            <summary>
            Gets a vendor note
            </summary>
            <param name="vendorNoteId">The vendor note identifier</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.GetVendorNotesByVendor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets all vendor notes
            </summary>
            <param name="vendorId">Vendor identifier</param>
            <param name="pageIndex">Page index</param>
            <param name="pageSize">Page size</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.DeleteVendorNote(System.Int32)">
            <summary>
            Deletes a vendor note
            </summary>
            <param name="id">The vendor note id</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Controllers.Vendors.VendorController.InsertVendorNote(Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorNoteDto)">
            <summary>
            Inserts a vendor note
            </summary>
            <param name="vendorNote">Vendor note</param>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto">
            <summary>
            Represents an affiliate
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto.AddressId">
            <summary>
            Gets or sets the address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto.FriendlyUrlName">
            <summary>
            Gets or sets the friendly name for generated affiliate URL (by default affiliate ID is used)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Affiliates.AffiliateDto.Active">
            <summary>
            Gets or sets a value indicating whether the entity is active
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto">
            <summary>
            Represents a blog comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto.CommentText">
            <summary>
            Gets or sets the comment text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto.IsApproved">
            <summary>
            Gets or sets a value indicating whether the comment is approved
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto.BlogPostId">
            <summary>
            Gets or sets the blog post identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogCommentDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto">
            <summary>
            Represents a blog post
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.IncludeInSitemap">
            <summary>
            Gets or sets the value indicating whether this blog post should be included in sitemap
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.Title">
            <summary>
            Gets or sets the blog post title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.Body">
            <summary>
            Gets or sets the blog post body
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.BodyOverview">
            <summary>
            Gets or sets the blog post overview. If specified, then it's used on the blog page instead of the "Body"
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.AllowComments">
            <summary>
            Gets or sets a value indicating whether the blog post comments are allowed 
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.Tags">
            <summary>
            Gets or sets the blog tags
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.StartDateUtc">
            <summary>
            Gets or sets the blog post start date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.EndDateUtc">
            <summary>
            Gets or sets the blog post end date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostTagDto">
            <summary>
            Represents a blog post tag
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostTagDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Blogs.BlogPostTagDto.BlogPostCount">
            <summary>
            Gets or sets the tagged product count
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.AreProductAttributesEqualRequest.AttributesXml1">
            <summary>
            The attributes of the first product
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.AreProductAttributesEqualRequest.AttributesXml2">
            <summary>
            The attributes of the second product
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.BackInStockSubscriptionDto">
            <summary>
            Represents a back in stock subscription
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.BackInStockSubscriptionDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.BackInStockSubscriptionDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.BackInStockSubscriptionDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.BackInStockSubscriptionDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto">
            <summary>
            Represents a category
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.CategoryTemplateId">
            <summary>
            Gets or sets a value of used category template identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.ParentCategoryId">
            <summary>
            Gets or sets the parent category identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.AllowCustomersToSelectPageSize">
            <summary>
            Gets or sets a value indicating whether customers can select the page size
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.PageSizeOptions">
            <summary>
            Gets or sets the available customer selectable page size options
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.ShowOnHomepage">
            <summary>
            Gets or sets a value indicating whether to show the category on home page
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.IncludeInTopMenu">
            <summary>
            Gets or sets a value indicating whether to include this category in the top menu
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.SubjectToAcl">
            <summary>
            Gets or sets a value indicating whether the entity is subject to ACL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.PriceRangeFiltering">
            <summary>
            Gets or sets a value indicating whether the price range filtering is enabled
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.PriceFrom">
            <summary>
            Gets or sets the "from" price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.PriceTo">
            <summary>
            Gets or sets the "to" price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryDto.ManuallyPriceRange">
            <summary>
            Gets or sets a value indicating whether the price range should be entered manually
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryTemplateDto">
            <summary>
            Represents a category template
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryTemplateDto.Name">
            <summary>
            Gets or sets the template name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryTemplateDto.ViewPath">
            <summary>
            Gets or sets the view path
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CategoryTemplateDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CrossSellProductDto">
            <summary>
            Represents a cross-sell product
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CrossSellProductDto.ProductId1">
            <summary>
            Gets or sets the first product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.CrossSellProductDto.ProductId2">
            <summary>
            Gets or sets the second product identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountCategoryMappingDto">
            <summary>
            Represents a discount-category mapping class
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountCategoryMappingDto.EntityId">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountCategoryMappingDto.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountManufacturerMappingDto">
            <summary>
            Represents a discount-manufacturer mapping class
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountManufacturerMappingDto.EntityId">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountManufacturerMappingDto.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountProductMappingDto">
            <summary>
            Represents a discount-product mapping class
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountProductMappingDto.EntityId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.DiscountProductMappingDto.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.GiftCardAttributeResponse">
            <summary>
            Represents a gift card attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.GiftCardAttributeResponse.RecipientName">
            <summary>
            Recipient name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.GiftCardAttributeResponse.RecipientEmail">
            <summary>
            Recipient email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.GiftCardAttributeResponse.SenderName">
            <summary>
            Sender name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.GiftCardAttributeResponse.SenderEmail">
            <summary>
            Sender email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.GiftCardAttributeResponse.GiftCardMessage">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto">
            <summary>
            Represents a manufacturer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.ManufacturerTemplateId">
            <summary>
            Gets or sets a value of used manufacturer template identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.PictureId">
            <summary>
            Gets or sets the parent picture identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.AllowCustomersToSelectPageSize">
            <summary>
            Gets or sets a value indicating whether customers can select the page size
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.PageSizeOptions">
            <summary>
            Gets or sets the available customer selectable page size options
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.SubjectToAcl">
            <summary>
            Gets or sets a value indicating whether the entity is subject to ACL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.PriceRangeFiltering">
            <summary>
            Gets or sets a value indicating whether the price range filtering is enabled
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.PriceFrom">
            <summary>
            Gets or sets the "from" price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.PriceTo">
            <summary>
            Gets or sets the "to" price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerDto.ManuallyPriceRange">
            <summary>
            Gets or sets a value indicating whether the price range should be entered manually
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerTemplateDto">
            <summary>
            Represents a manufacturer template
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerTemplateDto.Name">
            <summary>
            Gets or sets the template name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerTemplateDto.ViewPath">
            <summary>
            Gets or sets the view path
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ManufacturerTemplateDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto">
            <summary>
            Represents a predefined (default) product attribute value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.ProductAttributeId">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.Name">
            <summary>
            Gets or sets the product attribute name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.PriceAdjustmentUsePercentage">
            <summary>
            Gets or sets a value indicating whether "price adjustment" is specified as percentage
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.Cost">
            <summary>
            Gets or sets the attribute value cost
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.PredefinedProductAttributeValueDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto">
            <summary>
            Represents a product attribute combination
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.AttributesXml">
            <summary>
            Gets or sets the attributes
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.AllowOutOfStockOrders">
            <summary>
            Gets or sets a value indicating whether to allow orders when out of stock
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.Sku">
            <summary>
            Gets or sets the SKU
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.ManufacturerPartNumber">
            <summary>
            Gets or sets the manufacturer part number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.Gtin">
            <summary>
            Gets or sets the Global Trade Item Number (GTIN). These identifiers include UPC (in North America), EAN (in Europe), JAN (in Japan), and ISBN (for books).
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.OverriddenPrice">
            <summary>
            Gets or sets the attribute combination price. This way a store owner can override the default product price when this attribute combination is added to the cart. For example, you can give a discount this way.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.NotifyAdminForQuantityBelow">
            <summary>
            Gets or sets the quantity when admin should be notified
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationDto.MinStockQuantity">
            <summary>
            Gets or sets the minimum stock quantity
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationPictureDto">
            <summary>
            Represents a product attribute combination picture
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationPictureDto.ProductAttributeCombinationId">
            <summary>
            Gets or sets the product attribute combination id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeCombinationPictureDto.PictureId">
            <summary>
            Gets or sets the identifier of picture associated with this combination
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeDto">
            <summary>
            Represents a product attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto">
            <summary>
            Represents a product attribute mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ProductAttributeId">
            <summary>
            Gets or sets the product attribute identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.TextPrompt">
            <summary>
            Gets or sets a value a text prompt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.IsRequired">
            <summary>
            Gets or sets a value indicating whether the entity is required
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ValidationMinLength">
            <summary>
            Gets or sets the validation rule for minimum length (for textbox and multiline textbox)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ValidationMaxLength">
            <summary>
            Gets or sets the validation rule for maximum length (for textbox and multiline textbox)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ValidationFileAllowedExtensions">
            <summary>
            Gets or sets the validation rule for file allowed extensions (for file upload)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ValidationFileMaximumSize">
            <summary>
            Gets or sets the validation rule for file maximum size in kilobytes (for file upload)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.DefaultValue">
            <summary>
            Gets or sets the default value (for textbox and multiline textbox)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeMappingDto.ConditionAttributeXml">
            <summary>
            Gets or sets a condition (depending on other attribute) when this attribute should be enabled (visible).
            Leave empty (or null) to enable this attribute.
            Conditional attributes that only appear if a previous attribute is selected, such as having an option 
            for personalizing clothing with a name and only providing the text input box if the "Personalize" radio button is checked.
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto">
            <summary>
            Represents a product attribute value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.ProductAttributeMappingId">
            <summary>
            Gets or sets the product attribute mapping identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.AttributeValueTypeId">
            <summary>
            Gets or sets the attribute value type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.AssociatedProductId">
            <summary>
            Gets or sets the associated product identifier (used only with AttributeValueType.AssociatedToProduct)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.Name">
            <summary>
            Gets or sets the product attribute name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.ColorSquaresRgb">
            <summary>
            Gets or sets the color RGB value (used with "Color squares" attribute type)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.ImageSquaresPictureId">
            <summary>
            Gets or sets the picture ID for image square (used with "Image squares" attribute type)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment (used only with AttributeValueType.Simple)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.PriceAdjustmentUsePercentage">
            <summary>
            Gets or sets a value indicating whether "price adjustment" is specified as percentage (used only with AttributeValueType.Simple)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment (used only with AttributeValueType.Simple)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.Cost">
            <summary>
            Gets or sets the attribute value cost (used only with AttributeValueType.Simple)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.CustomerEntersQty">
            <summary>
            Gets or sets a value indicating whether the customer can enter the quantity of associated product (used only with AttributeValueType.AssociatedToProduct)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.Quantity">
            <summary>
            Gets or sets the quantity of associated product (used only with AttributeValueType.AssociatedToProduct)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValueDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValuePictureDto">
            <summary>
            Represents a product attribute value picture
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValuePictureDto.ProductAttributeValueId">
            <summary>
            Gets or sets the product attribute value id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductAttributeValuePictureDto.PictureId">
            <summary>
            Gets or sets the picture (identifier) associated with this value. This picture should replace a product main picture once clicked (selected).
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductCategoryDto">
            <summary>
            Represents a product category mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductCategoryDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductCategoryDto.CategoryId">
            <summary>
            Gets or sets the category identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductCategoryDto.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductCategoryDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto">
            <summary>
            Represents a product
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ProductTypeId">
            <summary>
            Gets or sets the product type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ParentGroupedProductId">
            <summary>
            Gets or sets the parent product identifier. It's used to identify associated products (only with "grouped" products)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.VisibleIndividually">
            <summary>
            Gets or sets the values indicating whether this product is visible in catalog or search results.
            It's used when this product is associated to some "grouped" one
            This way associated products could be accessed/added/etc only from a grouped product details page
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ShortDescription">
            <summary>
            Gets or sets the short description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.FullDescription">
            <summary>
            Gets or sets the full description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ProductTemplateId">
            <summary>
            Gets or sets a value of used product template identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.VendorId">
            <summary>
            Gets or sets a vendor identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ShowOnHomepage">
            <summary>
            Gets or sets a value indicating whether to show the product on home page
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AllowCustomerReviews">
            <summary>
            Gets or sets a value indicating whether the product allows customer reviews
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ApprovedRatingSum">
            <summary>
            Gets or sets the rating sum (approved reviews)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.NotApprovedRatingSum">
            <summary>
            Gets or sets the rating sum (not approved reviews)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ApprovedTotalReviews">
            <summary>
            Gets or sets the total rating votes (approved reviews)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.NotApprovedTotalReviews">
            <summary>
            Gets or sets the total rating votes (not approved reviews)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.SubjectToAcl">
            <summary>
            Gets or sets a value indicating whether the entity is subject to ACL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Sku">
            <summary>
            Gets or sets the SKU
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ManufacturerPartNumber">
            <summary>
            Gets or sets the manufacturer part number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Gtin">
            <summary>
            Gets or sets the Global Trade Item Number (GTIN). These identifiers include UPC (in North America), EAN (in Europe), JAN (in Japan), and ISBN (for books).
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsGiftCard">
            <summary>
            Gets or sets a value indicating whether the product is gift card
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.GiftCardTypeId">
            <summary>
            Gets or sets the gift card type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.OverriddenGiftCardAmount">
            <summary>
            Gets or sets gift card amount that can be used after purchase. If not specified, then product price will be used.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RequireOtherProducts">
            <summary>
            Gets or sets a value indicating whether the product requires that other products are added to the cart (Product X requires Product Y)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RequiredProductIds">
            <summary>
            Gets or sets a required product identifiers (comma separated)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AutomaticallyAddRequiredProducts">
            <summary>
            Gets or sets a value indicating whether required products are automatically added to the cart
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsDownload">
            <summary>
            Gets or sets a value indicating whether the product is download
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DownloadId">
            <summary>
            Gets or sets the download identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.UnlimitedDownloads">
            <summary>
            Gets or sets a value indicating whether this downloadable product can be downloaded unlimited number of times
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MaxNumberOfDownloads">
            <summary>
            Gets or sets the maximum number of downloads
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DownloadExpirationDays">
            <summary>
            Gets or sets the number of days during customers keeps access to the file.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DownloadActivationTypeId">
            <summary>
            Gets or sets the download activation type
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.HasSampleDownload">
            <summary>
            Gets or sets a value indicating whether the product has a sample download file
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.SampleDownloadId">
            <summary>
            Gets or sets the sample download identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.HasUserAgreement">
            <summary>
            Gets or sets a value indicating whether the product has user agreement
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.UserAgreementText">
            <summary>
            Gets or sets the text of license agreement
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsRecurring">
            <summary>
            Gets or sets a value indicating whether the product is recurring
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RecurringCycleLength">
            <summary>
            Gets or sets the cycle length
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RecurringCyclePeriodId">
            <summary>
            Gets or sets the cycle period
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RecurringTotalCycles">
            <summary>
            Gets or sets the total cycles
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsRental">
            <summary>
            Gets or sets a value indicating whether the product is rental
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RentalPriceLength">
            <summary>
            Gets or sets the rental length for some period (price for this period)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.RentalPricePeriodId">
            <summary>
            Gets or sets the rental period (price for this period)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsShipEnabled">
            <summary>
            Gets or sets a value indicating whether the entity is ship enabled
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsFreeShipping">
            <summary>
            Gets or sets a value indicating whether the entity is free shipping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ShipSeparately">
            <summary>
            Gets or sets a value this product should be shipped separately (each item)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AdditionalShippingCharge">
            <summary>
            Gets or sets the additional shipping charge
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DeliveryDateId">
            <summary>
            Gets or sets a delivery date identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the product is marked as tax exempt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.TaxCategoryId">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DisplayAttributeCombinationImagesOnly">
            <summary>
            Gets or sets a value indicating whether to display attribute combination images only
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ManageInventoryMethodId">
            <summary>
            Gets or sets a value indicating how to manage inventory
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ProductAvailabilityRangeId">
            <summary>
            Gets or sets a product availability range identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.UseMultipleWarehouses">
            <summary>
            Gets or sets a value indicating whether multiple warehouses are used for this product
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.WarehouseId">
            <summary>
            Gets or sets a warehouse identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DisplayStockAvailability">
            <summary>
            Gets or sets a value indicating whether to display stock availability
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DisplayStockQuantity">
            <summary>
            Gets or sets a value indicating whether to display stock quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MinStockQuantity">
            <summary>
            Gets or sets the minimum stock quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.LowStockActivityId">
            <summary>
            Gets or sets the low stock activity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.NotifyAdminForQuantityBelow">
            <summary>
            Gets or sets the quantity when admin should be notified
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.BackorderModeId">
            <summary>
            Gets or sets a value backorder mode identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AllowBackInStockSubscriptions">
            <summary>
            Gets or sets a value indicating whether to back in stock subscriptions are allowed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.OrderMinimumQuantity">
            <summary>
            Gets or sets the order minimum quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.OrderMaximumQuantity">
            <summary>
            Gets or sets the order maximum quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AllowedQuantities">
            <summary>
            Gets or sets the comma separated list of allowed quantities. null or empty if any quantity is allowed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AllowAddingOnlyExistingAttributeCombinations">
            <summary>
            Gets or sets a value indicating whether we allow adding to the cart/wishlist only attribute combinations that exist and have stock greater than zero.
            This option is used only when we have "manage inventory" set to "track inventory by product attributes"
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.NotReturnable">
            <summary>
            Gets or sets a value indicating whether this product is returnable (a customer is allowed to submit return request with this product)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DisableBuyButton">
            <summary>
            Gets or sets a value indicating whether to disable buy (Add to cart) button
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DisableWishlistButton">
            <summary>
            Gets or sets a value indicating whether to disable "Add to wishlist" button
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AvailableForPreOrder">
            <summary>
            Gets or sets a value indicating whether this item is available for Pre-Order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.PreOrderAvailabilityStartDateTimeUtc">
            <summary>
            Gets or sets the start date and time of the product availability (for pre-order products)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.CallForPrice">
            <summary>
            Gets or sets a value indicating whether to show "Call for Pricing" or "Call for quote" instead of price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.OldPrice">
            <summary>
            Gets or sets the old price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.ProductCost">
            <summary>
            Gets or sets the product cost
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.CustomerEntersPrice">
            <summary>
            Gets or sets a value indicating whether a customer enters price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MinimumCustomerEnteredPrice">
            <summary>
            Gets or sets the minimum price entered by a customer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MaximumCustomerEnteredPrice">
            <summary>
            Gets or sets the maximum price entered by a customer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.BasepriceEnabled">
            <summary>
            Gets or sets a value indicating whether base price (PAngV) is enabled. Used by German users.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.BasepriceAmount">
            <summary>
            Gets or sets an amount in product for PAngV
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.BasepriceUnitId">
            <summary>
            Gets or sets a unit of product for PAngV (MeasureWeight entity)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.BasepriceBaseAmount">
            <summary>
            Gets or sets a reference amount for PAngV
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.BasepriceBaseUnitId">
            <summary>
            Gets or sets a reference unit for PAngV (MeasureWeight entity)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MarkAsNew">
            <summary>
            Gets or sets a value indicating whether this product is marked as new
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MarkAsNewStartDateTimeUtc">
            <summary>
            Gets or sets the start date and time of the new product (set product as "New" from date). Leave empty to ignore this property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.MarkAsNewEndDateTimeUtc">
            <summary>
            Gets or sets the end date and time of the new product (set product as "New" to date). Leave empty to ignore this property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.HasTierPrices">
            <summary>
            Gets or sets a value indicating whether this product has tier prices configured
            <remarks>The same as if we run TierPrices.Count > 0
            We use this property for performance optimization:
            if this property is set to false, then we do not need to load tier prices navigation property
            </remarks>
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.HasDiscountsApplied">
            <summary>
            Gets or sets a value indicating whether this product has discounts applied
            <remarks>The same as if we run AppliedDiscounts.Count > 0
            We use this property for performance optimization:
            if this property is set to false, then we do not need to load Applied Discounts navigation property
            </remarks>
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Weight">
            <summary>
            Gets or sets the weight
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Length">
            <summary>
            Gets or sets the length
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Width">
            <summary>
            Gets or sets the width
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AvailableStartDateTimeUtc">
            <summary>
            Gets or sets the available start date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.AvailableEndDateTimeUtc">
            <summary>
            Gets or sets the available end date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.DisplayOrder">
            <summary>
            Gets or sets a display order.
            This value is used when sorting associated products (used with "grouped" products)
            This value is used when sorting home page products
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of product creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of product update
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductManufacturerDto">
            <summary>
            Represents a product manufacturer mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductManufacturerDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductManufacturerDto.ManufacturerId">
            <summary>
            Gets or sets the manufacturer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductManufacturerDto.IsFeaturedProduct">
            <summary>
            Gets or sets a value indicating whether the product is featured
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductManufacturerDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductPictureDto">
            <summary>
            Represents a product picture mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductPictureDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductPictureDto.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductPictureDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductProductTagMappingDto">
            <summary>
            Represents a product-product tag mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductProductTagMappingDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductProductTagMappingDto.ProductTagId">
            <summary>
            Gets or sets the product tag identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto">
            <summary>
            Represents a product review
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.IsApproved">
            <summary>
            Gets or sets a value indicating whether the content is approved
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.ReviewText">
            <summary>
            Gets or sets the review text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.ReplyText">
            <summary>
            Gets or sets the reply text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.CustomerNotifiedOfReply">
            <summary>
            Gets or sets the value indicating whether the customer is already notified of the reply to review
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.Rating">
            <summary>
            Review rating
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.HelpfulYesTotal">
            <summary>
            Review helpful votes total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.HelpfulNoTotal">
            <summary>
            Review not helpful votes total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewReviewTypeMappingDto">
            <summary>
            Represents a product review and review type mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewReviewTypeMappingDto.ProductReviewId">
            <summary>
            Gets or sets the product review identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewReviewTypeMappingDto.ReviewTypeId">
            <summary>
            Gets or sets the review type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductReviewReviewTypeMappingDto.Rating">
            <summary>
            Gets or sets the rating
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto">
            <summary>
            Represents a product specification attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.AttributeTypeId">
            <summary>
            Gets or sets the attribute type ID
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.SpecificationAttributeOptionId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.CustomValue">
            <summary>
            Gets or sets the custom value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.AllowFiltering">
            <summary>
            Gets or sets whether the attribute can be filtered by
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.ShowOnProductPage">
            <summary>
            Gets or sets whether the attribute will be shown on the product page
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductSpecificationAttributeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTagDto">
            <summary>
            Represents a product tag
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTagDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTemplateDto">
            <summary>
            Represents a product template
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTemplateDto.Name">
            <summary>
            Gets or sets the template name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTemplateDto.ViewPath">
            <summary>
            Gets or sets the view path
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTemplateDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductTemplateDto.IgnoredProductTypes">
            <summary>
            Gets or sets a comma-separated list of product type identifiers NOT supported by this template
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductVideoDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductVideoDto.VideoId">
            <summary>
            Gets or sets the video identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductVideoDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductWarehouseInventoryDto">
            <summary>
            Represents a record to manage product inventory per warehouse
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductWarehouseInventoryDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductWarehouseInventoryDto.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductWarehouseInventoryDto.StockQuantity">
            <summary>
            Gets or sets the stock quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ProductWarehouseInventoryDto.ReservedQuantity">
            <summary>
            Gets or sets the reserved quantity (ordered but not shipped yet)
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.RelatedProductDto">
            <summary>
            Represents a related product
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.RelatedProductDto.ProductId1">
            <summary>
            Gets or sets the first product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.RelatedProductDto.ProductId2">
            <summary>
            Gets or sets the second product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.RelatedProductDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ReviewTypeDto">
            <summary>
            Represents a review type
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ReviewTypeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ReviewTypeDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ReviewTypeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ReviewTypeDto.VisibleToAllCustomers">
            <summary>
            Gets or sets a value indicating whether the review type is visible to all customers
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.ReviewTypeDto.IsRequired">
            <summary>
            Gets or sets a value indicating whether the review type is required
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeDto">
            <summary>
            Represents a specification attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeDto.SpecificationAttributeGroupId">
            <summary>
            Gets or sets the specification attribute group identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeGroupDto">
            <summary>
            Represents a specification attribute group
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeGroupDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeGroupDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeOptionDto">
            <summary>
            Represents a specification attribute option
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeOptionDto.SpecificationAttributeId">
            <summary>
            Gets or sets the specification attribute identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeOptionDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeOptionDto.ColorSquaresRgb">
            <summary>
            Gets or sets the color RGB value (used when you want to display "Color squares" instead of text)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.SpecificationAttributeOptionDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto">
            <summary>
            Represents a stock quantity change entry
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.QuantityAdjustment">
            <summary>
            Gets or sets the stock quantity adjustment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.StockQuantity">
            <summary>
            Gets or sets current stock quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.Message">
            <summary>
            Gets or sets the message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.CombinationId">
            <summary>
            Gets or sets the product attribute combination identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.StockQuantityHistoryDto.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto">
            <summary>
            Represents a tier price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.StoreId">
            <summary>
            Gets or sets the store identifier (0 - all stores)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.Price">
            <summary>
            Gets or sets the price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.StartDateTimeUtc">
            <summary>
            Gets or sets the start date and time in UTC
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Catalog.TierPriceDto.EndDateTimeUtc">
            <summary>
            Gets or sets the end date and time in UTC
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeDto">
            <summary>
            Represents an address attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeDto.IsRequired">
            <summary>
            Gets or sets a value indicating whether the attribute is required
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeDto.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeValueDto">
            <summary>
            Represents an address attribute value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeValueDto.AddressAttributeId">
            <summary>
            Gets or sets the address attribute identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeValueDto.Name">
            <summary>
            Gets or sets the checkout attribute name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeValueDto.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressAttributeValueDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto">
            <summary>
            Represents an address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.StateProvinceId">
            <summary>
            Gets or sets the state/province identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.County">
            <summary>
            Gets or sets the county
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.Address1">
            <summary>
            Gets or sets the address 1
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.Address2">
            <summary>
            Gets or sets the address 2
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.ZipPostalCode">
            <summary>
            Gets or sets the zip/postal code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.PhoneNumber">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.FaxNumber">
            <summary>
            Gets or sets the fax number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.CustomAttributes">
            <summary>
            Gets or sets the custom attributes (see "AddressAttribute" entity for more info)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.AddressDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto">
            <summary>
            Represents a generic attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto.EntityId">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto.KeyGroup">
            <summary>
            Gets or sets the key group
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto.Key">
            <summary>
            Gets or sets the key
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.GenericAttributeDto.CreatedOrUpdatedDateUTC">
            <summary>
            Gets or sets the created or updated date
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermDto">
            <summary>
            Search term record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermDto.Keyword">
            <summary>
            Gets or sets the keyword
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermDto.Count">
            <summary>
            Gets or sets search count
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermReportLineDto">
            <summary>
            Search term record (for statistics)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermReportLineDto.Keyword">
            <summary>
            Gets or sets the keyword
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Common.SearchTermReportLineDto.Count">
            <summary>
            Gets or sets search count
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.BestCustomerReportLineDto">
            <summary>
            Represents a best customer report line
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.BestCustomerReportLineDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.BestCustomerReportLineDto.OrderTotal">
            <summary>
            Gets or sets the order total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.BestCustomerReportLineDto.OrderCount">
            <summary>
            Gets or sets the order count
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.ChangePasswordResult.Success">
            <summary>
            Gets a value indicating whether request has been completed successfully
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.ChangePasswordResult.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeDto">
            <summary>
            Represents a customer attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeDto.IsRequired">
            <summary>
            Gets or sets a value indicating whether the attribute is required
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeDto.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeValueDto">
            <summary>
            Represents a customer attribute value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeValueDto.CustomerAttributeId">
            <summary>
            Gets or sets the customer attribute identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeValueDto.Name">
            <summary>
            Gets or sets the checkout attribute name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeValueDto.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerAttributeValueDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerCustomerRoleMappingDto">
            <summary>
            Represents a customer-customer role mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerCustomerRoleMappingDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerCustomerRoleMappingDto.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto">
            <summary>
            Represents a customer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.CustomerGuid">
            <summary>
            Gets or sets the customer GUID
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Username">
            <summary>
            Gets or sets the username
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.EmailToRevalidate">
            <summary>
            Gets or sets the email that should be re-validated. Used in scenarios when a customer is already registered and wants to change an email address.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer is tax exempt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.AffiliateId">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.VendorId">
            <summary>
            Gets or sets the vendor identifier with which this customer is associated (maganer)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.HasShoppingCartItems">
            <summary>
            Gets or sets a value indicating whether this customer has some products in the shopping cart
            <remarks>The same as if we run ShoppingCartItems.Count > 0
            We use this property for performance optimization:
            if this property is set to false, then we do not need to load "ShoppingCartItems" navigation property for each page load
            It's used only in a couple of places in the presenation layer
            </remarks>
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.RequireReLogin">
            <summary>
            Gets or sets a value indicating whether the customer is required to re-login
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.FailedLoginAttempts">
            <summary>
            Gets or sets a value indicating number of failed login attempts (wrong password)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.CannotLoginUntilDateUtc">
            <summary>
            Gets or sets the date and time until which a customer cannot login (locked out)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Active">
            <summary>
            Gets or sets a value indicating whether the customer is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the customer has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.IsSystemAccount">
            <summary>
            Gets or sets a value indicating whether the customer account is system
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.SystemName">
            <summary>
            Gets or sets the customer system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.LastIpAddress">
            <summary>
            Gets or sets the last IP address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.LastLoginDateUtc">
            <summary>
            Gets or sets the date and time of last login
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.LastActivityDateUtc">
            <summary>
            Gets or sets the date and time of last activity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.RegisteredInStoreId">
            <summary>
             Gets or sets the store identifier in which customer registered
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.BillingAddressId">
            <summary>
            Gets or sets the billing address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.ShippingAddressId">
            <summary>
            Gets or sets the shipping address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.FirstName">
            <summary>
            Gets or sets the first name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.LastName">
            <summary>
            Gets or sets the last name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Gender">
            <summary>
            Gets or sets the gender
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.DateOfBirth">
            <summary>
            Gets or sets the date of birth
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Company">
            <summary>
            Gets or sets the company
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.StreetAddress">
            <summary>
            Gets or sets the street address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.StreetAddress2">
            <summary>
            Gets or sets the street address 2
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.ZipPostalCode">
            <summary>
            Gets or sets the zip
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.City">
            <summary>
            Gets or sets the city
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.County">
            <summary>
            Gets or sets the county
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.CountryId">
            <summary>
            Gets or sets the country id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.StateProvinceId">
            <summary>
            Gets or sets the state province id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Phone">
            <summary>
            Gets or sets the phone number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.Fax">
            <summary>
            Gets or sets the fax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.VatNumber">
            <summary>
            Gets or sets the vat number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.VatNumberStatusId">
            <summary>
            Gets or sets the vat number status id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.TimeZoneId">
            <summary>
            Gets or sets the time zone id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.CustomCustomerAttributesXML">
            <summary>
            Gets or sets the custom attributes
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.CurrencyId">
            <summary>
            Gets or sets the currency id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.LanguageId">
            <summary>
            Gets or sets the language id
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerDto.TaxDisplayTypeId">
            <summary>
            Gets or sets the tax display type id
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerPasswordDto">
            <summary>
            Represents a customer password
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerPasswordDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerPasswordDto.Password">
            <summary>
            Gets or sets the password
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerPasswordDto.PasswordFormatId">
            <summary>
            Gets or sets the password format identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerPasswordDto.PasswordSalt">
            <summary>
            Gets or sets the password salt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerPasswordDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRegistrationResult.Success">
            <summary>
            Gets a value indicating whether request has been completed successfully
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRegistrationResult.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto">
            <summary>
            Represents a customer role
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.Name">
            <summary>
            Gets or sets the customer role name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.FreeShipping">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as free shipping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.TaxExempt">
            <summary>
            Gets or sets a value indicating whether the customer role is marked as tax exempt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.Active">
            <summary>
            Gets or sets a value indicating whether the customer role is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.IsSystemRole">
            <summary>
            Gets or sets a value indicating whether the customer role is system
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.SystemName">
            <summary>
            Gets or sets the customer role system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.EnablePasswordLifetime">
            <summary>
            Gets or sets a value indicating whether the customers must change passwords after a specified time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.OverrideTaxDisplayType">
            <summary>
            Gets or sets a value indicating whether the customers of this role have other tax display type chosen instead of the default one
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.DefaultTaxDisplayTypeId">
            <summary>
            Gets or sets identifier of the default tax display type (used only with "OverrideTaxDisplayType" enabled)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Customers.CustomerRoleDto.PurchasedWithProductId">
            <summary>
            Gets or sets a product identifier that is required by this customer role. 
            A customer is added to this customer role once a specified product is purchased.
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto">
            <summary>
            Represents a country
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.AllowsBilling">
            <summary>
            Gets or sets a value indicating whether billing is allowed to this country
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.AllowsShipping">
            <summary>
            Gets or sets a value indicating whether shipping is allowed to this country
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.TwoLetterIsoCode">
            <summary>
            Gets or sets the two letter ISO code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.ThreeLetterIsoCode">
            <summary>
            Gets or sets the three letter ISO code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.NumericIsoCode">
            <summary>
            Gets or sets the numeric ISO code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.SubjectToVat">
            <summary>
            Gets or sets a value indicating whether customers in this country must be charged EU VAT
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CountryDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto">
            <summary>
            Represents a currency
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.CurrencyCode">
            <summary>
            Gets or sets the currency code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.Rate">
            <summary>
            Gets or sets the rate
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.DisplayLocale">
            <summary>
            Gets or sets the display locale
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.CustomFormatting">
            <summary>
            Gets or sets the custom formatting
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.CurrencyDto.RoundingTypeId">
            <summary>
            Gets or sets the rounding type identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.ExchangeRateDto">
            <summary>
            Represents an exchange rate
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.ExchangeRateDto.CurrencyCode">
            <summary>
            The three letter ISO code for the Exchange Rate, e.g. USD
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.ExchangeRateDto.Rate">
            <summary>
            The conversion rate of this currency from the base currency
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.ExchangeRateDto.UpdatedOn">
            <summary>
            When was this exchange rate updated from the data source (the data XML feed)
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureDimensionDto">
            <summary>
            Represents a measure dimension
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureDimensionDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureDimensionDto.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureDimensionDto.Ratio">
            <summary>
            Gets or sets the ratio
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureDimensionDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureWeightDto">
            <summary>
            Represents a measure weight
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureWeightDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureWeightDto.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureWeightDto.Ratio">
            <summary>
            Gets or sets the ratio
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.MeasureWeightDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.StateProvinceDto">
            <summary>
            Represents a state province
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.StateProvinceDto.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.StateProvinceDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.StateProvinceDto.Abbreviation">
            <summary>
            Gets or sets the abbreviation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.StateProvinceDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Directory.StateProvinceDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto">
            <summary>
            Represents a discount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.DiscountTypeId">
            <summary>
            Gets or sets the discount type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.UsePercentage">
            <summary>
            Gets or sets a value indicating whether to use percentage
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.DiscountAmount">
            <summary>
            Gets or sets the discount amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.MaximumDiscountAmount">
            <summary>
            Gets or sets the maximum discount amount (used with "UsePercentage")
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.StartDateUtc">
            <summary>
            Gets or sets the discount start date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.EndDateUtc">
            <summary>
            Gets or sets the discount end date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.RequiresCouponCode">
            <summary>
            Gets or sets a value indicating whether discount requires coupon code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.CouponCode">
            <summary>
            Gets or sets the coupon code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.IsCumulative">
            <summary>
            Gets or sets a value indicating whether discount can be used simultaneously with other discounts (with the same discount type)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.DiscountLimitationId">
            <summary>
            Gets or sets the discount limitation identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.LimitationTimes">
            <summary>
            Gets or sets the discount limitation times (used when Limitation is set to "N Times Only" or "N Times Per Customer")
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.MaximumDiscountedQuantity">
            <summary>
            Gets or sets the maximum product quantity which could be discounted
            Used with "Assigned to products" or "Assigned to categories" type
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.AppliedToSubCategories">
            <summary>
            Gets or sets value indicating whether it should be applied to all subcategories or the selected one
            Used with "Assigned to categories" type only.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountDto.IsActive">
            <summary>
            Gets or sets a value indicating whether the discount is active
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountRequirementDto">
            <summary>
            Represents a discount requirement
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountRequirementDto.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountRequirementDto.DiscountRequirementRuleSystemName">
            <summary>
            Gets or sets the discount requirement rule system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountRequirementDto.ParentId">
            <summary>
            Gets or sets the parent requirement identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountRequirementDto.InteractionTypeId">
            <summary>
            Gets or sets an interaction type identifier (has a value for the group and null for the child requirements)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountRequirementDto.IsGroup">
            <summary>
            Gets or sets a value indicating whether this requirement has any child requirements
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountUsageHistoryDto">
            <summary>
            Represents a discount usage history entry
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountUsageHistoryDto.DiscountId">
            <summary>
            Gets or sets the discount identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountUsageHistoryDto.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountUsageHistoryDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountValidationResult.IsValid">
            <summary>
            Gets or sets a value indicating whether discount is valid
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Discounts.DiscountValidationResult.Errors">
            <summary>
            Gets or sets the errors that a customer should see when entering a coupon code (in case if "IsValid" is set to "false")
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto">
            <summary>
            Represents a forum
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.ForumGroupId">
            <summary>
            Gets or sets the forum group identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.NumTopics">
            <summary>
            Gets or sets the number of topics
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.LastTopicId">
            <summary>
            Gets or sets the last topic identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.LastPostId">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.LastPostCustomerId">
            <summary>
            Gets or sets the last post customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumGroupDto">
            <summary>
            Represents a forum group
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumGroupDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumGroupDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumGroupDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumGroupDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto">
            <summary>
            Represents a forum post
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.TopicId">
            <summary>
            Gets or sets the forum topic identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.IPAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostDto.VoteCount">
            <summary>
            Gets or sets the count of votes
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostVoteDto">
            <summary>
            Represents a forum post vote
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostVoteDto.ForumPostId">
            <summary>
            Gets or sets the forum post identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostVoteDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostVoteDto.IsUp">
            <summary>
            Gets or sets a value indicating whether this vote is up or is down
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumPostVoteDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumSubscriptionDto">
            <summary>
            Represents a forum subscription item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumSubscriptionDto.SubscriptionGuid">
            <summary>
            Gets or sets the forum subscription identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumSubscriptionDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumSubscriptionDto.ForumId">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumSubscriptionDto.TopicId">
            <summary>
            Gets or sets the topic identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumSubscriptionDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto">
            <summary>
            Represents a forum topic
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.ForumId">
            <summary>
            Gets or sets the forum identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.TopicTypeId">
            <summary>
            Gets or sets the topic type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.NumPosts">
            <summary>
            Gets or sets the number of posts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.Views">
            <summary>
            Gets or sets the number of views
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.LastPostId">
            <summary>
            Gets or sets the last post identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.LastPostCustomerId">
            <summary>
            Gets or sets the last post customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.LastPostTime">
            <summary>
            Gets or sets the last post date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.ForumTopicDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto">
            <summary>
            Represents a private message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.FromCustomerId">
            <summary>
            Gets or sets the customer identifier who sent the message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.ToCustomerId">
            <summary>
            Gets or sets the customer identifier who should receive the message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.IsRead">
            <summary>
            Gets or sets a value indicating whether message is read
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.IsDeletedByAuthor">
            <summary>
            Gets or sets a value indicating whether message is deleted by author
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.IsDeletedByRecipient">
            <summary>
            Gets or sets a value indicating whether message is deleted by recipient
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Forums.PrivateMessageDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto">
            <summary>
            Represents a GDPR consent
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto.Message">
            <summary>
            Gets or sets the message displayed to customers
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto.IsRequired">
            <summary>
            Gets or setsa value indicating whether the consent is required
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto.RequiredMessage">
            <summary>
            Gets or sets the message displayed to customers when he/she doesn't agree to this consent
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto.DisplayDuringRegistration">
            <summary>
            Gets or sets the value indicating whether this consent is displayed during registrations
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto.DisplayOnCustomerInfoPage">
            <summary>
            Gets or sets the value indicating whether this consent is displayed on my account page (customer info)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprConsentDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto">
            <summary>
            Represents a GDPR log
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto.ConsentId">
            <summary>
            Gets or sets the consent identifier (0 if not related to any consent)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto.CustomerInfo">
            <summary>
            Gets or sets the customer info (when a customer records is already deleted)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto.RequestTypeId">
            <summary>
            Gets or sets the request type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto.RequestDetails">
            <summary>
            Gets or sets the request details
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Gdpr.GdprLogDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto">
            <summary>
            Represents a language
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.LanguageCulture">
            <summary>
            Gets or sets the language culture
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.UniqueSeoCode">
            <summary>
            Gets or sets the unique SEO code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.FlagImageFileName">
            <summary>
            Gets or sets the flag image file name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.Rtl">
            <summary>
            Gets or sets a value indicating whether the language supports "Right-to-left"
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.DefaultCurrencyId">
            <summary>
            Gets or sets the identifier of the default currency for this language; 0 is set when we use the default currency display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.Published">
            <summary>
            Gets or sets a value indicating whether the language is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LanguageDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocaleStringResourceDto">
            <summary>
            Represents a locale string resource
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocaleStringResourceDto.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocaleStringResourceDto.ResourceName">
            <summary>
            Gets or sets the resource name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocaleStringResourceDto.ResourceValue">
            <summary>
            Gets or sets the resource value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocalizedPropertyDto.EntityId">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocalizedPropertyDto.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocalizedPropertyDto.LocaleKeyGroup">
            <summary>
            Gets or sets the locale key group
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocalizedPropertyDto.LocaleKey">
            <summary>
            Gets or sets the locale key
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Localization.LocalizedPropertyDto.LocaleValue">
            <summary>
            Gets or sets the locale value
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto">
            <summary>
            Represents an activity log record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.ActivityLogTypeId">
            <summary>
            Gets or sets the activity log type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.EntityId">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.EntityName">
            <summary>
            Gets or sets the entity name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.Comment">
            <summary>
            Gets or sets the activity comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogDto.IpAddress">
            <summary>
            Gets or sets the IP address
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogTypeDto">
            <summary>
            Represents an activity log type record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogTypeDto.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogTypeDto.Name">
            <summary>
            Gets or sets the display name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Logging.ActivityLogTypeDto.Enabled">
            <summary>
            Gets or sets a value indicating whether the activity log type is enabled
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto">
            <summary>
            Represents a download
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.DownloadGuid">
            <summary>
            Gets or sets a GUID
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.UseDownloadUrl">
            <summary>
            Gets or sets a value indicating whether DownloadUrl property should be used
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.DownloadUrl">
            <summary>
            Gets or sets a download URL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.DownloadBinary">
            <summary>
            Gets or sets the download binary
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.ContentType">
            <summary>
            The mime-type of the download
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.Filename">
            <summary>
            The filename of the download
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.Extension">
            <summary>
            Gets or sets the extension
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.DownloadDto.IsNew">
            <summary>
            Gets or sets a value indicating whether the download is new
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.GetPictureUrlResponse.Url">
            <summary>
            Picture URL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.GetPictureUrlResponse.Picture">
            <summary>
            Picture DTO
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureBinaryDto">
            <summary>
            Represents a picture binary data
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureBinaryDto.BinaryData">
            <summary>
            Gets or sets the picture binary
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureBinaryDto.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto">
            <summary>
            Represents a picture
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto.MimeType">
            <summary>
            Gets or sets the picture mime type
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto.SeoFilename">
            <summary>
            Gets or sets the SEO friendly filename of the picture
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto.AltAttribute">
            <summary>
            Gets or sets the "alt" attribute for "img" HTML element. If empty, then a default rule will be used (e.g. product name)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto.TitleAttribute">
            <summary>
            Gets or sets the "title" attribute for "img" HTML element. If empty, then a default rule will be used (e.g. product name)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto.IsNew">
            <summary>
            Gets or sets a value indicating whether the picture is new
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Media.PictureDto.VirtualPath">
            <summary>
            Gets or sets the picture virtual path
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto">
            <summary>
            Represents a campaign
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.StoreId">
            <summary>
            Gets or sets the store identifier  which subscribers it will be sent to; set 0 for all newsletter subscribers
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier  which subscribers it will be sent to; set 0 for all newsletter subscribers
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.CampaignDto.DontSendBeforeDateUtc">
            <summary>
            Gets or sets the date and time in UTC before which this email should not be sent
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto">
            <summary>
            Represents an email account
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.Email">
            <summary>
            Gets or sets an email address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.DisplayName">
            <summary>
            Gets or sets an email display name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.Host">
            <summary>
            Gets or sets an email host
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.Port">
            <summary>
            Gets or sets an email port
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.Username">
            <summary>
            Gets or sets an email user name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.Password">
            <summary>
            Gets or sets an email password
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.EnableSsl">
            <summary>
            Gets or sets a value that controls whether the SmtpClient uses Secure Sockets Layer (SSL) to encrypt the connection
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.MaxNumberOfEmails">
            <summary>
            Gets or sets the maximum number of emails sent at one time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.EmailAuthenticationMethodId">
            <summary>
            Gets or sets an identifier of the email authentication method
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.ClientId">
            <summary>
            Gets or sets the client identifier (OAuth2)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.ClientSecret">
            <summary>
            Gets or sets the client Secret
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.EmailAccountDto.TenantId">
            <summary>
            Gets or sets the tenant ID of the organization from which the application will let users sign-in
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto">
            <summary>
            Represents a message template
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.BccEmailAddresses">
            <summary>
            Gets or sets the BCC Email addresses
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.IsActive">
            <summary>
            Gets or sets a value indicating whether the template is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.DelayBeforeSend">
            <summary>
            Gets or sets the delay before sending message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.DelayPeriodId">
            <summary>
            Gets or sets the period of message delay 
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.AttachedDownloadId">
            <summary>
            Gets or sets the download identifier of attached file
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.AllowDirectReply">
            <summary>
            Gets or sets a value indicating whether direct reply is allowed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.EmailAccountId">
            <summary>
            Gets or sets the used email account identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.MessageTemplateDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto">
            <summary>
            Represents NewsLetterSubscription entity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto.NewsLetterSubscriptionGuid">
            <summary>
            Gets or sets the newsletter subscription GUID
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto.Email">
            <summary>
            Gets or sets the subscriber email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto.Active">
            <summary>
            Gets or sets a value indicating whether subscription is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto.StoreId">
            <summary>
            Gets or sets the store identifier in which a customer has subscribed to newsletter
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time when subscription was created
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.NewsLetterSubscriptionDto.LanguageId">
            <summary>
            Gets or sets the language identifier in which a customer has subscribed to newsletter
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto">
            <summary>
            Represents an email item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.PriorityId">
            <summary>
            Gets or sets the priority
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.From">
            <summary>
            Gets or sets the From property (email address)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.FromName">
            <summary>
            Gets or sets the FromName property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.To">
            <summary>
            Gets or sets the To property (email address)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.ToName">
            <summary>
            Gets or sets the ToName property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.ReplyTo">
            <summary>
            Gets or sets the ReplyTo property (email address)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.ReplyToName">
            <summary>
            Gets or sets the ReplyToName property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.CC">
            <summary>
            Gets or sets the CC
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.Bcc">
            <summary>
            Gets or sets the BCC
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.Subject">
            <summary>
            Gets or sets the subject
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.AttachmentFilePath">
            <summary>
            Gets or sets the attachment file path (full file path)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.AttachmentFileName">
            <summary>
            Gets or sets the attachment file name. If specified, then this file name will be sent to a recipient. Otherwise, "AttachmentFilePath" name will be used.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.AttachedDownloadId">
            <summary>
            Gets or sets the download identifier of attached file
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of item creation in UTC
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.DontSendBeforeDateUtc">
            <summary>
            Gets or sets the date and time in UTC before which this email should not be sent
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.SentTries">
            <summary>
            Gets or sets the send tries
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.SentOnUtc">
            <summary>
            Gets or sets the sent date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Messages.QueuedEmailDto.EmailAccountId">
            <summary>
            Gets or sets the used email account identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto">
            <summary>
            Represents a news comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.CommentTitle">
            <summary>
            Gets or sets the comment title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.CommentText">
            <summary>
            Gets or sets the comment text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.NewsItemId">
            <summary>
            Gets or sets the news item identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.IsApproved">
            <summary>
            Gets or sets a value indicating whether the comment is approved
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsCommentDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto">
            <summary>
            Represents a news item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.Title">
            <summary>
            Gets or sets the news title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.Short">
            <summary>
            Gets or sets the short text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.Full">
            <summary>
            Gets or sets the full text
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.Published">
            <summary>
            Gets or sets a value indicating whether the news item is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.StartDateUtc">
            <summary>
            Gets or sets the news item start date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.EndDateUtc">
            <summary>
            Gets or sets the news item end date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.AllowComments">
            <summary>
            Gets or sets a value indicating whether the news post comments are allowed 
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.News.NewsItemDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.AdjustShippingRateResponse.AdjustedShippingRate">
            <summary>
            Adjusted shipping rate
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.AdjustShippingRateResponse.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.AppliedGiftCardResponseDto">
            <summary>
            Applied gift card
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.AppliedGiftCardResponseDto.AmountCanBeUsed">
            <summary>
            Gets or sets the used value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.AppliedGiftCardResponseDto.GiftCard">
            <summary>
            Gets the gift card
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.BestsellersReportLineDto">
            <summary>
            Represents a best sellers report line
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.BestsellersReportLineDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.BestsellersReportLineDto.TotalAmount">
            <summary>
            Gets or sets the total amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.BestsellersReportLineDto.TotalQuantity">
            <summary>
            Gets or sets the total quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.BestsellersReportLineDto.ProductName">
            <summary>
            Gets or sets the product name
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto">
            <summary>
            Represents a checkout attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.TextPrompt">
            <summary>
            Gets or sets the text prompt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.IsRequired">
            <summary>
            Gets or sets a value indicating whether the entity is required
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.ShippableProductRequired">
            <summary>
            Gets or sets a value indicating whether shippable products are required in order to display this attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.IsTaxExempt">
            <summary>
            Gets or sets a value indicating whether the attribute is marked as tax exempt
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.TaxCategoryId">
            <summary>
            Gets or sets the tax category identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.ValidationMinLength">
            <summary>
            Gets or sets the validation rule for minimum length (for textbox and multiline textbox)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.ValidationMaxLength">
            <summary>
            Gets or sets the validation rule for maximum length (for textbox and multiline textbox)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.ValidationFileAllowedExtensions">
            <summary>
            Gets or sets the validation rule for file allowed extensions (for file upload)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.ValidationFileMaximumSize">
            <summary>
            Gets or sets the validation rule for file maximum size in kilobytes (for file upload)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.DefaultValue">
            <summary>
            Gets or sets the default value (for textbox and multiline textbox)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeDto.ConditionAttributeXml">
            <summary>
            Gets or sets a condition (depending on other attribute) when this attribute should be enabled (visible).
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto">
            <summary>
            Represents a checkout attribute value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.CheckoutAttributeId">
            <summary>
            Gets or sets the checkout attribute mapping identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.Name">
            <summary>
            Gets or sets the checkout attribute name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.ColorSquaresRgb">
            <summary>
            Gets or sets the color RGB value (used with "Color squares" attribute type)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.PriceAdjustment">
            <summary>
            Gets or sets the price adjustment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.WeightAdjustment">
            <summary>
            Gets or sets the weight adjustment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.CheckoutAttributeValueDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetRecurringCycleInfoResponse.Error">
            <summary>
            The error (if exists); otherwise, empty string
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetRecurringCycleInfoResponse.CycleLength">
            <summary>
            Cycle length
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetRecurringCycleInfoResponse.CyclePeriod">
            <summary>
            Cycle period
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetRecurringCycleInfoResponse.TotalCycles">
            <summary>
            Total cycles
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartShippingTotalResponse.ShippingTotal">
            <summary>
            Shipping total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartShippingTotalResponse.TaxRate">
            <summary>
            Applied tax rate
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartShippingTotalResponse.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartSubTotalResponse.DiscountAmount">
            <summary>
            Applied discount amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartSubTotalResponse.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartSubTotalResponse.SubTotalWithoutDiscount">
            <summary>
            Sub total (without discount)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartSubTotalResponse.SubTotalWithDiscount">
            <summary>
            Sub total (with discount)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartSubTotalResponse.TaxRates">
            <summary>
            Tax rates (of order sub total)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartTotalResponse.ShoppingCartTotal">
            <summary>
            Shopping cart total (Null if shopping cart total couldn't be calculated now)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartTotalResponse.RedeemedRewardPointsAmount">
            <summary>
            Discount amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartTotalResponse.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartTotalResponse.AppliedGiftCards">
            <summary>
            Applied gift cards
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartTotalResponse.RedeemedRewardPoints">
            <summary>
            Reward points to redeem
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetShoppingCartTotalResponse.DiscountAmount">
            <summary>
            Reward points amount in primary store currency to redeem
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetSubTotalResponse.SubTotal">
            <summary>
            Sub total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetSubTotalResponse.DiscountAmount">
            <summary>
            Applied discount amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetSubTotalResponse.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetSubTotalResponse.MaximumDiscountQty">
            <summary>
            Maximum discounted qty
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetTaxTotalTaxRateResponse.TaxTotal">
            <summary>
            Tax total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetTaxTotalTaxRateResponse.TaxRates">
            <summary>
            Tax rates
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetUnitPriceResponse.UnitPrice">
            <summary>
            Unit price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetUnitPriceResponse.DiscountAmount">
            <summary>
            Applied discount amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GetUnitPriceResponse.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.PurchasedWithOrderItemId">
            <summary>
            Gets or sets the associated order item identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.GiftCardTypeId">
            <summary>
            Gets or sets the gift card type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.Amount">
            <summary>
            Gets or sets the amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.IsGiftCardActivated">
            <summary>
            Gets or sets a value indicating whether gift card is activated
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.GiftCardCouponCode">
            <summary>
            Gets or sets a gift card coupon code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.RecipientName">
            <summary>
            Gets or sets a recipient name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.RecipientEmail">
            <summary>
            Gets or sets a recipient email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.SenderName">
            <summary>
            Gets or sets a sender name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.SenderEmail">
            <summary>
            Gets or sets a sender email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.Message">
            <summary>
            Gets or sets a message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.IsRecipientNotified">
            <summary>
            Gets or sets a value indicating whether recipient is notified
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardUsageHistoryDto">
            <summary>
            Represents a gift card usage history entry
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardUsageHistoryDto.GiftCardId">
            <summary>
            Gets or sets the gift card identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardUsageHistoryDto.UsedWithOrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardUsageHistoryDto.UsedValue">
            <summary>
            Gets or sets the used value (amount)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.GiftCardUsageHistoryDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse">
            <summary>
            Represents an order average report line
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse.CountOrders">
            <summary>
            Gets or sets the count
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse.SumShippingExclTax">
            <summary>
            Gets or sets the shipping summary (excluding tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse.OrderPaymentFeeExclTaxSum">
            <summary>
            Gets or sets the payment fee summary (excluding tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse.SumTax">
            <summary>
            Gets or sets the tax summary
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse.SumOrders">
            <summary>
            Gets or sets the order total summary
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderAverageReportLineResponse.SumRefundedAmount">
            <summary>
            Gets or sets the refunded amount summary
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderByCountryReportLineResponse">
            <summary>
            Represents an "order by country" report line
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderByCountryReportLineResponse.CountryId">
            <summary>
            Country identifier; null for unknown country
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderByCountryReportLineResponse.TotalOrders">
            <summary>
            Gets or sets the number of orders
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderByCountryReportLineResponse.SumOrders">
            <summary>
            Gets or sets the order total summary
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto">
            <summary>
            Represents an order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderGuid">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.BillingAddressId">
            <summary>
            Gets or sets the billing address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.ShippingAddressId">
            <summary>
            Gets or sets the shipping address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PickupAddressId">
            <summary>
            Gets or sets the pickup address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PickupInStore">
            <summary>
            Gets or sets a value indicating whether a customer chose "pick up in store" shipping option
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderStatusId">
            <summary>
            Gets or sets an order status identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.ShippingStatusId">
            <summary>
            Gets or sets the shipping status identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PaymentStatusId">
            <summary>
            Gets or sets the payment status identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PaymentMethodSystemName">
            <summary>
            Gets or sets the payment method system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomerCurrencyCode">
            <summary>
            Gets or sets the customer currency code (at the moment of order placing)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CurrencyRate">
            <summary>
            Gets or sets the currency rate
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomerTaxDisplayTypeId">
            <summary>
            Gets or sets the customer tax display type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.VatNumber">
            <summary>
            Gets or sets the VAT number (the European Union Value Added Tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderSubtotalInclTax">
            <summary>
            Gets or sets the order subtotal (include tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderSubtotalExclTax">
            <summary>
            Gets or sets the order subtotal (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderSubTotalDiscountInclTax">
            <summary>
            Gets or sets the order subtotal discount (include tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderSubTotalDiscountExclTax">
            <summary>
            Gets or sets the order subtotal discount (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderShippingInclTax">
            <summary>
            Gets or sets the order shipping (include tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderShippingExclTax">
            <summary>
            Gets or sets the order shipping (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PaymentMethodAdditionalFeeInclTax">
            <summary>
            Gets or sets the payment method additional fee (incl tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PaymentMethodAdditionalFeeExclTax">
            <summary>
            Gets or sets the payment method additional fee (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.TaxRates">
            <summary>
            Gets or sets the tax rates
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderTax">
            <summary>
            Gets or sets the order tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderDiscount">
            <summary>
            Gets or sets the order discount (applied to order total)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.OrderTotal">
            <summary>
            Gets or sets the order total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.RefundedAmount">
            <summary>
            Gets or sets the refunded amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.RewardPointsHistoryEntryId">
            <summary>
            Gets or sets the reward points history entry identifier when reward points were earned (gained) for placing this order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CheckoutAttributeDescription">
            <summary>
            Gets or sets the checkout attribute description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CheckoutAttributesXml">
            <summary>
            Gets or sets the checkout attributes in XML format
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomerLanguageId">
            <summary>
            Gets or sets the customer language identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.AffiliateId">
            <summary>
            Gets or sets the affiliate identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomerIp">
            <summary>
            Gets or sets the customer IP address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.AllowStoringCreditCardNumber">
            <summary>
            Gets or sets a value indicating whether storing of credit card number is allowed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CardType">
            <summary>
            Gets or sets the card type
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CardName">
            <summary>
            Gets or sets the card name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CardNumber">
            <summary>
            Gets or sets the card number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.MaskedCreditCardNumber">
            <summary>
            Gets or sets the masked credit card number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CardCvv2">
            <summary>
            Gets or sets the card CVV2
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CardExpirationMonth">
            <summary>
            Gets or sets the card expiration month
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CardExpirationYear">
            <summary>
            Gets or sets the card expiration year
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.AuthorizationTransactionId">
            <summary>
            Gets or sets the authorization transaction identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.AuthorizationTransactionCode">
            <summary>
            Gets or sets the authorization transaction code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.AuthorizationTransactionResult">
            <summary>
            Gets or sets the authorization transaction result
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CaptureTransactionId">
            <summary>
            Gets or sets the capture transaction identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CaptureTransactionResult">
            <summary>
            Gets or sets the capture transaction result
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.SubscriptionTransactionId">
            <summary>
            Gets or sets the subscription transaction identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.PaidDateUtc">
            <summary>
            Gets or sets the paid date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.ShippingMethod">
            <summary>
            Gets or sets the shipping method
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.ShippingRateComputationMethodSystemName">
            <summary>
            Gets or sets the shipping rate computation method identifier or the pickup point provider identifier (if PickupInStore is true)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomValuesXml">
            <summary>
            Gets or sets the serialized CustomValues (values from ProcessPaymentRequest)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of order creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.CustomOrderNumber">
            <summary>
            Gets or sets the custom order number without prefix
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderDto.RedeemedRewardPointsEntryId">
            <summary>
            Gets or sets the reward points history record (spent by a customer when placing this order)
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto">
            <summary>
            Represents an order item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.OrderItemGuid">
            <summary>
            Gets or sets the order item identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.UnitPriceInclTax">
            <summary>
            Gets or sets the unit price in primary store currency (include tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.UnitPriceExclTax">
            <summary>
            Gets or sets the unit price in primary store currency (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.PriceInclTax">
            <summary>
            Gets or sets the price in primary store currency (include tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.PriceExclTax">
            <summary>
            Gets or sets the price in primary store currency (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.DiscountAmountInclTax">
            <summary>
            Gets or sets the discount amount (include tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.DiscountAmountExclTax">
            <summary>
            Gets or sets the discount amount (exclude tax)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.OriginalProductCost">
            <summary>
            Gets or sets the original cost of this order item (when an order was placed), qty 1
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.AttributeDescription">
            <summary>
            Gets or sets the attribute description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.AttributesXml">
            <summary>
            Gets or sets the product attributes in XML format
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.DownloadCount">
            <summary>
            Gets or sets the download count
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.IsDownloadActivated">
            <summary>
            Gets or sets a value indicating whether download is activated
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.LicenseDownloadId">
            <summary>
            Gets or sets a license download identifier (in case this is a downloadable product)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.ItemWeight">
            <summary>
            Gets or sets the total weight of one item
            It's nullable for compatibility with the previous version of nopCommerce where was no such property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.RentalStartDateUtc">
            <summary>
            Gets or sets the rental product start date (null if it's not a rental product)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderItemDto.RentalEndDateUtc">
            <summary>
            Gets or sets the rental product end date (null if it's not a rental product)
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto">
            <summary>
            Represents an order note
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto.Note">
            <summary>
            Gets or sets the note
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto.DownloadId">
            <summary>
            Gets or sets the attached file (download) identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto.DisplayToCustomer">
            <summary>
            Gets or sets a value indicating whether a customer can see a note
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.OrderNoteDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of order note creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.PlaceOrderResultDto.Success">
            <summary>
            Gets a value indicating whether request has been completed successfully
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.PlaceOrderResultDto.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.PlaceOrderResultDto.PlacedOrder">
            <summary>
            Gets or sets the placed order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto">
            <summary>
            Represents a payment info holder
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.StoreId">
            <summary>
            Gets or sets a store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CustomerId">
            <summary>
            Gets or sets a customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.OrderGuid">
            <summary>
            Gets or sets an order unique identifier. Used when order is not saved yet (payment gateways that do not redirect a customer to a third-party URL)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.OrderGuidGeneratedOnUtc">
            <summary>
            Gets or sets a datetime when "OrderGuid" property was generated (used for security purposes)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.OrderTotal">
            <summary>
            Gets or sets an order total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.PaymentMethodSystemName">
            <summary>
            /// <summary>
            Gets or sets a payment method identifier
            </summary>
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CreditCardType">
            <summary>
            Gets or sets a credit card type (Visa, Master Card, etc...). We leave it empty if not used by a payment gateway
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CreditCardName">
            <summary>
            Gets or sets a credit card owner name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CreditCardNumber">
            <summary>
            Gets or sets a credit card number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CreditCardExpireYear">
            <summary>
            Gets or sets a credit card expire year
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CreditCardExpireMonth">
            <summary>
            Gets or sets a credit card expire month
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CreditCardCvv2">
            <summary>
            Gets or sets a credit card CVV2 (Card Verification Value)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.InitialOrder">
            <summary>
            Gets or sets an initial (parent) order identifier if order is recurring
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.RecurringCycleLength">
            <summary>
            Gets or sets the cycle length
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.RecurringCyclePeriod">
            <summary>
            Gets or sets the cycle period
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.RecurringTotalCycles">
            <summary>
            Gets or sets the total cycles
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ProcessPaymentRequestDto.CustomValues">
            <summary>
            You can store any custom value in this property
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto">
            <summary>
            Represents a recurring payment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.CycleLength">
            <summary>
            Gets or sets the cycle length
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.CyclePeriodId">
            <summary>
            Gets or sets the cycle period identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.TotalCycles">
            <summary>
            Gets or sets the total cycles
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.StartDateUtc">
            <summary>
            Gets or sets the start date
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.IsActive">
            <summary>
            Gets or sets a value indicating whether the payment is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.LastPaymentFailed">
            <summary>
            Gets or sets a value indicating whether the last payment failed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.InitialOrderId">
            <summary>
            Gets or sets the initial order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of payment creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentHistoryDto">
            <summary>
            Represents a recurring payment history
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentHistoryDto.RecurringPaymentId">
            <summary>
            Gets or sets the recurring payment identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentHistoryDto.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RecurringPaymentHistoryDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestActionDto">
            <summary>
            Represents a return request action
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestActionDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestActionDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto">
            <summary>
            Represents a return request
            </summary>    
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.CustomNumber">
            <summary>
            Custom number of return request
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.OrderItemId">
            <summary>
            Gets or sets the order item identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.ReturnedQuantity">
            <summary>
            Gets or sets the quantity returned to stock
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.ReasonForReturn">
            <summary>
            Gets or sets the reason to return
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.RequestedAction">
            <summary>
            Gets or sets the requested action
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.CustomerComments">
            <summary>
            Gets or sets the customer comments
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.UploadedFileId">
            <summary>
            Gets or sets identifier of the file (Download) uploaded by the customer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.StaffNotes">
            <summary>
            Gets or sets the staff notes
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.ReturnRequestStatusId">
            <summary>
            Gets or sets the return status identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of entity creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of entity update
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestReasonDto">
            <summary>
            Represents a return request reason
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestReasonDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ReturnRequestReasonDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto">
            <summary>
            Represents a reward point history entry
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.StoreId">
            <summary>
            Gets or sets the store identifier in which these reward points were awarded or redeemed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.Points">
            <summary>
            Gets or sets the points redeemed/added
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.PointsBalance">
            <summary>
            Gets or sets the points balance
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.UsedAmount">
            <summary>
            Gets or sets the used amount
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.Message">
            <summary>
            Gets or sets the message
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.EndDateUtc">
            <summary>
            Gets or sets the date and time when the points will no longer be valid
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.ValidPoints">
            <summary>
            Gets or sets the number of valid points that have not yet spent (only for positive amount of points)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.RewardPointsHistoryDto.UsedWithOrder">
            <summary>
            Used with order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.SalesSummaryReportLineDto">
            <summary>
            Represents sales summary report line
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto">
            <summary>
            Represents a shopping cart item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.ShoppingCartTypeId">
            <summary>
            Gets or sets the shopping cart type identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.ProductId">
            <summary>
            Gets or sets the product identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.AttributesXml">
            <summary>
            Gets or sets the product attributes in XML format
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.CustomerEnteredPrice">
            <summary>
            Gets or sets the price enter by a customer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.RentalStartDateUtc">
            <summary>
            Gets or sets the rental product start date (null if it's not a rental product)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.RentalEndDateUtc">
            <summary>
            Gets or sets the rental product end date (null if it's not a rental product)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.ShoppingCartItemDto.UpdatedOnUtc">
            <summary>
            Gets or sets the date and time of instance update
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.UpdatedOrder">
            <summary>
            The updated order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.UpdatedOrderItem">
            <summary>
            The updated order item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.PriceInclTax">
            <summary>
            The price of item with tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.PriceExclTax">
            <summary>
            The price of item without tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.Quantity">
            <summary>
            The quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.DiscountAmountInclTax">
            <summary>
            The amount of discount with tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.DiscountAmountExclTax">
            <summary>
            The amount of discount without tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.SubTotalInclTax">
            <summary>
            Subtotal of item with tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.SubTotalExclTax">
            <summary>
            Subtotal of item without tax
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.Warnings">
            <summary>
            Warnings
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.AppliedDiscounts">
            <summary>
            Applied discounts
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Orders.UpdateOrderParametersDto.PickupPoint">
            <summary>
            Pickup point
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto">
            <summary>
            Represents a plugin descriptor
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.Group">
            <summary>
            Gets or sets the plugin group
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.FriendlyName">
            <summary>
            Gets or sets the plugin friendly name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.SupportedVersions">
            <summary>
            Gets or sets the supported versions of nopCommerce
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.Author">
            <summary>
            Gets or sets the author
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.AssemblyFileName">
            <summary>
            Gets or sets the name of the assembly file
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.LimitedToStores">
            <summary>
            Gets or sets the list of store identifiers in which this plugin is available. If empty, then this plugin is available in all stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.LimitedToCustomerRoles">
            <summary>
            Gets or sets the list of customer role identifiers for which this plugin is available. If empty, then this plugin is available for all ones.
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.DependsOn">
            <summary>
            Gets or sets the list of plugins' system name that this plugin depends on
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.SystemName">
            <summary>
            Gets or sets the plugin system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Plugins.PluginDescriptorDto.Version">
            <summary>
            Gets or sets the version
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto">
            <summary>
            Represents a poll answer
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto.PollId">
            <summary>
            Gets or sets the poll identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto.Name">
            <summary>
            Gets or sets the poll answer name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto.NumberOfVotes">
            <summary>
            Gets or sets the current number of votes
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollAnswerDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto">
            <summary>
            Represents a poll
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.SystemKeyword">
            <summary>
            Gets or sets the system keyword
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.ShowOnHomepage">
            <summary>
            Gets or sets a value indicating whether the entity should be shown on home page
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.AllowGuestsToVote">
            <summary>
            Gets or sets a value indicating whether the anonymous votes are allowed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.StartDateUtc">
            <summary>
            Gets or sets the poll start date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollDto.EndDateUtc">
            <summary>
            Gets or sets the poll end date and time
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollVotingRecordDto">
            <summary>
            Represents a poll voting record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollVotingRecordDto.PollAnswerId">
            <summary>
            Gets or sets the poll answer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollVotingRecordDto.CustomerId">
            <summary>
            Gets or sets the customer identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Polls.PollVotingRecordDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of instance creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.AclRecordDto">
            <summary>
            Represents an ACL record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.AclRecordDto.EntityId">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.AclRecordDto.EntityName">
            <summary>
            Gets or sets the entity name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.AclRecordDto.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordCustomerRoleMappingDto">
            <summary>
            Represents a permission record-customer role mapping Dto
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordCustomerRoleMappingDto.PermissionRecordId">
            <summary>
            Gets or sets the permission record identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordCustomerRoleMappingDto.CustomerRoleId">
            <summary>
            Gets or sets the customer role identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordDto">
            <summary>
            Represents a permission record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordDto.Name">
            <summary>
            Gets or sets the permission name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordDto.SystemName">
            <summary>
            Gets or sets the permission system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Security.PermissionRecordDto.Category">
            <summary>
            Gets or sets the permission category
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto">
            <summary>
            Represents an URL record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto.EntityId">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto.EntityName">
            <summary>
            Gets or sets the entity name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto.Slug">
            <summary>
            Gets or sets the slug
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto.IsActive">
            <summary>
            Gets or sets the value indicating whether the record is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Seo.UrlRecordDto.LanguageId">
            <summary>
            Gets or sets the language identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.DeliveryDateDto">
            <summary>
            Represents a delivery date 
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.DeliveryDateDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.DeliveryDateDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.ProductAvailabilityRangeDto">
            <summary>
            Represents a product availability range
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.ProductAvailabilityRangeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.Date.ProductAvailabilityRangeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetPickupPointsResponseDto.PickupPoints">
            <summary>
            Gets or sets a list of pickup points
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetPickupPointsResponseDto.Errors">
            <summary>
            Gets or sets errors
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetPickupPointsResponseDto.Success">
            <summary>
            Gets a value indicating whether request has been completed successfully
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetPickupPointsResponseDto.AddError(System.String)">
            <summary>
            Add error
            </summary>
            <param name="error">Error</param>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetShippingOptionResponseDto.ShippingOptions">
            <summary>
            Gets or sets a list of shipping options
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetShippingOptionResponseDto.ShippingFromMultipleLocations">
            <summary>
            Gets or sets a value indicating whether shipping is done from multiple locations (warehouses)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetShippingOptionResponseDto.Errors">
            <summary>
            Gets or sets errors
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetShippingOptionResponseDto.Success">
            <summary>
            Gets a value indicating whether request has been completed successfully
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.GetShippingOptionResponseDto.AddError(System.String)">
            <summary>
            Add error
            </summary>
            <param name="error">Error</param>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto">
            <summary>
            Pickup point
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.Name">
            <summary>
            Gets or sets a name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.Description">
            <summary>
            Gets or sets a description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.ProviderSystemName">
            <summary>
            Gets or sets a system name of the pickup point provider
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.Address">
            <summary>
            Gets or sets an address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.City">
            <summary>
            Gets or sets a city
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.County">
            <summary>
            Gets or sets a county
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.StateAbbreviation">
            <summary>
            Gets or sets a state abbreviation
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.CountryCode">
            <summary>
            Gets or sets a two-letter ISO country code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.ZipPostalCode">
            <summary>
            Gets or sets a zip postal code
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.Latitude">
            <summary>
            Gets or sets a latitude
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.Longitude">
            <summary>
            Gets or sets a longitude
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.PickupFee">
            <summary>
            Gets or sets a fee for the pickup
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.OpeningHours">
            <summary>
            Gets or sets an opening hours
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.PickupPointDto.TransitDays">
            <summary>
            Gets or sets a transit days
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto">
            <summary>
            Represents a shipment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.OrderId">
            <summary>
            Gets or sets the order identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.TrackingNumber">
            <summary>
            Gets or sets the tracking number of this shipment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.TotalWeight">
            <summary>
            Gets or sets the total weight of this shipment
            It's nullable for compatibility with the previous version of nopCommerce where was no such property
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.ShippedDateUtc">
            <summary>
            Gets or sets the shipped date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.DeliveryDateUtc">
            <summary>
            Gets or sets the delivery date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.ReadyForPickupDateUtc">
            <summary>
            Gets or sets the ready for pickup date and time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentDto.CreatedOnUtc">
            <summary>
            Gets or sets the entity creation date
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto">
            <summary>
            Represents a shipment item
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto.ShipmentId">
            <summary>
            Gets or sets the shipment identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto.OrderItemId">
            <summary>
            Gets or sets the order item identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto.Quantity">
            <summary>
            Gets or sets the quantity
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShipmentItemDto.WarehouseId">
            <summary>
            Gets or sets the warehouse identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodCountryMappingDto">
            <summary>
            Represents a shipping method country mapping
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodCountryMappingDto.ShippingMethodId">
            <summary>
            Gets or sets the shipping method identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodCountryMappingDto.CountryId">
            <summary>
            Gets or sets the country identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodDto">
            <summary>
            Represents a shipping method
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingMethodDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.ShippingRateComputationMethodSystemName">
            <summary>
            Gets or sets the system name of shipping rate computation method
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.Rate">
            <summary>
            Gets or sets a shipping rate (without discounts, additional shipping charges, etc)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.Name">
            <summary>
            Gets or sets a shipping option name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.Description">
            <summary>
            Gets or sets a shipping option description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.TransitDays">
            <summary>
            Gets or sets a transit days
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.IsPickupInStore">
            <summary>
            Gets or sets a value indicating if it's pickup in store shipping option
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.ShippingOptionDto.DisplayOrder">
            <summary>
            Gets or sets a display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.WarehouseDto">
            <summary>
            Represents a warehouse
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.WarehouseDto.Name">
            <summary>
            Gets or sets the warehouse name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.WarehouseDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Shipping.WarehouseDto.AddressId">
            <summary>
            Gets or sets the address identifier of the warehouse
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto">
            <summary>
            Represents a store
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.Name">
            <summary>
            Gets or sets the store name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.DefaultMetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.DefaultMetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.DefaultTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.HomepageTitle">
            <summary>
            Home page title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.HomepageDescription">
            <summary>
            Home page description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.Url">
            <summary>
            Gets or sets the store URL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.SslEnabled">
            <summary>
            Gets or sets a value indicating whether SSL is enabled
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.Hosts">
            <summary>
            Gets or sets the comma separated list of possible HTTP_HOST values
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.DefaultLanguageId">
            <summary>
            Gets or sets the identifier of the default language for this store; 0 is set when we use the default language display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.CompanyName">
            <summary>
            Gets or sets the company name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.CompanyAddress">
            <summary>
            Gets or sets the company address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.CompanyPhoneNumber">
            <summary>
            Gets or sets the store phone number
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.CompanyVat">
            <summary>
            Gets or sets the company VAT (used in Europe Union countries)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreMappingDto">
            <summary>
            Represents a store mapping record
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreMappingDto.EntityId">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreMappingDto.EntityName">
            <summary>
            Gets or sets the entity name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Stores.StoreMappingDto.StoreId">
            <summary>
            Gets or sets the store identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto">
            <summary>
            Represents a schedule task
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.Seconds">
            <summary>
            Gets or sets the run period (in seconds)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.Type">
            <summary>
            Gets or sets the type of appropriate IScheduleTask class
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.LastEnabledUtc">
            <summary>
            Gets or sets the datetime when task was enabled last time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.Enabled">
            <summary>
            Gets or sets the value indicating whether a task is enabled
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.StopOnError">
            <summary>
            Gets or sets the value indicating whether a task should be stopped on some error
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.LastStartUtc">
            <summary>
            Gets or sets the datetime when it was started last time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.LastEndUtc">
            <summary>
            Gets or sets the datetime when it was finished last time (no matter failed is success)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tasks.ScheduleTaskDto.LastSuccessUtc">
            <summary>
            Gets or sets the datetime when it was successfully finished last time
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetTaxTotalResponse.TaxTotal">
            <summary>
            Tax total
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetTaxTotalResponse.TaxRates">
            <summary>
            Tax rates
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetTaxTotalResponse.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetTaxTotalResponse.Success">
            <summary>
            A value indicating whether request has been completed successfully
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetVatNumberStatusResponse.VatNumberStatus">
            <summary>
            The VAT number status enumeration
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetVatNumberStatusResponse.Name">
            <summary>
            Company name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.GetVatNumberStatusResponse.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.ProductPriceResponse.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.ProductPriceResponse.TaxRate">
            <summary>
            Tax rate
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.TaxCategoryDto">
            <summary>
            Represents a tax category
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.TaxCategoryDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Tax.TaxCategoryDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto">
            <summary>
            Represents a topic
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.SystemName">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.IncludeInSitemap">
            <summary>
            Gets or sets the value indicating whether this topic should be included in sitemap
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.IncludeInTopMenu">
            <summary>
            Gets or sets the value indicating whether this topic should be included in top menu
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.IncludeInFooterColumn1">
            <summary>
            Gets or sets the value indicating whether this topic should be included in footer (column 1)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.IncludeInFooterColumn2">
            <summary>
            Gets or sets the value indicating whether this topic should be included in footer (column 1)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.IncludeInFooterColumn3">
            <summary>
            Gets or sets the value indicating whether this topic should be included in footer (column 1)
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.AccessibleWhenStoreClosed">
            <summary>
            Gets or sets the value indicating whether this topic is accessible when a store is closed
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.IsPasswordProtected">
            <summary>
            Gets or sets the value indicating whether this topic is password protected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.Password">
            <summary>
            Gets or sets the password
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.Body">
            <summary>
            Gets or sets the body
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.Published">
            <summary>
            Gets or sets a value indicating whether the entity is published
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.TopicTemplateId">
            <summary>
            Gets or sets a value of used topic template identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.SubjectToAcl">
            <summary>
            Gets or sets a value indicating whether the entity is subject to ACL
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Topics.TopicDto.LimitedToStores">
            <summary>
            Gets or sets a value indicating whether the entity is limited/restricted to certain stores
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.TopicTemplates.TopicTemplateDto">
            <summary>
            Represents a topic template
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.TopicTemplates.TopicTemplateDto.Name">
            <summary>
            Gets or sets the template name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.TopicTemplates.TopicTemplateDto.ViewPath">
            <summary>
            Gets or sets the view path
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.TopicTemplates.TopicTemplateDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto">
            <summary>
            Represents a vendor attribute
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto.IsRequired">
            <summary>
            Gets or sets a value indicating whether the attribute is required
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeDto.AttributeControlTypeId">
            <summary>
            Gets or sets the attribute control type identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto">
            <summary>
            Represents a vendor attribute value
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto.IsPreSelected">
            <summary>
            Gets or sets a value indicating whether the value is pre-selected
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorAttributeValueDto.VendorAttributeId">
            <summary>
            Gets or sets the vendor attribute identifier
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto">
            <summary>
            Represents a vendor
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.Email">
            <summary>
            Gets or sets the email
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.PictureId">
            <summary>
            Gets or sets the picture identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.AddressId">
            <summary>
            Gets or sets the address identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.AdminComment">
            <summary>
            Gets or sets the admin comment
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.Active">
            <summary>
            Gets or sets a value indicating whether the entity is active
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.Deleted">
            <summary>
            Gets or sets a value indicating whether the entity has been deleted
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.DisplayOrder">
            <summary>
            Gets or sets the display order
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.MetaKeywords">
            <summary>
            Gets or sets the meta keywords
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.MetaDescription">
            <summary>
            Gets or sets the meta description
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.MetaTitle">
            <summary>
            Gets or sets the meta title
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.AllowCustomersToSelectPageSize">
            <summary>
            Gets or sets a value indicating whether customers can select the page size
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.PageSizeOptions">
            <summary>
            Gets or sets the available customer selectable page size options
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.PriceRangeFiltering">
            <summary>
            Gets or sets a value indicating whether the price range filtering is enabled
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.PriceFrom">
            <summary>
            Gets or sets the "from" price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.PriceTo">
            <summary>
            Gets or sets the "to" price
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorDto.ManuallyPriceRange">
            <summary>
            Gets or sets a value indicating whether the price range should be entered manually
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorNoteDto.VendorId">
            <summary>
            Gets or sets the vendor identifier
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorNoteDto.Note">
            <summary>
            Gets or sets the note
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Dto.Vendors.VendorNoteDto.CreatedOnUtc">
            <summary>
            Gets or sets the date and time of vendor note creation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Helpers.CheckAccessWebApiAttribute">
            <summary>
            Represents a filter attribute that confirms access to Web API
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Helpers.CheckAccessWebApiAttribute.#ctor(System.Boolean)">
            <summary>
            Create instance of the filter attribute
            </summary>
            <param name="ignore">Whether to ignore the execution of filter actions</param>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Helpers.CheckAccessWebApiAttribute.IgnoreFilter">
            <summary>
            Gets a value indicating whether to ignore the execution of filter actions
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Helpers.CheckAccessWebApiAttribute.CheckAccessWebApiFilter">
            <summary>
            Represents a filter that confirms access to Web API
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Helpers.CheckAccessWebApiAttribute.CheckAccessWebApiFilter.CheckAccessWebApiAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called early in the filter pipeline to confirm request is authorized
            </summary>
            <param name="context">Authorization filter context</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Helpers.CheckAccessWebApiAttribute.CheckAccessWebApiFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called early in the filter pipeline to confirm request is authorized
            </summary>
            <param name="context">Authorization filter context</param>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration">
            <summary>
            AutoMapper configuration for web API Backend Dto
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateMaps">
            <summary>
            Create WebApi specific maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateTopicsMaps">
            <summary>
            Create topics maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateVendorsMap">
            <summary>
            Create vendors maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateAffiliateMaps">
            <summary>
            Create affiliate maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateTaxCategoryMaps">
            <summary>
            Create tax category maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateBlogMaps">
            <summary>
            Create blog maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateCatalogMaps">
            <summary>
            Create catalog maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateScheduleTaskMaps">
            <summary>
            Create schedule task maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateStoreMaps">
            <summary>
            Create store maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateShippingMaps">
            <summary>
            Create shipping maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateDiscountsMaps">
            <summary>
            Create discounts maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateOrderMaps">
            <summary>
            Create order maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateNewsMaps">
            <summary>
            Create news maps 
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateMessagesMaps">
            <summary>
            Create messages maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateMediaMaps">
            <summary>
            Create media maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateLoggingMaps">
            <summary>
            Create logging maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateLocalizationMaps">
            <summary>
            Create localization maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateCommonMaps">
            <summary>
            Create common maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateCustomerMaps">
            <summary>
            Create customer maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateGdprMaps">
            <summary>
            Create GDPR maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateDirectoryMaps">
            <summary>
            Create directory maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreatePluginMaps">
            <summary>
            Create plugin maps
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.Mapper.WebApiBackendMapperConfiguration.CreateForumsMaps">
            <summary>
            Create forums maps
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.PluginNopStartup">
            <summary>
            Represents object for the configuring services on application startup
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.PluginNopStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add and configure any of the middleware
            </summary>
            <param name="services">Collection of service descriptors</param>
            <param name="configuration">Configuration of the application</param>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.PluginNopStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure the using of added middleware
            </summary>
            <param name="application">Builder for configuring an application's request pipeline</param>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.PluginNopStartup.Order">
            <summary>
            Gets order of this startup configuration implementation
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.RouteProvider">
            <summary>
            Represents plugin route provider
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.RouteProvider.RegisterRoutes(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Register routes
            </summary>
            <param name="endpointRouteBuilder">Route builder</param>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.Infrastructure.RouteProvider.Priority">
            <summary>
            Gets a priority of route provider
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Services.Security.WebApiBackendPermissionProvider">
            <summary>
            Web API Backend permission provider
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Services.Security.WebApiBackendPermissionProvider.GetPermissions">
            <summary>
            Get permissions
            </summary>
            <returns>Permissions</returns>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.Services.Security.WebApiBackendPermissionProvider.GetDefaultPermissions">
            <summary>
            Get default permissions
            </summary>
            <returns>Permissions</returns>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.Validators.ConfigurationValidator">
            <summary>
            Represents configuration model validator
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendDefaults">
            <summary>
            Represents plugin constants
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendDefaults.SystemName">
            <summary>
            Gets a plugin system name
            </summary>
        </member>
        <member name="P:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendDefaults.ConfigurationRouteName">
            <summary>
            Gets the configuration route name
            </summary>
        </member>
        <member name="T:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendPlugin">
            <summary>
            Represents the Web API Backend plugin
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendPlugin.GetConfigurationPageUrl">
            <summary>
            Gets a configuration page URL
            </summary>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendPlugin.InstallAsync">
            <summary>
            Install the plugin
            </summary>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
        <member name="M:Nop.Plugin.Misc.WebApi.Backend.WebApiBackendPlugin.UninstallAsync">
            <summary>
            Uninstall the plugin
            </summary>
            <returns>A task that represents the asynchronous operation</returns>
        </member>
    </members>
</doc>
